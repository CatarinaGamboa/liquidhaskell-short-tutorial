42:1-42:4::for :: "forall a b. [a] -> (a -> b) -> [b]"
42:7-42:11::_ :: "((a -> b) -> [a] -> [b]) -> [a] -> (a -> b) -> [b]"
42:12-42:15::lq_anf__d1f8 :: "(a -> b) -> x3:[a] -> {v : [b] | len v == len x3}"
44:1-44:5::mult :: "forall a. (Num [Bivariant]\n[] a) => [[a]] -> [[a]] -> [[a]]"
44:6-44:8::m1 :: "[[a]]"
44:9-44:11::m2 :: "[[a]]"
44:19-44:22::_ :: "[[a]] -> ([a] -> [a]) -> [[a]]"
44:23-44:25::m1 :: "{v : [[a]] | v == m1 && len v >= 0}"
44:26-44:27::_ :: "(([a] -> [a]) -> [[a]]) -> ([a] -> [a]) -> [[a]]"
44:29-44:31::ri :: "[a]"
45:21-45:24::_ :: "[[a]] -> ([a] -> a) -> [a]"
45:25-45:28::m2' :: "{v : [{v : [a] | len v > 0}] | v == m2' && len v >= 0}"
45:29-45:30::_ :: "(([a] -> a) -> [a]) -> ([a] -> a) -> [a]"
45:32-45:34::cj :: "[a]"
46:23-46:30::_ :: "[a] -> [a] -> a"
46:31-46:33::ri :: "{v : [a] | v == ri && len v >= 0}"
46:34-46:36::cj :: "{v : [a] | v == cj && len v >= 0}"
48:5-48:8::m2' :: "[{v : [a] | len v > 0}]"
48:19-48:30::_ :: "[[a]] -> [{v : [a] | len v > 0}]"
48:31-48:33::m2 :: "{v : [[a]] | v == m2 && len v >= 0}"
49:5-49:12::dotProd :: "forall a. (Num [Bivariant]\n[] a) => [a] -> [a] -> a"
49:13-49:14::x :: "[a]"
49:15-49:16::y :: "[a]"
49:19-49:22::lq_anf__d1f9 :: "[a] -> a"
49:23-49:24::_ :: "([a] -> a) -> [a] -> a"
49:25-49:34::_ :: "(a -> a -> a)\n-> x4:[a]\n-> x5:[a]\n-> {v : [a] | len v <= len x5 && len v <= len x4}"
49:35-49:38::lq_anf__d1fa :: "x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}"
49:39-49:40::x :: "{v : [a] | v == x && len v >= 0}"
49:41-49:42::y :: "{v : [a] | v == y && len v >= 0}"
150:1-150:8::groupBy :: "forall a. (a -> a -> Bool) -> [a] -> [{v : [a] | len v > 0}]"
150:21-150:23::[] :: "forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}"
151:22-151:23::x :: "{VV : a | VV == x}"
151:23-151:24::_ :: "x1:a\n-> x2:[a]\n-> {v : [a] | null v <=> false && len v == 1 + len x2 && xListSelector v == x1 && xsListSelector v == x2}"
151:24-151:26::ys :: "{v : [a] | v == ys && v == ys && len v == len ys && len v >= 0 && len v <= len xs}"
151:28-151:29::_ :: "x1:{v : [a] | len v > 0}\n-> x2:[{v : [a] | len v > 0}]<\\_ VV -> len v > 0>\n-> {v : [{v : [a] | len v > 0}]<\\_ VV -> len v > 0> | null v <=> false && len v == 1 + len x2 && xListSelector v == x1 && xsListSelector v == x2}"
151:30-151:37::groupBy :: "forall a. (a -> a -> Bool) -> [a] -> [{v : [a] | len v > 0}]"
151:38-151:40::ds_d1fS :: "a -> a -> Bool"
151:41-151:43::zs :: "{v : [a] | v == zs && v == zs && len v == len zs && len v >= 0 && len v <= len xs}"
152:10-152:12::ys :: "{VV : [a] | VV == ys && len VV == len ys && len VV >= 0 && len VV <= len xs}"
152:13-152:15::zs :: "{VV : [a] | VV == zs && len VV == len zs && len VV >= 0 && len VV <= len xs}"
152:21-152:25::_ :: "(a -> Bool)\n-> x3:[a]\n-> ({v : [a] | len v <= len x3}, {v : [a] | len v <= len x3})"
152:27-152:29::_ :: "a -> a -> Bool"
152:30-152:31::x :: "{VV : a | VV == x}"
152:33-152:35::xs :: "{v : [a] | v == xs && len v >= 0}"
181:1-181:10::partition :: "forall a. {v : Int | v > 0} -> [a] -> [{v : [a] | len v > 0}]"
181:27-181:29::[] :: "forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}"
182:27-182:29::zs :: "{v : [a] | v == zs && len v >= 0}"
182:30-182:31::_ :: "x1:{v : [a] | len v > 0}\n-> x2:[{v : [a] | len v > 0}]<\\_ VV -> len v > 0>\n-> {v : [{v : [a] | len v > 0}]<\\_ VV -> len v > 0> | null v <=> false && len v == 1 + len x2 && xListSelector v == x1 && xsListSelector v == x2}"
182:32-182:41::partition :: "forall a. {v : Int | v > 0} -> [a] -> [{v : [a] | len v > 0}]"
182:42-182:46::ds_d1fO :: "{v : Int | v > 0}"
182:47-182:50::zs' :: "{v : [a] | v == zs' && len v >= 0}"
184:5-184:7::zs :: "[a]"
184:27-184:31::_ :: "x1:Int\n-> x2:[a]\n-> {v : [a] | not (x1 >= 0) => len v == 0 && x1 >= 0 => len v == if (len x2 < x1) then len x2 else x1}"
184:32-184:36::ds_d1fO :: "{v : Int | v > 0}"
184:37-184:39::ds_d1fP :: "{v : [a] | len v >= 0}"
185:5-185:8::zs' :: "[a]"
185:27-185:31::_ :: "x1:Int\n-> x2:[a]\n-> {v : [a] | not (x1 >= 0) => len v == len x2 && x1 >= 0 => len v == if (len x2 < x1) then 0 else len x2 - x1}"
185:32-185:36::ds_d1fO :: "{v : Int | v > 0}"
185:37-185:39::ds_d1fP :: "{v : [a] | len v >= 0}"
215:1-215:8::zipWith :: "forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | len v == len x4}\n-> {v : [c] | len v == len x4}"
215:9-215:10::f :: "a -> b -> c"
215:27-215:28::_ :: "a -> b -> c"
215:29-215:30::a :: "{VV : a | VV == a}"
215:31-215:32::b :: "{VV : a | VV == b}"
215:33-215:34::_ :: "x1:a\n-> x2:[a]\n-> {v : [a] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
215:35-215:42::zipWith :: "forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | len v == len x4}\n-> {v : [c] | len v == len x4}"
215:43-215:44::f :: "a -> b -> c"
215:45-215:47::as :: "{v : [a] | v == as && len v >= 0}"
215:48-215:50::bs :: "{v : [a] | v == bs && len v >= 0}"
216:27-216:29::[] :: "forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}"
267:1-267:10::transpose :: "forall a.\nx1:Int\n-> x2:{v : Int | v > 0}\n-> {v : [{v : [a] | len v == x1}] | len v == x2}\n-> {v : [{v : [a] | len v == x2}] | len v == x1}"
267:19-267:21::[] :: "forall a <p :: a a -> Prop>.\n{v : [a]<\\x4 VV -> p x4> | null v <=> true && len v == 0}"
269:5-269:10::row0' :: "{v : [a] | null v <=> false && v == row0' && xListSelector v == col00 && len v >= 0}"
269:11-269:12::_ :: "x1:{v : [a] | len v == len rest && len v == len fix && len v > 0 && len v > len row1s}\n-> x2:[{v : [a] | len v == len x1 && len v == len rest && len v == len fix && len v > 0 && len v > len row1s}]<\\x21 VV -> len v == len x21 && len v == len rest && len v == len fix && len v > 0 && len v > len row1s>\n-> {v : [{v : [a] | len v == len rest && len v == len fix && len v > 0 && len v > len row1s}]<\\x9 VV -> len v == len rest && len v == len x9 && len v == len fix && len v > 0 && len v > len row1s> | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
269:13-269:19::row1s' :: "{v : [[a]] | v == row1s' && len v >= 0}"
271:7-271:12::row0' :: "{v : [a] | null v <=> false && xListSelector v == col00}"
271:19-271:24::col00 :: "{VV : a | VV == col00}"
271:26-271:27::_ :: "x1:a\n-> x2:[a]\n-> {v : [a] | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
271:28-271:60::lq_anf__d17F :: "{v : [a] | len v == len row1s && len v >= 0 && len v < len rest && len v <= len row1s}"
271:30-271:34::col0 :: "{VV : a | VV == col0}"
271:53-271:58::row1s :: "{v : [[a]] | v == row1s && len v >= 0}"
272:7-272:11::rest :: "{v : [{v : [a] | len v == len col01s && len v >= 0}]<\\x7 VV -> len v == len col01s && len v == len x7 && len v >= 0> | null v <=> false && xListSelector v == col01s}"
272:19-272:25::col01s :: "{v : [a] | v == col01s && len v >= 0}"
272:26-272:27::_ :: "x1:{v : [a] | len v == len col01s && len v >= 0}\n-> x2:[{v : [a] | len v == len col01s && len v == len x1 && len v >= 0}]<\\x18 VV -> len v == len col01s && len v == len x18 && len v >= 0>\n-> {v : [{v : [a] | len v == len col01s && len v >= 0}]<\\x9 VV -> len v == len col01s && len v == len x9 && len v >= 0> | null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"
272:28-272:60::lq_anf__d17z :: "{v : [{v : [a] | len v == len col01s && len v >= 0}] | len v == len row1s && len v >= 0 && len v <= len row1s}"
272:30-272:35::col1s :: "{v : [a] | v == col1s && len v >= 0}"
272:53-272:58::row1s :: "{v : [[a]] | v == row1s && len v >= 0}"
273:7-273:13::row1s' :: "[[a]]"
273:19-273:28::transpose :: "forall a.\nx1:Int\n-> x2:{v : Int | v > 0}\n-> {v : [{v : [a] | len v == x1}] | len v == x2}\n-> {v : [{v : [a] | len v == x2}] | len v == x1}"
273:30-273:31::ds_d16Q :: "Int"
273:31-273:32::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
273:32-273:33::lq_anf__d17A :: "{v : Int | v == (1  :  int)}"
273:35-273:36::ds_d16R :: "{v : Int | v > 0}"
273:37-273:41::rest :: "{v : [{v : [a] | len v == len col01s && len v >= 0}]<\\x9 VV -> len v == len col01s && len v == len x9 && len v >= 0> | null v <=> false && v == rest && xListSelector v == col01s && len v >= 0}"
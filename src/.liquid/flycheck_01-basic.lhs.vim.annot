49:1-49:5::zero :: "{v : Int | v == 0}"
49:9-49:10::I# :: "x1:Int# -> {v : Int | v == (x1  :  int)}"
52:1-52:4::one :: "{v : Int | v /= 0}"
52:9-52:10::I# :: "x1:Int# -> {v : Int | v == (x1  :  int)}"
53:1-53:4::two :: "{v : Int | v /= 0}"
53:9-53:10::I# :: "x1:Int# -> {v : Int | v == (x1  :  int)}"
54:1-54:6::three :: "{v : Int | v /= 0}"
54:9-54:10::I# :: "x1:Int# -> {v : Int | v == (x1  :  int)}"
64:1-64:5::one' :: "{v : Int | v == 0}"
64:8-64:9::I# :: "x1:Int# -> {v : Int | v == (x1  :  int)}"
111:1-111:6::zero' :: "{v : Int | v >= 0}"
111:13-111:17::zero :: "{v : Int | v == 0 && v == Intro.zero}"
119:1-119:7::zero'' :: "{v : Int | v mod 2 == 0}"
119:14-119:18::zero :: "{v : Int | v == 0 && v == Intro.zero}"
127:1-127:8::zero''' :: "{v : Int | v mod 2 == 0 && v < 100 && 0 <= v}"
127:15-127:19::zero :: "{v : Int | v == 0 && v == Intro.zero}"
153:1-153:9::zero'''' :: "Int"
153:12-153:13::I# :: "x1:Int# -> {v : Int | v == (x1  :  int)}"
174:1-174:4::die :: "forall a. {VV : [Char] | false} -> a"
174:5-174:8::msg :: "{VV : [Char] | false}"
174:11-174:16::_ :: "[Char] -> a"
174:17-174:20::msg :: "{v : [Char] | false}"
188:1-188:8::cantDie :: "()"
188:14-188:19::lq_anf__d1Hc :: "Integer"
188:16-188:17::_ :: "x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"
188:20-188:22::_ :: "x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == v}"
189:18-189:21::_ :: "{v : [Char] | false} -> ()"
189:22-189:38::lq_anf__d1Hg :: "{v : [Char] | len v >= 0}"
190:18-190:20::() :: "{v : () | v == GHC.Tuple.()}"
199:1-199:7::canDie :: "()"
199:13-199:18::lq_anf__d1H5 :: "Integer"
199:15-199:16::_ :: "x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"
199:19-199:21::_ :: "x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == v}"
200:17-200:20::_ :: "{v : [Char] | false} -> ()"
200:21-200:37::lq_anf__d1H9 :: "{v : [Char] | len v >= 0}"
201:17-201:19::() :: "{v : () | v == GHC.Tuple.()}"
218:1-218:8::divide' :: "Int -> Int -> Int"
218:9-218:10::n :: "Int"
218:15-218:18::_ :: "{v : [Char] | false} -> Int"
218:19-218:35::lq_anf__d1H2 :: "{v : [Char] | len v >= 0}"
219:15-219:16::n :: "{v : Int | v == n}"
219:17-219:22::_ :: "x1:Int\n-> x2:{v : Int | v /= 0}\n-> {v : Int | x1 >= 0 && x2 >= 0 => v >= 0 && x1 >= 0 && x2 >= 1 => v <= x1 && v == x1 / x2}"
219:23-219:24::ds_d1Gs :: "Int"
232:1-232:7::divide :: "Int -> {v : Int | v /= 0} -> Int"
232:14-232:17::_ :: "{v : [Char] | false} -> Int"
232:18-232:34::lq_anf__d1GU :: "{v : [Char] | len v >= 0}"
233:14-233:15::ds_d1Gw :: "Int"
233:16-233:21::_ :: "x1:Int\n-> x2:{v : Int | v /= 0}\n-> {v : Int | x1 >= 0 && x2 >= 0 => v >= 0 && x1 >= 0 && x2 >= 1 => v <= x1 && v == x1 / x2}"
233:22-233:23::ds_d1Gx :: "{v : Int | v /= 0}"
258:1-258:5::avg2 :: "Int -> Int -> Int"
258:6-258:7::x :: "Int"
258:8-258:9::y :: "Int"
258:14-258:20::_ :: "Int -> {v : Int | v /= 0} -> Int"
258:22-258:23::x :: "{v : Int | v == x}"
258:24-258:25::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"
258:26-258:27::y :: "{v : Int | v == y}"
258:29-258:30::lq_anf__d1GW :: "{v : Int | v == (2  :  int)}"
259:1-259:5::avg3 :: "Int -> Int -> Int -> Int"
259:6-259:7::x :: "Int"
259:8-259:9::y :: "Int"
259:10-259:11::z :: "Int"
259:14-259:20::_ :: "Int -> {v : Int | v /= 0} -> Int"
259:22-259:23::x :: "{v : Int | v == x}"
259:24-259:25::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"
259:26-259:27::y :: "{v : Int | v == y}"
259:28-259:29::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"
259:30-259:31::z :: "{v : Int | v == z}"
259:33-259:34::lq_anf__d1GZ :: "{v : Int | v == (3  :  int)}"
266:1-266:4::avg :: "[Int] -> Int"
266:5-266:7::xs :: "[Int]"
266:13-266:19::_ :: "Int -> {v : Int | v /= 0} -> Int"
266:20-266:25::total :: "{v : Int | v == total}"
266:26-266:27::n :: "{v : Int | v == n && v == len xs}"
268:5-268:10::total :: "Int"
268:13-268:16::_ :: "[Int] -> Int"
268:17-268:19::xs :: "{v : [Int] | v == xs && len v >= 0}"
269:5-269:6::n :: "{v : Int | v == len xs}"
269:13-269:19::_ :: "x1:[Int] -> {v : Int | v == len x1}"
269:20-269:22::xs :: "{v : [Int] | v == xs && len v >= 0}"
283:1-283:4::abs :: "Int -> {v : Int | v >= 0}"
283:5-283:6::n :: "Int"
284:5-284:6::lq_anf__d1Hh :: "{v : Int | v == (0  :  int)}"
284:7-284:8::_ :: "x1:Int -> x2:Int -> {v : Bool | Prop v <=> x1 < v}"
284:9-284:10::n :: "{v : Int | v == n}"
284:17-284:18::n :: "{v : Int | v == n}"
285:17-285:18::lq_anf__d1Hk :: "{v : Int | v == (0  :  int)}"
285:19-285:20::_ :: "x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"
285:21-285:22::n :: "{v : Int | v == n}"
314:1-314:5::calc :: "forall a. (IO a)"
314:11-314:19::_ :: "[Char] -> (IO ())"
314:20-314:37::lq_anf__d1Hu :: "{v : [Char] | len v >= 0}"
315:11-315:12::n :: "Int"
315:16-315:22::lq_anf__d1Hw :: "(IO Int)"
316:11-316:19::_ :: "[Char] -> (IO ())"
316:20-316:39::lq_anf__d1Hx :: "{v : [Char] | len v >= 0}"
317:11-317:12::d :: "Int"
317:16-317:22::lq_anf__d1Hz :: "(IO Int)"
318:11-318:19::_ :: "[Char] -> (IO ())"
318:21-318:27::_ :: "Int -> Int -> [Char]"
318:28-318:29::n :: "{v : Int | v == n}"
318:30-318:31::d :: "{v : Int | v == d}"
319:11-319:15::lq_anf__d1HC :: "(IO a)"
327:1-327:7::result :: "Int -> Int -> [Char]"
327:8-327:9::n :: "Int"
327:10-327:11::d :: "Int"
328:5-328:15::_ :: "x1:Int -> {v : Bool | Prop v <=> x1 > 0}"
328:16-328:17::d :: "{v : Int | v == d}"
328:20-328:31::lq_anf__d1Hr :: "{v : [Char] | len v >= 0}"
328:32-328:34::_ :: "x1:[Char] -> x2:[Char] -> {v : [Char] | len v == len x1 + len v}"
328:35-328:39::_ :: "Int -> [Char]"
328:41-328:42::n :: "{v : Int | v == n}"
328:43-328:51::_ :: "Int -> {v : Int | v /= 0} -> Int"
328:52-328:53::d :: "{v : Int | v == d}"
329:20-329:63::_ :: "[Char]"
337:1-337:11::isPositive :: "x1:Int -> {v : Bool | Prop v <=> x1 > 0}"
337:12-337:13::x :: "Int"
337:16-337:17::x :: "{v : Int | v == x}"
337:18-337:19::_ :: "x1:Int -> x2:Int -> {v : Bool | Prop v <=> x1 > v}"
337:20-337:21::lq_anf__d1Ho :: "{v : Int | v == (0  :  int)}"
369:1-369:8::lAssert :: "forall a. Bool -> a -> a"
369:15-369:16::x :: "a"
369:19-369:20::x :: "{VV : a | VV == x}"
370:19-370:22::_ :: "{v : [Char] | false} -> a"
370:23-370:48::lq_anf__d1GH :: "{v : [Char] | len v >= 0}"
378:1-378:4::yes :: "()"
378:7-378:14::_ :: "Bool -> () -> ()"
378:16-378:21::lq_anf__d1GP :: "Integer"
378:18-378:19::_ :: "x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"
378:22-378:24::_ :: "x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == v}"
378:28-378:30::() :: "{v : () | v == GHC.Tuple.()}"
381:1-381:3::no :: "()"
381:6-381:13::_ :: "Bool -> () -> ()"
381:15-381:20::lq_anf__d1GK :: "Integer"
381:17-381:18::_ :: "x1:Integer -> x2:Integer -> {v : Integer | v == x1 + x2}"
381:21-381:23::_ :: "x1:Integer -> x2:Integer -> {v : Bool | Prop v <=> x1 == v}"
381:27-381:29::() :: "{v : () | v == GHC.Tuple.()}"
398:1-398:9::truncate :: "Int -> Int -> Int"
398:10-398:11::i :: "Int"
398:12-398:15::max :: "Int"
399:5-399:7::i' :: "{v : Int | v == i' && v >= 0}"
399:8-399:10::_ :: "x1:Int -> x2:Int -> {v : Bool | Prop v <=> x1 <= v}"
399:11-399:15::max' :: "{v : Int | v == max' && v >= 0}"
399:18-399:19::i :: "{v : Int | v == i}"
400:18-400:22::max' :: "{v : Int | v == max' && v >= 0}"
400:23-400:24::_ :: "x1:Int\n-> x2:Int\n-> {v : Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"
400:26-400:27::i :: "{v : Int | v == i}"
400:28-400:36::_ :: "Int -> {v : Int | v /= 0} -> Int"
400:37-400:39::i' :: "{v : Int | v == i' && v >= 0}"
402:7-402:9::i' :: "{v : Int | v >= 0}"
402:18-402:21::_ :: "Int -> {v : Int | v >= 0}"
402:22-402:23::i :: "{v : Int | v == i}"
403:7-403:11::max' :: "{v : Int | v >= 0}"
403:18-403:21::_ :: "Int -> {v : Int | v >= 0}"
403:22-403:25::max :: "{v : Int | v == max}"
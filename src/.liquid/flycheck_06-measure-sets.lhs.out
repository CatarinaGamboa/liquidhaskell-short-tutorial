UNSAFE
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:143:20-24: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : GHC.Types.Bool | not (Prop VV) && VV == GHC.Types.False}
 
  not a subtype of Required type
    VV : {VV : GHC.Types.Bool | Prop VV}
 
  In Context
    VV : {VV : GHC.Types.Bool | not (Prop VV) && VV == GHC.Types.False}
    GHC.Types.False
       : {GHC.Types.False : GHC.Types.Bool | not (Prop GHC.Types.False)}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:182:5-55: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : GHC.Types.Bool | Prop VV <=> Prop pre => Prop ?a}
 
  not a subtype of Required type
    VV : {VV : GHC.Types.Bool | Prop VV}
 
  In Context
    VV  : {VV : GHC.Types.Bool | Prop VV <=> Prop pre => Prop ?a}
    GHC.Types.True
        : {GHC.Types.True : GHC.Types.Bool | Prop GHC.Types.True}
    y   : (Data.Set.Base.Set a)
    x   : (Data.Set.Base.Set a)
    pre : {pre : GHC.Types.Bool | Prop pre && pre == GHC.Types.True}
    ?c  : {fix##63#c : (Data.Set.Base.Set a) | ?c == Set_dif ?b y}
    ?b  : {fix##63#b : (Data.Set.Base.Set a) | ?b == Set_cup x y}
    ?a  : {fix##63#a : GHC.Types.Bool | Prop ?a <=> x == ?c}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:258:15-29: Error: Liquid Type Mismatch
  Inferred type
    VV : [a]
 
  not a subtype of Required type
    VV : {VV : [a] | elems VV == elems xs}
 
  In Context
    VV : {VV : [a] | len VV >= 0}
    xs : {v : [a] | len v >= 0}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:275:26-46: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : GHC.Types.Bool | Prop VV <=> ?a == ?c}
 
  not a subtype of Required type
    VV : {VV : GHC.Types.Bool | Prop VV}
 
  In Context
    VV  : {VV : GHC.Types.Bool | Prop VV <=> ?a == ?c}
    zs  : {zs : [a] | zs == zs && zs == snd ?d && zs == snd ?b && elems zs == Set_cup elems zs elems zs && elems zs == elems zs && len zs == len zs && len zs >= 0}
    xs  : {v : [a] | len v >= 0}
    ys  : {ys : [a] | ys == fst ?d && len ys >= 0}
    xs' : {v : [a] | elems v == Set_cup elems ys elems zs && len v >= 0}
    ?c  : {fix##63#c : (Data.Set.Base.Set a) | ?c == elems xs'}
    ?b  : {fix##63#b : ([a], [a]) | fst ?b == ys && x_Tuple22 ?b == zs && snd ?b == zs && x_Tuple21 ?b == ys}
    ?d  : ([a], [a])
    ?a  : {fix##63#a : (Data.Set.Base.Set a) | ?a == elems xs}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:294:14-27: Error: Liquid Type Mismatch
  Inferred type
    VV : GHC.Types.Bool
 
  not a subtype of Required type
    VV : {VV : GHC.Types.Bool | Prop VV}
 
  In Context
    VV : GHC.Types.Bool
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:297:14-25: Error: Liquid Type Mismatch
  Inferred type
    VV : GHC.Types.Bool
 
  not a subtype of Required type
    VV : {VV : GHC.Types.Bool | not (Prop VV)}
 
  In Context
    VV : GHC.Types.Bool
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:417:19-30: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : [GHC.Types.Int] | unique VV <=> unique ?d && not (Set_mem ?f elems ?d) && null VV <=> false && xListSelector VV == ?f && elems VV == Set_cup Set_sng ?f elems ?d && listElts VV == Set_cup Set_sng ?f listElts ?d && xsListSelector VV == ?d && len VV == 1 + len ?d}
 
  not a subtype of Required type
    VV : {VV : [GHC.Types.Int] | unique VV}
 
  In Context
    VV : {VV : [GHC.Types.Int] | unique VV <=> unique ?d && not (Set_mem ?f elems ?d) && null VV <=> false && xListSelector VV == ?f && elems VV == Set_cup Set_sng ?f elems ?d && listElts VV == Set_cup Set_sng ?f listElts ?d && xsListSelector VV == ?d && len VV == 1 + len ?d && len VV >= 0}
    ?c : {fix##63#c : GHC.Types.Int | ?c == (3  :  int)}
    ?b : {fix##63#b : [GHC.Types.Int] | unique ?b <=> unique ?g && not (Set_mem ?a elems ?g) && null ?b <=> false && xListSelector ?b == ?a && elems ?b == Set_cup Set_sng ?a elems ?g && listElts ?b == Set_cup Set_sng ?a listElts ?g && xsListSelector ?b == ?g && len ?b == 1 + len ?g && len ?b >= 0}
    ?d : {fix##63#d : [GHC.Types.Int] | unique ?d <=> unique ?e && not (Set_mem ?h elems ?e) && null ?d <=> false && xListSelector ?d == ?h && elems ?d == Set_cup Set_sng ?h elems ?e && listElts ?d == Set_cup Set_sng ?h listElts ?e && xsListSelector ?d == ?e && len ?d == 1 + len ?e && len ?d >= 0}
    ?a : {fix##63#a : GHC.Types.Int | ?a == (1  :  int)}
    ?e : {fix##63#e : [GHC.Types.Int] | unique ?e <=> unique ?b && not (Set_mem ?c elems ?b) && null ?e <=> false && xListSelector ?e == ?c && elems ?e == Set_cup Set_sng ?c elems ?b && listElts ?e == Set_cup Set_sng ?c listElts ?b && xsListSelector ?e == ?b && len ?e == 1 + len ?b && len ?e >= 0}
    ?h : {fix##63#h : GHC.Types.Int | ?h == (2  :  int)}
    ?f : {fix##63#f : GHC.Types.Int | ?f == (1  :  int)}
    ?g : {fix##63#g : [GHC.Types.Int] | unique ?g <=> true && null ?g <=> true && Set_emp listElts ?g && elems ?g == Set_empty 0 && len ?g == 0 && len ?g >= 0}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:442:19-23: Error: Liquid Type Mismatch
  Inferred type
    VV : [a]
 
  not a subtype of Required type
    VV : {VV : [a] | unique VV}
 
  In Context
    VV : {VV : [a] | len VV >= 0}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:483:20-35: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : [a] | unique VV <=> unique ?a && not (Set_mem x elems ?a) && null VV <=> false && xListSelector VV == x && elems VV == Set_cup Set_sng x elems ?a && listElts VV == Set_cup Set_sng x listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a}
 
  not a subtype of Required type
    VV : {VV : [a] | unique VV}
 
  In Context
    VV : {VV : [a] | unique VV <=> unique ?a && not (Set_mem x elems ?a) && null VV <=> false && xListSelector VV == x && elems VV == Set_cup Set_sng x elems ?a && listElts VV == Set_cup Set_sng x listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a && len VV >= 0}
    x  : a
    ?a : {fix##63#a : [a] | unique ?a && len ?a >= 0}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:498:17-35: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : [{v : GHC.Types.Int | v >= i && v < j}]<\x3 VV -> v > x3 && v > i && v >= ?b && v < j && ?b <= v> | unique VV <=> unique ?a && not (Set_mem i elems ?a) && null VV <=> false && xListSelector VV == i && elems VV == Set_cup Set_sng i elems ?a && listElts VV == Set_cup Set_sng i listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a}
 
  not a subtype of Required type
    VV : {VV : [{v : GHC.Types.Int | v < j && i <= v}] | unique VV}
 
  In Context
    VV : {VV : [GHC.Types.Int] | unique VV <=> unique ?a && not (Set_mem i elems ?a) && null VV <=> false && xListSelector VV == i && elems VV == Set_cup Set_sng i elems ?a && listElts VV == Set_cup Set_sng i listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a && len VV >= 0}
    i  : GHC.Types.Int
    j  : GHC.Types.Int
    ?c : {fix##63#c : GHC.Types.Int | ?c == (1  :  int)}
    ?b : {fix##63#b : GHC.Types.Int | ?b == i + ?c}
    ?a : {fix##63#a : [GHC.Types.Int] | unique ?a && len ?a >= 0}
 /Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs:568:43-44: Error: Liquid Type Mismatch
  Inferred type
    VV : {VV : [a] | Set_sub elems VV elems ?d && unique VV && VV == xs && VV == xs && VV == snd ?a && VV == snd ?e && elems VV == Set_cup elems ?c elems xs && elems VV == Set_cup elems ?b elems xs && elems VV == Set_cup elems xs elems ?c && elems VV == Set_cup elems xs elems ?b && elems VV == Set_cup elems xs elems xs && elems VV == elems xs && len VV == len xs && VV /= ?d && len VV >= 0 && len VV >= len ?c && len VV >= len ?b && len VV < len ?d}
 
  not a subtype of Required type
    VV : {VV : [a] | not (Set_mem x elems VV) && unique VV}
 
  In Context
    VV : {VV : [a] | Set_sub elems VV elems ?d && unique VV && VV == xs && VV == xs && VV == snd ?a && VV == snd ?e && elems VV == Set_cup elems ?c elems xs && elems VV == Set_cup elems ?b elems xs && elems VV == Set_cup elems xs elems ?c && elems VV == Set_cup elems xs elems ?b && elems VV == Set_cup elems xs elems xs && elems VV == elems xs && len VV == len xs && VV /= ?d && len VV >= 0 && len VV >= len ?c && len VV >= len ?b && len VV < len ?d}
    GHC.Types.[]
       : forall a <p :: a a -> Prop>. [a]
    x  : {VV : a | VV == x && VV == fst ?a && VV == fst ?e}
    xs : {v : [a] | Set_sub elems v elems ?d && unique v && v == snd ?a && v /= ?d && len v >= 0 && len v >= len ?c && len v >= len ?b && len v < len ?d}
    t  : a
    ?c : {fix##63#c : [a] | not (Set_mem t elems ?c) && unique ?c <=> true && null ?c <=> true && Set_emp listElts ?c && unique ?c && ?c == ?b && ?c == GHC.Types.[] && elems ?c == Set_empty 0 && len ?c == 0 && len ?c >= 0}
    ?b : {fix##63#b : [a] | not (Set_mem t elems ?b) && unique ?b && len ?b >= 0}
    ?d : {fix##63#d : [a] | unique ?d && len ?d >= 0}
    ?a : (a, [a])
    ?e : {fix##63#e : (a, [a]) | fst ?e == x && x_Tuple22 ?e == xs && snd ?e == xs && x_Tuple21 ?e == x}
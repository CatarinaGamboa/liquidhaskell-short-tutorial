{"o_errors":[],"o_vars":null,"o_bots":[{"spanInfo":{"startLine":16,"endLine":16,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},{"spanInfo":{"startLine":16,"endLine":16,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true}],"o_types":[[{"spanInfo":{"startLine":228,"endLine":228,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g'","{v : (AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v && v /= i}) | v == g'}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.left","forall a b. (AssocativeMap.Map a b) -> (AssocativeMap.Map a b)"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{VV : a | false}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : a | VV == v}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":47,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":43,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vL","a -> a"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{v : AssocativeMap.Expr | val v && v == v1}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":18,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | val v <=> false}"]]],[{"spanInfo":{"startLine":254,"endLine":254,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}"]]],[{"spanInfo":{"startLine":502,"endLine":502,"endCol":49,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vQ","{v : [GHC.Types.Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v'","{VV : a | VV == v'}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":47,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":184,"endLine":184,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":27,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vP","a"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":18,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] | null v <=> false}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":51,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1tQ","a"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":45,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"(a -> a) -> a -> a"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' < k}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":33,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"GHC.Types.Int\n-> {v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":538,"endLine":538,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","a"]]],[{"spanInfo":{"startLine":511,"endLine":511,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.plus","{v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":31,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:[GHC.Types.Char]\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_sng x1}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":32,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1w5","{v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":23,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vU","{v : (AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | false}) | Set_emp keys v}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":55,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.keys","forall a b.\n(GHC.Classes.Ord a) =>\nx2:(AssocativeMap.Map a b)\n-> {VV : (Data.Set.Base.Set a) | VV == keys x2}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.mem","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:(AssocativeMap.Map a b)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 keys x3}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vW","{v : GHC.Types.Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' == k}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":39,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set [GHC.Types.Char])\n-> x2:(Data.Set.Base.Set [GHC.Types.Char])\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":27,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vM","a"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' < k}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get'","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":53,"startCol":52,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map a b) | v == l}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":32,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e","{v : AssocativeMap.Expr | v == e}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":35,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vb","{v : (AssocativeMap.Map {VV : a | false} b) | keys v == Set_empty 0}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c10","{v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' < k}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":15,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:[GHC.Types.Char]\n-> {v : AssocativeMap.Expr | val v <=> false && free v == Set_sng x1}"]]],[{"spanInfo":{"startLine":225,"endLine":231,"endCol":33,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":63,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set [GHC.Types.Char])\n-> x2:(Data.Set.Base.Set [GHC.Types.Char])\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_dif x1 v}"]]],[{"spanInfo":{"startLine":392,"endLine":392,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}"]]],[{"spanInfo":{"startLine":542,"endLine":542,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":42,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vN","{v : GHC.Types.Bool | not (Set_mem k' keys r)}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vR","{v : AssocativeMap.Expr | val v <=> true && v == i && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":19,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vV","{v : GHC.Types.Int | v == (10  :  int)}"]]],[{"spanInfo":{"startLine":496,"endLine":496,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","a"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["i","AssocativeMap.Expr"]]],[{"spanInfo":{"startLine":410,"endLine":410,"endCol":8,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","a"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":35,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"GHC.Types.Int\n-> {v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.evalAny","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> AssocativeMap.Expr\n-> (Data.Maybe.Maybe {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":24,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":183,"endLine":183,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g'","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v && v /= i})"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":49,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a. {v : (Data.Set.Base.Set a) | Set_emp v}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"GHC.Types.Bool -> a -> a"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | false}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":52,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vT","{v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:b\n-> x3:(AssocativeMap.Map {VV : a | VV < x1} b)\n-> x4:(AssocativeMap.Map {VV : a | x1 < VV} b)\n-> {v : (AssocativeMap.Map a b) | keys v == Set_cup Set_sng x1 Set_cup keys x3 keys x4 && left v == x3 && right v == x4 && value v == x2 && key v == x1}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":49,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1we","{v : (Data.Set.Base.Set [GHC.Types.Char]) | v == free e2}"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get'","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | v == e1}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":75,"startCol":57,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1v4","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":392,"endLine":392,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v'","a"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":14,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{v : AssocativeMap.Expr | val v && v == v1}"]]],[{"spanInfo":{"startLine":201,"endLine":201,"endCol":31,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] | false} -> {v : AssocativeMap.Expr | false}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":37,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}"]]],[{"spanInfo":{"startLine":551,"endLine":551,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.fresh","x1:[GHC.Types.Int]\n-> {v : GHC.Types.Int | not (Set_mem v elems x1)}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.mem","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:(AssocativeMap.Map a b)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 keys x3}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.key","forall a b. (AssocativeMap.Map a b) -> a"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":19,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> {v : AssocativeMap.Expr | Set_sub free v keys x1}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : a | VV == v}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.eval","x1:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> {v : AssocativeMap.Expr | Set_sub free v keys x1}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g","{v : (AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v}) | v == g}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":77,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wg","(Data.Set.Base.Set [GHC.Types.Char])"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":48,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wc","{v : (Data.Set.Base.Set [GHC.Types.Char]) | v == free e2}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":30,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wb","{v : (Data.Set.Base.Set [GHC.Types.Char]) | v == free e1}"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":41,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vd","{v : (Data.Set.Base.Set a) | v == Set_sng k}"]]],[{"spanInfo":{"startLine":477,"endLine":477,"endCol":39,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | null v <=> false}"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}"]]],[{"spanInfo":{"startLine":379,"endLine":379,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.emp","forall a b. {m : (AssocativeMap.Map a b) | Set_emp keys m}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":185,"endLine":185,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":74,"startCol":65,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:[GHC.Types.Char]\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_sng x1}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1w4","x1:{v : AssocativeMap.Expr | false}\n-> {v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":64,"startCol":60,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.keys","forall a b.\n(GHC.Classes.Ord a) =>\nx2:(AssocativeMap.Map a b)\n-> {VV : (Data.Set.Base.Set a) | VV == keys x2}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":56,"startCol":54,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 && Prop v}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":69,"startCol":57,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> {v : (Data.Set.Base.Set a) | v == Set_sng x1}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":76,"startCol":75,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":295,"endLine":295,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":25,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:AssocativeMap.Expr\n-> x2:AssocativeMap.Expr\n-> {v : AssocativeMap.Expr | val v <=> false && free v == Set_cup free x1 free x2}"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.value","forall a b. (AssocativeMap.Map a b) -> b"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.tests","[AssocativeMap.Expr]"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":27,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":52,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{v : AssocativeMap.Expr | v == e2}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | v == e1}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | null v <=> false && v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ok","forall a. {VV : a | false}"]]],[{"spanInfo":{"startLine":502,"endLine":502,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":49,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":49,"startCol":47,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{v : AssocativeMap.Expr | v == e2}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":73,"startCol":70,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1tQ","a"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":21,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a. {v : (Data.Set.Base.Set a) | Set_emp v}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":46,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.val","x1:AssocativeMap.Expr -> {VV : GHC.Types.Bool | Prop VV <=> val x1}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":39,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> {v : (Data.Set.Base.Set a) | v == Set_sng x1}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":42,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vK","{v : GHC.Types.Bool | not (Set_mem k' keys l)}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' < k}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":42,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vE","{v : [GHC.Types.Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{v : AssocativeMap.Expr | v == e2}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":43,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vO","a -> a"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c10","{v : AssocativeMap.Expr | val v <=> true && v == c10 && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":511,"endLine":511,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":66,"startCol":60,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vf","{v : (Data.Set.Base.Set a) | v == keys r}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":53,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1v3","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":28,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c1","{v : AssocativeMap.Expr | val v <=> true && v == c1 && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":551,"endLine":551,"endCol":18,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":45,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' == k}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":67,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vg","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.die","forall a. {v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":477,"endLine":477,"endCol":13,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":39,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set [GHC.Types.Char])\n-> x2:(Data.Set.Base.Set [GHC.Types.Char])\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}"]]],[{"spanInfo":{"startLine":254,"endLine":254,"endCol":27,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a. {v : (Data.Set.Base.Set a) | Set_emp v}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":31,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1va","{v : (AssocativeMap.Map {VV : a | false} b) | keys v == Set_empty 0}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | v == e1}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c1","{v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":496,"endLine":496,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":410,"endLine":410,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["m","{m : (AssocativeMap.Map a b) | Set_mem k' keys m}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":38,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vm","{v : GHC.Types.Int | v == i + j}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | null v <=> false && v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":410,"endLine":410,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get'","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' == k}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"GHC.Types.Bool -> a -> a"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e","AssocativeMap.Expr"]]],[{"spanInfo":{"startLine":392,"endLine":392,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","a"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":57,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1ve","{v : (Data.Set.Base.Set a) | v == keys l}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":44,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> k' == k}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":37,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":27,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":38,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["j","{v : GHC.Types.Int | v == j}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":47,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : a | VV == k'}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":41,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":17,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vZ","{v : AssocativeMap.Expr | val v <=> false && free v == Set_sng x}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":538,"endLine":538,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.mem","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:(AssocativeMap.Map a b)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 keys x3}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":57,"startCol":56,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":66,"startCol":65,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | val v <=> false && v == e1}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.keys","forall a b.\n(GHC.Classes.Ord a) =>\nx2:(AssocativeMap.Map a b)\n-> {VV : (Data.Set.Base.Set a) | VV == keys x2}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{v : AssocativeMap.Expr | val v <=> false && free v == Set_cup free c10 Set_dif free e1 Set_sng x}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"[GHC.Types.Char] -> a"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":37,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"GHC.Types.Int\n-> {v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":40,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vS","{v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> {v : AssocativeMap.Expr | Set_sub free v keys x1}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : a | VV == v}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":18,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v2","{v : AssocativeMap.Expr | val v && v == v2}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.right","forall a b. (AssocativeMap.Map a b) -> (AssocativeMap.Map a b)"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : a | VV == v}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":30,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wd","{v : (Data.Set.Base.Set [GHC.Types.Char]) | v == free e1}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":76,"startCol":65,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wf","{v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_sng x}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.topEval","{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":28,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1uV","{v : (Data.Set.Base.Set a) | v == Set_sng x}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | val v <=> false && v == e1}"]]],[{"spanInfo":{"startLine":379,"endLine":379,"endCol":20,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":19,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1w1","{v : [AssocativeMap.Expr] | null v <=> false && xListSelector v == v2 && len v >= 0}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":48,"startCol":46,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{v : AssocativeMap.Expr | v == e2}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:[GHC.Types.Char]\n-> x2:AssocativeMap.Expr\n-> x3:AssocativeMap.Expr\n-> {v : AssocativeMap.Expr | val v <=> false && free v == Set_cup free x2 Set_dif free v Set_sng x1}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":45,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"(a -> a) -> a -> a"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"({v : AssocativeMap.Expr | false}\n -> {v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | false})\n-> {v : AssocativeMap.Expr | false}\n-> {v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | false}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{v : AssocativeMap.Expr | val v <=> false && v == e2 && free v == Set_cup free c10 Set_dif free e1 Set_sng x}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{v : AssocativeMap.Expr | v == e1}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":47,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1uW","{v : (Data.Set.Base.Set a) | v == elems xs}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":75,"startCol":74,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{v : (AssocativeMap.Map a b) | v == r}"]]],[{"spanInfo":{"startLine":201,"endLine":201,"endCol":50,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vj","{v : [GHC.Types.Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v2","{v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : a | VV == k}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:b\n-> x3:(AssocativeMap.Map {VV : a | VV < x1} b)\n-> x4:(AssocativeMap.Map {VV : a | x1 < VV} b)\n-> {v : (AssocativeMap.Map a b) | keys v == Set_cup Set_sng x1 Set_cup keys x3 keys x4 && left v == x3 && right v == x4 && value v == x2 && key v == x1}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v'","{VV : a | VV == v'}"]]],[{"spanInfo":{"startLine":511,"endLine":511,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.assert","forall a b. a -> b -> b"]]]],"o_templs":[[{"spanInfo":{"startLine":228,"endLine":228,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g'","{lq_tmp_x2279 : (AssocativeMap.Map {lq_tmp_x2277 : [{lq_tmp_x2274 : GHC.Types.Char^\"lq_tmp_x2229\" | k_2228[VV#2227:=lq_tmp_x2274][VV#2234:=lq_tmp_x2277][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo][lq_tmp_x2237:=lq_tmp_x2274][lq_tmp_x2240:=lq_tmp_x2277][lq_tmp_x2218:=lq_tmp_x2279]}]<\\lq_tmp_x2275 VV -> k_2232[VV#2231:=lq_tmp_x2276][lq_tmp_x2230:=lq_tmp_x2275][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo][lq_tmp_x2239:=lq_tmp_x2276][lq_tmp_x2238:=lq_tmp_x2275][lq_tmp_x2218:=lq_tmp_x2279]>^\"lq_tmp_x2236\" | k_2235[VV#2234:=lq_tmp_x2277][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo][lq_tmp_x2240:=lq_tmp_x2277][lq_tmp_x2218:=lq_tmp_x2279]} {lq_tmp_x2278 : AssocativeMap.Expr^\"lq_tmp_x2243\" | k_2242[VV#2241:=lq_tmp_x2278][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo][lq_tmp_x2244:=lq_tmp_x2278][lq_tmp_x2218:=lq_tmp_x2279]}) | keys lq_tmp_x2279 == Set_cup Set_sng x#a1lI keys ds_d1uo && lq_tmp_x2279 == g'#a1lL}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.left","forall k v.\nlq_tmp_x2654:(AssocativeMap.Map k^\"lq_tmp_x179\" v^\"lq_tmp_x180\")^\"lq_tmp_x181\"\n-> (AssocativeMap.Map k^\"lq_tmp_x182\" v^\"lq_tmp_x183\")^\"lq_tmp_x184\""]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x932 : (AssocativeMap.Map {VV : k | VV < k#a1m8} v) | lq_tmp_x932 == l#a1ma}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{VV#2515 : t^\"lq_tmp_x2517\" \"lq_tmp_x21\" | k_2516}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1m8}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : v | VV == v#a1mp}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":47,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall k v.\nlq_tmp_x688:k\n-> lq_tmp_x689:(AssocativeMap.Map {VV : k | VV /= lq_tmp_x688} v)\n-> {v : GHC.Types.Bool | not (Set_mem lq_tmp_x688 keys lq_tmp_x689)}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":43,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vL","lq_tmp_x1830:{VV#1795 : v^\"lq_tmp_x1797\" \"lq_tmp_x166\" | k_1796[lq_tmp_x1789:=lq_anf__d1vK]}\n-> {VV#1795 : v^\"lq_tmp_x1797\" \"lq_tmp_x167\" | k_1796[lq_tmp_x1789:=lq_anf__d1vK][lq_tmp_x1790:=lq_tmp_x1830]}"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{lq_tmp_x2254 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=ds_d1uo][i#a1lB:=e1#a1lJ][VV#1985:=lq_tmp_x2254][lq_tmp_x1988:=ds_d1uo][lq_tmp_x1989:=e1#a1lJ][lq_tmp_x2170:=ds_d1uo][lq_tmp_x2171:=e1#a1lJ][lq_tmp_x2167:=lq_tmp_x2254] && lq_tmp_x2254 == v1#a1lM}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":18,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2444:{lq_tmp_x2441 : AssocativeMap.Expr | Set_emp free lq_tmp_x2441}\n-> {lq_tmp_x2442 : AssocativeMap.Expr | val lq_tmp_x2442}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x2413 : AssocativeMap.Expr | free lq_tmp_x2413 == Set_cup free lq_anf__d1vZ free c1#a1m1 && val lq_tmp_x2413 <=> false}"]]],[{"spanInfo":{"startLine":254,"endLine":254,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","lq_tmp_x2839:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free lq_tmp_x2839}"]]],[{"spanInfo":{"startLine":502,"endLine":502,"endCol":49,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vQ","{lq_tmp_x1927 : [GHC.Types.Char^\"lq_tmp_x10\"]<\\lq_tmp_x1925 VV -> True>^\"lq_tmp_x12\" | len lq_tmp_x1927 >= 0 && lq_tmp_x1927 == lq_anf__d1vQ}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v'","{VV : v | VV == v'#a1m7}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x669 : (AssocativeMap.Map {VV : k | VV < k#a1mu} v) | lq_tmp_x669 == l#a1mv}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":47,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["xs","{lq_tmp_x496 : [a] | len lq_tmp_x496 >= 0 && lq_tmp_x496 == xs#a1my}"]]],[{"spanInfo":{"startLine":184,"endLine":184,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{lq_tmp_x1149 : GHC.Types.Bool | not (Prop lq_tmp_x1149) && lq_tmp_x1149 == GHC.Types.False#68}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":27,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vP","{VV#1875 : v^\"lq_tmp_x1877\" | k_1876[lq_tmp_x1869:=fix##36#dOrd_a1rA][lq_tmp_x1870:=fix#k#39##35#a1mn][lq_tmp_x1871:=l#a1mq] && VV#1875 == lq_anf__d1vP}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":18,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2450:{lq_tmp_x2447 : AssocativeMap.Expr | Set_emp free lq_tmp_x2447}\n-> {lq_tmp_x2448 : AssocativeMap.Expr | val lq_tmp_x2448}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x1642 : (AssocativeMap.Map {VV : k | VV < k#a1mg} v) | lq_tmp_x1642 == l#a1mi}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x612:{VV#614 : k^\"lq_tmp_x616\" | k_615[lq_tmp_x611:=fix##36#dOrd_a1pE]}\n-> lq_tmp_x613:{VV#614 : k^\"lq_tmp_x616\" | k_615[lq_tmp_x611:=fix##36#dOrd_a1pE]}\n-> {lq_tmp_x607 : GHC.Types.Bool | Prop lq_tmp_x607 <=> lq_tmp_x612 < lq_tmp_x613}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1668:{lq_tmp_x1666 : [GHC.Types.Char] | false}\n-> {VV#1669 : v^\"lq_tmp_x1671\" | k_1670}"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x2379 : [{lq_tmp_x2387 : GHC.Types.Char^\"lq_tmp_x2386\" | k_2385[VV#2384:=lq_tmp_x2387][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY]}]<\\lq_tmp_x2378 VV -> k_2389[lq_tmp_x2391:=lq_tmp_x2378][VV#2388:=lq_tmp_x2387][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY]> | listElts lq_tmp_x2379 == Set_cup Set_sng lq_anf__d1vX listElts lq_anf__d1vY && null lq_tmp_x2379 <=> false && len lq_tmp_x2379 == 1 + len lq_anf__d1vY && xsListSelector lq_tmp_x2379 == lq_anf__d1vY && xListSelector lq_tmp_x2379 == lq_anf__d1vX && elems lq_tmp_x2379 == Set_cup Set_sng lq_anf__d1vX elems lq_anf__d1vY}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":51,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1tQ","{VV : k | VV == ds_d1tQ}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":45,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1821:(lq_tmp_x1820:{VV#1823 : v^\"lq_tmp_x1825\" | k_1824}\n              -> {VV#1826 : v^\"lq_tmp_x1828\" | k_1827})\n-> lq_tmp_x1822:{VV#1823 : v^\"lq_tmp_x1825\" | k_1824}\n-> {VV#1826 : v^\"lq_tmp_x1828\" | k_1827}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1587:{VV#1589 : k^\"lq_tmp_x1591\" | k_1590[lq_tmp_x1586:=fix##36#dOrd_a1rm]}\n-> lq_tmp_x1588:{VV#1589 : k^\"lq_tmp_x1591\" | k_1590[lq_tmp_x1586:=fix##36#dOrd_a1rm]}\n-> {lq_tmp_x1582 : GHC.Types.Bool | Prop lq_tmp_x1582 <=> lq_tmp_x1587 < lq_tmp_x1588}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mn}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x1759 : GHC.Types.Bool | Prop lq_tmp_x1759 <=> k'#a1mn < k#a1mo && lq_tmp_x1759 == lq_anf__d1vI}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":33,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1244:GHC.Types.Int\n-> {lq_tmp_x1242 : AssocativeMap.Expr | free lq_tmp_x1242 == Set_empty 0 && val lq_tmp_x1242 <=> true}"]]],[{"spanInfo":{"startLine":538,"endLine":538,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","k"]]],[{"spanInfo":{"startLine":511,"endLine":511,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","t^\"lq_tmp_x166\""]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.plus","lq_tmp_x1197:{v : AssocativeMap.Expr | val v}\n-> lq_tmp_x1198:{v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":31,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2889:{lq_tmp_x2903 : [{lq_tmp_x2900 : GHC.Types.Char^\"lq_tmp_x2892\" | k_2891[VV#2890:=lq_tmp_x2900][VV#2897:=lq_tmp_x2903]}]<\\lq_tmp_x2901 VV -> k_2895[VV#2894:=lq_tmp_x2902][lq_tmp_x2893:=lq_tmp_x2901]>^\"lq_tmp_x2899\" | k_2898[VV#2897:=lq_tmp_x2903]}\n-> {lq_tmp_x2887 : (Data.Set.Base.Set {lq_tmp_x2903 : [{lq_tmp_x2900 : GHC.Types.Char^\"lq_tmp_x2892\" | k_2891[VV#2890:=lq_tmp_x2900][VV#2897:=lq_tmp_x2903]}]<\\lq_tmp_x2901 VV -> k_2895[VV#2894:=lq_tmp_x2902][lq_tmp_x2893:=lq_tmp_x2901]>^\"lq_tmp_x2899\" | k_2898[VV#2897:=lq_tmp_x2903]}) | lq_tmp_x2887 == Set_sng lq_tmp_x2889}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mn}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":32,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1w5","{lq_tmp_x2597 : AssocativeMap.Expr | val lq_tmp_x2597 && lq_tmp_x2597 == lq_anf__d1w5}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":23,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vU","{lq_tmp_x2332 : (AssocativeMap.Map {lq_tmp_x2330 : [{lq_tmp_x2327 : GHC.Types.Char^\"lq_tmp_x2298\" | k_2297[VV#2296:=lq_tmp_x2327][VV#2303:=lq_tmp_x2330][lq_tmp_x2306:=lq_tmp_x2327][lq_tmp_x2309:=lq_tmp_x2330][lq_tmp_x2295:=lq_tmp_x2332]}]<\\lq_tmp_x2328 VV -> k_2301[VV#2300:=lq_tmp_x2329][lq_tmp_x2299:=lq_tmp_x2328][lq_tmp_x2308:=lq_tmp_x2329][lq_tmp_x2307:=lq_tmp_x2328][lq_tmp_x2295:=lq_tmp_x2332]>^\"lq_tmp_x2305\" | k_2304[VV#2303:=lq_tmp_x2330][lq_tmp_x2309:=lq_tmp_x2330][lq_tmp_x2295:=lq_tmp_x2332]} {lq_tmp_x2331 : AssocativeMap.Expr^\"lq_tmp_x2312\" | k_2311[VV#2310:=lq_tmp_x2331][lq_tmp_x2313:=lq_tmp_x2331][lq_tmp_x2295:=lq_tmp_x2332]}) | Set_emp keys lq_tmp_x2332 && lq_tmp_x2332 == lq_anf__d1vU}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":55,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.keys","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x986:(AssocativeMap.Map k v)\n-> {VV : (Data.Set.Base.Set k) | VV == keys lq_tmp_x986}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.mem","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x537:k\n-> lq_tmp_x538:(AssocativeMap.Map k v)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem lq_tmp_x537 keys lq_tmp_x538}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vW","{lq_tmp_x2356 : GHC.Types.Int | lq_tmp_x2356 == (1  :  int) && lq_tmp_x2356 == lq_anf__d1vW}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","lq_tmp_x2839:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free lq_tmp_x2839}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x821 : GHC.Types.Bool | Prop lq_tmp_x821 <=> k'#a1m6 == k#a1m8 && lq_tmp_x821 == lq_anf__d1v6}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1m6}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":39,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x3103:(Data.Set.Base.Set {lq_tmp_x3118 : [{lq_tmp_x3115 : GHC.Types.Char^\"lq_tmp_x3107\" | k_3106[VV#3105:=lq_tmp_x3115][VV#3112:=lq_tmp_x3118][lq_tmp_x3102:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x3116 VV -> k_3110[VV#3109:=lq_tmp_x3117][lq_tmp_x3108:=lq_tmp_x3116][lq_tmp_x3102:=fix##36#dOrd_a1qR]>^\"lq_tmp_x3114\" | k_3113[VV#3112:=lq_tmp_x3118][lq_tmp_x3102:=fix##36#dOrd_a1qR]})\n-> lq_tmp_x3104:(Data.Set.Base.Set {lq_tmp_x3118 : [{lq_tmp_x3115 : GHC.Types.Char^\"lq_tmp_x3107\" | k_3106[VV#3105:=lq_tmp_x3115][VV#3112:=lq_tmp_x3118][lq_tmp_x3102:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x3116 VV -> k_3110[VV#3109:=lq_tmp_x3117][lq_tmp_x3108:=lq_tmp_x3116][lq_tmp_x3102:=fix##36#dOrd_a1qR]>^\"lq_tmp_x3114\" | k_3113[VV#3112:=lq_tmp_x3118][lq_tmp_x3102:=fix##36#dOrd_a1qR]})\n-> {lq_tmp_x3098 : (Data.Set.Base.Set {lq_tmp_x3118 : [{lq_tmp_x3115 : GHC.Types.Char^\"lq_tmp_x3107\" | k_3106[VV#3105:=lq_tmp_x3115][VV#3112:=lq_tmp_x3118][lq_tmp_x3102:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x3116 VV -> k_3110[VV#3109:=lq_tmp_x3117][lq_tmp_x3108:=lq_tmp_x3116][lq_tmp_x3102:=fix##36#dOrd_a1qR]>^\"lq_tmp_x3114\" | k_3113[VV#3112:=lq_tmp_x3118][lq_tmp_x3102:=fix##36#dOrd_a1qR]}) | lq_tmp_x3098 == Set_cup lq_tmp_x3103 lq_tmp_x3104}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1m6}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":27,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vM","{VV#1811 : v^\"lq_tmp_x1813\" | k_1812[lq_tmp_x1805:=fix##36#dOrd_a1rA][lq_tmp_x1806:=fix#k#39##35#a1mn][lq_tmp_x1807:=r#a1mr] && VV#1811 == lq_anf__d1vM}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2127:{lq_tmp_x2122 : AssocativeMap.Expr | val lq_tmp_x2122}\n-> lq_tmp_x2128:{lq_tmp_x2123 : AssocativeMap.Expr | val lq_tmp_x2123}\n-> {lq_tmp_x2124 : AssocativeMap.Expr | val lq_tmp_x2124}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x1594 : GHC.Types.Bool | Prop lq_tmp_x1594 <=> k'#a1me < k#a1mg && lq_tmp_x1594 == lq_anf__d1vC}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","{lq_tmp_x2064 : (AssocativeMap.Map {lq_tmp_x2062 : [{lq_tmp_x2059 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967[VV#1966:=lq_tmp_x2059][VV#1973:=lq_tmp_x2062][VV#1979:=lq_tmp_x2064]}]<\\lq_tmp_x2060 VV -> k_1971[VV#1970:=lq_tmp_x2061][lq_tmp_x1969:=lq_tmp_x2060][VV#1979:=lq_tmp_x2064]>^\"lq_tmp_x1975\" | k_1974[VV#1973:=lq_tmp_x2062][VV#1979:=lq_tmp_x2064]} {lq_tmp_x2063 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977[VV#1976:=lq_tmp_x2063][VV#1979:=lq_tmp_x2064]})^\"lq_tmp_x1981\" | k_1980[VV#1979:=lq_tmp_x2064] && lq_tmp_x2064 == ds_d1uo}"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get'","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1512:k\n-> lq_tmp_x1513:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1512 keys m}\n-> v"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x908 : (AssocativeMap.Map {VV : k | VV < k#a1m8} v) | lq_tmp_x908 == l#a1ma}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":53,"startCol":52,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x732 : (AssocativeMap.Map {VV : k | VV /= ds_d1tQ && VV < ds_d1tS} v) | lq_tmp_x732 == l#a1ml}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":32,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e","{lq_tmp_x2572 : AssocativeMap.Expr | lq_tmp_x2572 == e#a1lU}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":35,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vb","{lq_tmp_x973 : (AssocativeMap.Map {VV#948 : k^\"lq_tmp_x950\" | k_949[lq_tmp_x947:=lq_tmp_x973]} {VV#951 : v^\"lq_tmp_x953\" | k_952[lq_tmp_x947:=lq_tmp_x973]}) | keys lq_tmp_x973 == Set_empty 0 && lq_tmp_x973 == lq_anf__d1vb}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c10","{lq_tmp_x2341 : AssocativeMap.Expr | free lq_tmp_x2341 == Set_empty 0 && val lq_tmp_x2341 <=> true}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x1849 : (AssocativeMap.Map {VV : k | k#a1mo < VV} v) | lq_tmp_x1849 == r#a1mr}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x619 : GHC.Types.Bool | Prop lq_tmp_x619 <=> k'#a1mt < k#a1mu && lq_tmp_x619 == lq_anf__d1v0}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":15,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2405:[GHC.Types.Char]\n-> {lq_tmp_x2403 : AssocativeMap.Expr | free lq_tmp_x2403 == Set_sng lq_tmp_x2405 && val lq_tmp_x2403 <=> false}"]]],[{"spanInfo":{"startLine":225,"endLine":231,"endCol":33,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","lq_tmp_x1988:{VV#1979 : (AssocativeMap.Map {VV#1973 : [{VV#1966 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967}]<\\lq_tmp_x1969 VV -> k_1971>^\"lq_tmp_x1975\" | k_1974} {VV#1976 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977})^\"lq_tmp_x1981\" | k_1980}\n-> lq_tmp_x1989:{VV#1982 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=lq_tmp_x1988]}\n-> {VV#1985 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=lq_tmp_x1988][i#a1lB:=lq_tmp_x1989]}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":63,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x3063:(Data.Set.Base.Set {lq_tmp_x3078 : [{lq_tmp_x3075 : GHC.Types.Char^\"lq_tmp_x3067\" | k_3066[VV#3065:=lq_tmp_x3075][VV#3072:=lq_tmp_x3078][lq_tmp_x3062:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x3076 VV -> k_3070[VV#3069:=lq_tmp_x3077][lq_tmp_x3068:=lq_tmp_x3076][lq_tmp_x3062:=fix##36#dOrd_a1qR]>^\"lq_tmp_x3074\" | k_3073[VV#3072:=lq_tmp_x3078][lq_tmp_x3062:=fix##36#dOrd_a1qR]})\n-> lq_tmp_x3064:(Data.Set.Base.Set {lq_tmp_x3078 : [{lq_tmp_x3075 : GHC.Types.Char^\"lq_tmp_x3067\" | k_3066[VV#3065:=lq_tmp_x3075][VV#3072:=lq_tmp_x3078][lq_tmp_x3062:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x3076 VV -> k_3070[VV#3069:=lq_tmp_x3077][lq_tmp_x3068:=lq_tmp_x3076][lq_tmp_x3062:=fix##36#dOrd_a1qR]>^\"lq_tmp_x3074\" | k_3073[VV#3072:=lq_tmp_x3078][lq_tmp_x3062:=fix##36#dOrd_a1qR]})\n-> {lq_tmp_x3058 : (Data.Set.Base.Set {lq_tmp_x3078 : [{lq_tmp_x3075 : GHC.Types.Char^\"lq_tmp_x3067\" | k_3066[VV#3065:=lq_tmp_x3075][VV#3072:=lq_tmp_x3078][lq_tmp_x3062:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x3076 VV -> k_3070[VV#3069:=lq_tmp_x3077][lq_tmp_x3068:=lq_tmp_x3076][lq_tmp_x3062:=fix##36#dOrd_a1qR]>^\"lq_tmp_x3074\" | k_3073[VV#3072:=lq_tmp_x3078][lq_tmp_x3062:=fix##36#dOrd_a1qR]}) | lq_tmp_x3058 == Set_dif lq_tmp_x3063 lq_tmp_x3064}"]]],[{"spanInfo":{"startLine":392,"endLine":392,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x764:k\n-> lq_tmp_x765:v\n-> lq_tmp_x766:(AssocativeMap.Map k v)\n-> {n : (AssocativeMap.Map k v) | keys n == Set_cup Set_sng lq_tmp_x764 keys lq_tmp_x766}"]]],[{"spanInfo":{"startLine":542,"endLine":542,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{lq_tmp_x682 : GHC.Types.Bool | not (Prop lq_tmp_x682) && lq_tmp_x682 == GHC.Types.False#68}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":42,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vN","{lq_tmp_x1862 : GHC.Types.Bool | not (Set_mem k'#a1mn keys r#a1mr) && lq_tmp_x1862 == lq_anf__d1vN}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vR","{lq_tmp_x2006 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=ds_d1uo][lq_tmp_x1988:=ds_d1uo][VV#1982:=lq_tmp_x2006][lq_tmp_x1993:=lq_tmp_x2006][lq_tmp_x1995:=lq_tmp_x2006] && lq_tmp_x2006 == i#a1lB && lq_tmp_x2006 == AssocativeMap.Const#rqq ds_d1up && free lq_tmp_x2006 == Set_empty 0 && val lq_tmp_x2006 <=> true && lq_tmp_x2006 == lq_anf__d1vR}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":19,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vV","{lq_tmp_x2344 : GHC.Types.Int | lq_tmp_x2344 == (10  :  int) && lq_tmp_x2344 == lq_anf__d1vV}"]]],[{"spanInfo":{"startLine":496,"endLine":496,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","k"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["i","{VV#1982 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=ds_d1uo][lq_tmp_x1988:=ds_d1uo]}"]]],[{"spanInfo":{"startLine":410,"endLine":410,"endCol":8,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","k"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x1620 : (AssocativeMap.Map {VV : k | k#a1mg < VV} v) | lq_tmp_x1620 == r#a1mj}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mt}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":35,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","lq_tmp_x1988:{VV#1979 : (AssocativeMap.Map {VV#1973 : [{VV#1966 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967}]<\\lq_tmp_x1969 VV -> k_1971>^\"lq_tmp_x1975\" | k_1974} {VV#1976 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977})^\"lq_tmp_x1981\" | k_1980}\n-> lq_tmp_x1989:{VV#1982 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=lq_tmp_x1988]}\n-> {VV#1985 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=lq_tmp_x1988][i#a1lB:=lq_tmp_x1989]}"]]],[{"spanInfo":{"startLine":312,"endLine":312,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2343:GHC.Types.Int\n-> {lq_tmp_x2341 : AssocativeMap.Expr | free lq_tmp_x2341 == Set_empty 0 && val lq_tmp_x2341 <=> true}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1081:(Data.Set.Base.Set {VV#1083 : k^\"lq_tmp_x1085\" | k_1084[lq_tmp_x1080:=fix##36#dOrd_a1qy]})\n-> lq_tmp_x1082:(Data.Set.Base.Set {VV#1083 : k^\"lq_tmp_x1085\" | k_1084[lq_tmp_x1080:=fix##36#dOrd_a1qy]})\n-> {lq_tmp_x1076 : (Data.Set.Base.Set {VV#1083 : k^\"lq_tmp_x1085\" | k_1084[lq_tmp_x1080:=fix##36#dOrd_a1qy]}) | lq_tmp_x1076 == Set_cup lq_tmp_x1081 lq_tmp_x1082}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.evalAny","lq_tmp_x2511:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> lq_tmp_x2512:AssocativeMap.Expr\n-> (Data.Maybe.Maybe {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":24,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.True","{lq_tmp_x1113 : GHC.Types.Bool | Prop lq_tmp_x1113 && lq_tmp_x1113 == GHC.Types.True#6u}"]]],[{"spanInfo":{"startLine":183,"endLine":183,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{lq_tmp_x1131 : GHC.Types.Bool | not (Prop lq_tmp_x1131) && lq_tmp_x1131 == GHC.Types.False#68}"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g'","{lq_tmp_x2218 : (AssocativeMap.Map {lq_tmp_x2240 : [{lq_tmp_x2237 : GHC.Types.Char^\"lq_tmp_x2229\" | k_2228[VV#2227:=lq_tmp_x2237][VV#2234:=lq_tmp_x2240][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo]}]<\\lq_tmp_x2238 VV -> k_2232[VV#2231:=lq_tmp_x2239][lq_tmp_x2230:=lq_tmp_x2238][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo]>^\"lq_tmp_x2236\" | k_2235[VV#2234:=lq_tmp_x2240][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo]} {lq_tmp_x2244 : AssocativeMap.Expr^\"lq_tmp_x2243\" | k_2242[VV#2241:=lq_tmp_x2244][lq_tmp_x2223:=fix##36#dOrd_a1se][lq_tmp_x2224:=x#a1lI][lq_tmp_x2225:=v1#a1lM][lq_tmp_x2226:=ds_d1uo]}) | keys lq_tmp_x2218 == Set_cup Set_sng x#a1lI keys ds_d1uo}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":49,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","{lq_tmp_x2119 : (AssocativeMap.Map {lq_tmp_x2117 : [{lq_tmp_x2114 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967[VV#1966:=lq_tmp_x2114][VV#1973:=lq_tmp_x2117][VV#1979:=lq_tmp_x2119]}]<\\lq_tmp_x2115 VV -> k_1971[VV#1970:=lq_tmp_x2116][lq_tmp_x1969:=lq_tmp_x2115][VV#1979:=lq_tmp_x2119]>^\"lq_tmp_x1975\" | k_1974[VV#1973:=lq_tmp_x2117][VV#1979:=lq_tmp_x2119]} {lq_tmp_x2118 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977[VV#1976:=lq_tmp_x2118][VV#1979:=lq_tmp_x2119]})^\"lq_tmp_x1981\" | k_1980[VV#1979:=lq_tmp_x2119] && lq_tmp_x2119 == ds_d1uo}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a.\n{lq_tmp_x1094 : (Data.Set.Base.Set a) | Set_emp lq_tmp_x1094}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1mg}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1853:{lq_tmp_x1858 : GHC.Types.Bool^\"lq_tmp_x1857\" \"lq_tmp_x164\" | k_1856[VV#1855:=lq_tmp_x1858]}\n-> lq_tmp_x1854:{VV#1859 : v^\"lq_tmp_x1861\" \"lq_tmp_x166\" | k_1860}\n-> {VV#1859 : v^\"lq_tmp_x1861\" \"lq_tmp_x167\" | k_1860}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x2524 : GHC.Types.Bool^\"lq_tmp_x2521\" \"lq_tmp_x2517\" \"lq_tmp_x21\" | k_2520[VV#2519:=lq_tmp_x2524][lq_tmp_x2522:=lq_tmp_x2524] && k_2516[VV#2515:=lq_tmp_x2524][lq_tmp_x2522:=lq_tmp_x2524] && lq_tmp_x2524 == lq_anf__d1w2}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":52,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vT","{lq_tmp_x2130 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=ds_d1uo][i#a1lB:=e2#a1lG][VV#1985:=lq_tmp_x2130][lq_tmp_x1988:=ds_d1uo][lq_tmp_x1989:=e2#a1lG][lq_tmp_x2112:=ds_d1uo][lq_tmp_x2113:=e2#a1lG][lq_tmp_x2109:=lq_tmp_x2130] && lq_tmp_x2130 == lq_anf__d1vT}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x962:{VV#966 : k^\"lq_tmp_x968\" | k_967}\n-> lq_tmp_x963:{VV#969 : v^\"lq_tmp_x971\" | k_970}\n-> lq_tmp_x964:(AssocativeMap.Map {VV#966 : k^\"lq_tmp_x968\" | k_967 && VV#966 < lq_tmp_x962} {VV#969 : v^\"lq_tmp_x971\" | k_970})\n-> lq_tmp_x965:(AssocativeMap.Map {VV#966 : k^\"lq_tmp_x968\" | k_967 && lq_tmp_x962 < VV#966} {VV#969 : v^\"lq_tmp_x971\" | k_970})\n-> {lq_tmp_x957 : (AssocativeMap.Map {VV#966 : k^\"lq_tmp_x968\" | k_967} {VV#969 : v^\"lq_tmp_x971\" | k_970}) | right lq_tmp_x957 == lq_tmp_x965 && left lq_tmp_x957 == lq_tmp_x964 && value lq_tmp_x957 == lq_tmp_x963 && key lq_tmp_x957 == lq_tmp_x962 && keys lq_tmp_x957 == Set_cup Set_sng lq_tmp_x962 Set_cup keys lq_tmp_x964 keys lq_tmp_x965}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":49,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1we","{lq_tmp_x3088 : (Data.Set.Base.Set [GHC.Types.Char]) | lq_tmp_x3088 == free e2#a1lS && lq_tmp_x3088 == lq_anf__d1we}"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x883 : (AssocativeMap.Map {VV : k | k#a1m8 < VV} v) | lq_tmp_x883 == r#a1mb}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get'","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1512:k\n-> lq_tmp_x1513:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1512 keys m}\n-> v"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x2933 : AssocativeMap.Expr | lq_tmp_x2933 == e1#a1lO}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":75,"startCol":57,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1v4","{lq_tmp_x756 : GHC.Types.Bool | not (Set_mem ds_d1tQ keys r#a1mm) && lq_tmp_x756 == lq_anf__d1v4}"]]],[{"spanInfo":{"startLine":392,"endLine":392,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v'","v"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1mu}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":14,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{lq_tmp_x2505 : AssocativeMap.Expr | val lq_tmp_x2505 && lq_tmp_x2505 == v1#a1lW}"]]],[{"spanInfo":{"startLine":201,"endLine":201,"endCol":31,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1501:{lq_tmp_x1499 : [GHC.Types.Char] | false}\n-> {lq_tmp_x1505 : AssocativeMap.Expr^\"lq_tmp_x1504\" | k_1503[VV#1502:=lq_tmp_x1505]}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":37,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall k v.\nlq_tmp_x688:k\n-> lq_tmp_x689:(AssocativeMap.Map {VV : k | VV /= lq_tmp_x688} v)\n-> {v : GHC.Types.Bool | not (Set_mem lq_tmp_x688 keys lq_tmp_x689)}"]]],[{"spanInfo":{"startLine":551,"endLine":551,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.fresh","lq_tmp_x514:[GHC.Types.Int]\n-> {v : GHC.Types.Int | not (Set_mem v elems lq_tmp_x514)}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.mem","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x537:k\n-> lq_tmp_x538:(AssocativeMap.Map k v)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem lq_tmp_x537 keys lq_tmp_x538}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1m8}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1me}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1725:{VV#1727 : k^\"lq_tmp_x1729\" | k_1728[lq_tmp_x1724:=fix##36#dEq_a1rD]}\n-> lq_tmp_x1726:{VV#1727 : k^\"lq_tmp_x1729\" | k_1728[lq_tmp_x1724:=fix##36#dEq_a1rD]}\n-> {lq_tmp_x1720 : GHC.Types.Bool | Prop lq_tmp_x1720 <=> lq_tmp_x1725 == lq_tmp_x1726}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.key","forall k v.\nlq_tmp_x2756:(AssocativeMap.Map k^\"lq_tmp_x191\" v^\"lq_tmp_x192\")^\"lq_tmp_x193\"\n-> k^\"lq_tmp_x194\""]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":19,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2325:(AssocativeMap.Map [GHC.Types.Char] {lq_tmp_x2319 : AssocativeMap.Expr | val lq_tmp_x2319})\n-> lq_tmp_x2326:{lq_tmp_x2321 : AssocativeMap.Expr | Set_sub free lq_tmp_x2321 keys lq_tmp_x2325}\n-> {lq_tmp_x2322 : AssocativeMap.Expr | val lq_tmp_x2322}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : v | VV == v#a1m9}"]]],[{"spanInfo":{"startLine":225,"endLine":225,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.eval","lq_tmp_x1928:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> lq_tmp_x1929:{v : AssocativeMap.Expr | Set_sub free v keys lq_tmp_x1928}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g","{lq_tmp_x2571 : (AssocativeMap.Map [GHC.Types.Char] {lq_tmp_x2570 : AssocativeMap.Expr | val lq_tmp_x2570}) | lq_tmp_x2571 == g#a1lT}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":77,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wg","{lq_tmp_x3133 : (Data.Set.Base.Set {lq_tmp_x3132 : [{lq_tmp_x3129 : GHC.Types.Char^\"lq_tmp_x3067\" | k_3066[VV#3065:=lq_tmp_x3129][VV#3072:=lq_tmp_x3132][lq_tmp_x3062:=fix##36#dOrd_a1qR][lq_tmp_x3063:=lq_anf__d1we][lq_tmp_x3064:=lq_anf__d1wf][lq_tmp_x3075:=lq_tmp_x3129][lq_tmp_x3078:=lq_tmp_x3132][lq_tmp_x3058:=lq_tmp_x3133]}]<\\lq_tmp_x3130 VV -> k_3070[VV#3069:=lq_tmp_x3131][lq_tmp_x3068:=lq_tmp_x3130][lq_tmp_x3062:=fix##36#dOrd_a1qR][lq_tmp_x3063:=lq_anf__d1we][lq_tmp_x3064:=lq_anf__d1wf][lq_tmp_x3077:=lq_tmp_x3131][lq_tmp_x3076:=lq_tmp_x3130][lq_tmp_x3058:=lq_tmp_x3133]>^\"lq_tmp_x3074\" | k_3073[VV#3072:=lq_tmp_x3132][lq_tmp_x3062:=fix##36#dOrd_a1qR][lq_tmp_x3063:=lq_anf__d1we][lq_tmp_x3064:=lq_anf__d1wf][lq_tmp_x3078:=lq_tmp_x3132][lq_tmp_x3058:=lq_tmp_x3133]}) | lq_tmp_x3133 == Set_dif lq_anf__d1we lq_anf__d1wf && lq_tmp_x3133 == lq_anf__d1wg}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":48,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wc","{lq_tmp_x2983 : (Data.Set.Base.Set [GHC.Types.Char]) | lq_tmp_x2983 == free e2#a1lP && lq_tmp_x2983 == lq_anf__d1wc}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x847:{VV#849 : k^\"lq_tmp_x851\" | k_850[lq_tmp_x846:=fix##36#dOrd_a1qb]}\n-> lq_tmp_x848:{VV#849 : k^\"lq_tmp_x851\" | k_850[lq_tmp_x846:=fix##36#dOrd_a1qb]}\n-> {lq_tmp_x842 : GHC.Types.Bool | Prop lq_tmp_x842 <=> lq_tmp_x847 < lq_tmp_x848}"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mt}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","lq_tmp_x1988:{VV#1979 : (AssocativeMap.Map {VV#1973 : [{VV#1966 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967}]<\\lq_tmp_x1969 VV -> k_1971>^\"lq_tmp_x1975\" | k_1974} {VV#1976 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977})^\"lq_tmp_x1981\" | k_1980}\n-> lq_tmp_x1989:{VV#1982 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=lq_tmp_x1988]}\n-> {VV#1985 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=lq_tmp_x1988][i#a1lB:=lq_tmp_x1989]}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":30,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wb","{lq_tmp_x2978 : (Data.Set.Base.Set [GHC.Types.Char]) | lq_tmp_x2978 == free e1#a1lO && lq_tmp_x2978 == lq_anf__d1wb}"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1m6}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":41,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vd","{lq_tmp_x1087 : (Data.Set.Base.Set {VV#1020 : k^\"lq_tmp_x1022\" | k_1021[lq_tmp_x1019:=k#a1m3][lq_tmp_x1017:=lq_tmp_x1087]}) | lq_tmp_x1087 == Set_sng k#a1m3 && lq_tmp_x1087 == lq_anf__d1vd}"]]],[{"spanInfo":{"startLine":477,"endLine":477,"endCol":39,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.True","{lq_tmp_x762 : GHC.Types.Bool | Prop lq_tmp_x762 && lq_tmp_x762 == GHC.Types.True#6u}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mn}"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x2379 : [{lq_tmp_x2387 : GHC.Types.Char^\"lq_tmp_x2386\" | k_2385[VV#2384:=lq_tmp_x2387][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY]}]<\\lq_tmp_x2378 VV -> k_2389[lq_tmp_x2391:=lq_tmp_x2378][VV#2388:=lq_tmp_x2387][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY]> | listElts lq_tmp_x2379 == Set_cup Set_sng lq_anf__d1vX listElts lq_anf__d1vY && null lq_tmp_x2379 <=> false && len lq_tmp_x2379 == 1 + len lq_anf__d1vY && xsListSelector lq_tmp_x2379 == lq_anf__d1vY && xListSelector lq_tmp_x2379 == lq_anf__d1vX && elems lq_tmp_x2379 == Set_cup Set_sng lq_anf__d1vX elems lq_anf__d1vY}"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1me}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x1815 : (AssocativeMap.Map {VV : k | k#a1mo < VV} v) | lq_tmp_x1815 == r#a1mr}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1me}"]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x764:k\n-> lq_tmp_x765:v\n-> lq_tmp_x766:(AssocativeMap.Map k v)\n-> {n : (AssocativeMap.Map k v) | keys n == Set_cup Set_sng lq_tmp_x764 keys lq_tmp_x766}"]]],[{"spanInfo":{"startLine":379,"endLine":379,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.emp","forall k v. {m : (AssocativeMap.Map k v) | Set_emp keys m}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x933 : (AssocativeMap.Map {VV : k | k#a1m8 < VV} v) | lq_tmp_x933 == r#a1mb}"]]],[{"spanInfo":{"startLine":185,"endLine":185,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.False","{lq_tmp_x1179 : GHC.Types.Bool | not (Prop lq_tmp_x1179) && lq_tmp_x1179 == GHC.Types.False#68}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mt}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":74,"startCol":65,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x3035:{lq_tmp_x3049 : [{lq_tmp_x3046 : GHC.Types.Char^\"lq_tmp_x3038\" | k_3037[VV#3036:=lq_tmp_x3046][VV#3043:=lq_tmp_x3049]}]<\\lq_tmp_x3047 VV -> k_3041[VV#3040:=lq_tmp_x3048][lq_tmp_x3039:=lq_tmp_x3047]>^\"lq_tmp_x3045\" | k_3044[VV#3043:=lq_tmp_x3049]}\n-> {lq_tmp_x3033 : (Data.Set.Base.Set {lq_tmp_x3049 : [{lq_tmp_x3046 : GHC.Types.Char^\"lq_tmp_x3038\" | k_3037[VV#3036:=lq_tmp_x3046][VV#3043:=lq_tmp_x3049]}]<\\lq_tmp_x3047 VV -> k_3041[VV#3040:=lq_tmp_x3048][lq_tmp_x3039:=lq_tmp_x3047]>^\"lq_tmp_x3045\" | k_3044[VV#3043:=lq_tmp_x3049]}) | lq_tmp_x3033 == Set_sng lq_tmp_x3035}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1w4","lq_tmp_x2596:{lq_tmp_x2592 : AssocativeMap.Expr^\"lq_tmp_x2551\" | k_2550[VV#2549:=lq_tmp_x2592][lq_tmp_x2552:=lq_tmp_x2592]}\n-> {lq_tmp_x2594 : (Data.Maybe.Maybe {lq_tmp_x2593 : AssocativeMap.Expr^\"lq_tmp_x2551\" | k_2550[VV#2549:=lq_tmp_x2593][lq_tmp_x2552:=lq_tmp_x2593][lq_tmp_x2546:=lq_tmp_x2594][lq_tmp_x2548:=lq_tmp_x2596]}) | fromJust lq_tmp_x2594 == lq_tmp_x2596 && isJust lq_tmp_x2594 <=> true}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":64,"startCol":60,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.keys","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x986:(AssocativeMap.Map k v)\n-> {VV : (Data.Set.Base.Set k) | VV == keys lq_tmp_x986}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":56,"startCol":54,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x753:GHC.Types.Bool\n-> lq_tmp_x754:GHC.Types.Bool\n-> {lq_tmp_x750 : GHC.Types.Bool | Prop lq_tmp_x750 <=> Prop lq_tmp_x753 && Prop lq_tmp_x754}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mt}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1mo}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":69,"startCol":57,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall k v.\nlq_tmp_x688:k\n-> lq_tmp_x689:(AssocativeMap.Map {VV : k | VV /= lq_tmp_x688} v)\n-> {v : GHC.Types.Bool | not (Set_mem lq_tmp_x688 keys lq_tmp_x689)}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x478:{VV#479 : a^\"lq_tmp_x481\" | k_480}\n-> {lq_tmp_x476 : (Data.Set.Base.Set {VV#479 : a^\"lq_tmp_x481\" | k_480}) | lq_tmp_x476 == Set_sng lq_tmp_x478}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":76,"startCol":75,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x3053 : [GHC.Types.Char] | len lq_tmp_x3053 >= 0 && lq_tmp_x3053 == x#a1lQ}"]]],[{"spanInfo":{"startLine":295,"endLine":295,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x2535 : (Data.Maybe.Maybe {lq_tmp_x2539 : AssocativeMap.Expr^\"lq_tmp_x2538\" | k_2537[VV#2536:=lq_tmp_x2539]}) | isJust lq_tmp_x2535 <=> false}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":25,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2416:AssocativeMap.Expr\n-> lq_tmp_x2417:AssocativeMap.Expr\n-> {lq_tmp_x2413 : AssocativeMap.Expr | free lq_tmp_x2413 == Set_cup free lq_tmp_x2416 free lq_tmp_x2417 && val lq_tmp_x2413 <=> false}"]]],[{"spanInfo":{"startLine":21,"endLine":21,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.value","forall k v.\nlq_tmp_x2709:(AssocativeMap.Map k^\"lq_tmp_x186\" v^\"lq_tmp_x187\")^\"lq_tmp_x188\"\n-> v^\"lq_tmp_x189\""]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{VV : a | VV == x#a1mx}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x646 : (AssocativeMap.Map {VV : k | k#a1mu < VV} v) | lq_tmp_x646 == r#a1mw}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.tests","[AssocativeMap.Expr^\"lq_tmp_x168\"]<\\fldList VV -> True>^\"lq_tmp_x170\""]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":27,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x764:k\n-> lq_tmp_x765:v\n-> lq_tmp_x766:(AssocativeMap.Map k v)\n-> {n : (AssocativeMap.Map k v) | keys n == Set_cup Set_sng lq_tmp_x764 keys lq_tmp_x766}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.elems","forall a.\n(GHC.Classes.Ord a) =>\nlq_tmp_x437:[a]\n-> {VV : (Data.Set.Base.Set a) | VV == elems lq_tmp_x437}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":52,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{lq_tmp_x2120 : AssocativeMap.Expr | lq_tmp_x2120 == e2#a1lG}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x2100 : AssocativeMap.Expr | lq_tmp_x2100 == e1#a1lF}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x2409 : [{lq_tmp_x2406 : GHC.Types.Char^\"lq_tmp_x2386\" | k_2385[VV#2384:=lq_tmp_x2406][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY][lq_tmp_x2387:=lq_tmp_x2406][lq_tmp_x2379:=lq_tmp_x2409]}]<\\lq_tmp_x2407 VV -> k_2389[lq_tmp_x2391:=lq_tmp_x2407][VV#2388:=lq_tmp_x2408][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY][lq_tmp_x2387:=lq_tmp_x2408][lq_tmp_x2378:=lq_tmp_x2407]> | listElts lq_tmp_x2409 == Set_cup Set_sng lq_anf__d1vX listElts lq_anf__d1vY && null lq_tmp_x2409 <=> false && len lq_tmp_x2409 == 1 + len lq_anf__d1vY && xsListSelector lq_tmp_x2409 == lq_anf__d1vY && xListSelector lq_tmp_x2409 == lq_anf__d1vX && elems lq_tmp_x2409 == Set_cup Set_sng lq_anf__d1vX elems lq_anf__d1vY && len lq_tmp_x2409 >= 0 && lq_tmp_x2409 == x#a1m0}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ok","forall t. {VV#2515 : t^\"lq_tmp_x2517\" \"lq_tmp_x21\" | k_2516}"]]],[{"spanInfo":{"startLine":502,"endLine":502,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1920:{lq_tmp_x1918 : [GHC.Types.Char] | false}\n-> {VV#1921 : v^\"lq_tmp_x1923\" | k_1922}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":49,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1064:(Data.Set.Base.Set {VV#1066 : k^\"lq_tmp_x1068\" | k_1067[lq_tmp_x1063:=fix##36#dOrd_a1qy]})\n-> lq_tmp_x1065:(Data.Set.Base.Set {VV#1066 : k^\"lq_tmp_x1068\" | k_1067[lq_tmp_x1063:=fix##36#dOrd_a1qy]})\n-> {lq_tmp_x1059 : (Data.Set.Base.Set {VV#1066 : k^\"lq_tmp_x1068\" | k_1067[lq_tmp_x1063:=fix##36#dOrd_a1qy]}) | lq_tmp_x1059 == Set_cup lq_tmp_x1064 lq_tmp_x1065}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":49,"startCol":47,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{lq_tmp_x3031 : AssocativeMap.Expr | lq_tmp_x3031 == e2#a1lS}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":73,"startCol":70,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1tQ","{VV : k | VV == ds_d1tQ}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":21,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a.\n{lq_tmp_x452 : (Data.Set.Base.Set a) | Set_emp lq_tmp_x452}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":46,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","lq_tmp_x2839:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free lq_tmp_x2839}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.val","lq_tmp_x1098:AssocativeMap.Expr\n-> {VV : GHC.Types.Bool | Prop VV <=> val lq_tmp_x1098}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1m6}"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Types.True","{lq_tmp_x676 : GHC.Types.Bool | Prop lq_tmp_x676 && lq_tmp_x676 == GHC.Types.True#6u}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":39,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1019:{VV#1020 : k^\"lq_tmp_x1022\" | k_1021}\n-> {lq_tmp_x1017 : (Data.Set.Base.Set {VV#1020 : k^\"lq_tmp_x1022\" | k_1021}) | lq_tmp_x1017 == Set_sng lq_tmp_x1019}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x1785 : (AssocativeMap.Map {VV : k | VV < k#a1mo} v) | lq_tmp_x1785 == l#a1mq}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":42,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vK","{lq_tmp_x1798 : GHC.Types.Bool | not (Set_mem k'#a1mn keys l#a1mq) && lq_tmp_x1798 == lq_anf__d1vK}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x854 : GHC.Types.Bool | Prop lq_tmp_x854 <=> k'#a1m6 < k#a1m8 && lq_tmp_x854 == lq_anf__d1v8}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["i","{lq_tmp_x1238 : GHC.Types.Int | lq_tmp_x1238 == i#a1lz}"]]],[{"spanInfo":{"startLine":255,"endLine":255,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x2907 : [GHC.Types.Char] | len lq_tmp_x2907 >= 0 && lq_tmp_x2907 == x#a1lN}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{lq_tmp_x2448 : AssocativeMap.Expr | val lq_tmp_x2448}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":42,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vE","{lq_tmp_x1675 : [GHC.Types.Char^\"lq_tmp_x10\"]<\\lq_tmp_x1673 VV -> True>^\"lq_tmp_x12\" | len lq_tmp_x1675 >= 0 && lq_tmp_x1675 == lq_anf__d1vE}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{lq_tmp_x2280 : AssocativeMap.Expr | lq_tmp_x2280 == e2#a1lK}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":43,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vO","lq_tmp_x1894:{VV#1859 : v^\"lq_tmp_x1861\" \"lq_tmp_x166\" | k_1860[lq_tmp_x1853:=lq_anf__d1vN]}\n-> {VV#1859 : v^\"lq_tmp_x1861\" \"lq_tmp_x167\" | k_1860[lq_tmp_x1853:=lq_anf__d1vN][lq_tmp_x1854:=lq_tmp_x1894]}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1m6}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1me}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c10","{lq_tmp_x2438 : AssocativeMap.Expr | free lq_tmp_x2438 == Set_empty 0 && val lq_tmp_x2438 <=> true && lq_tmp_x2438 == c10#a1m2}"]]],[{"spanInfo":{"startLine":511,"endLine":511,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{VV : t^\"lq_tmp_x166\" | VV == x#a1ms}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":66,"startCol":60,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vf","{lq_tmp_x1071 : (Data.Set.Base.Set {VV#1047 : k^\"lq_tmp_x1049\" | k_1048[lq_tmp_x1045:=fix##36#dOrd_a1qy][lq_tmp_x1046:=r#a1m5][lq_tmp_x1042:=lq_tmp_x1071]}) | lq_tmp_x1071 == keys r#a1m5 && lq_tmp_x1071 == lq_anf__d1vf}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","{lq_tmp_x2177 : (AssocativeMap.Map {lq_tmp_x2175 : [{lq_tmp_x2172 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967[VV#1966:=lq_tmp_x2172][VV#1973:=lq_tmp_x2175][VV#1979:=lq_tmp_x2177]}]<\\lq_tmp_x2173 VV -> k_1971[VV#1970:=lq_tmp_x2174][lq_tmp_x1969:=lq_tmp_x2173][VV#1979:=lq_tmp_x2177]>^\"lq_tmp_x1975\" | k_1974[VV#1973:=lq_tmp_x2175][VV#1979:=lq_tmp_x2177]} {lq_tmp_x2176 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977[VV#1976:=lq_tmp_x2176][VV#1979:=lq_tmp_x2177]})^\"lq_tmp_x1981\" | k_1980[VV#1979:=lq_tmp_x2177] && lq_tmp_x2177 == ds_d1uo}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":53,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1v3","{lq_tmp_x755 : GHC.Types.Bool | not (Set_mem ds_d1tQ keys l#a1ml) && lq_tmp_x755 == lq_anf__d1v3}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":28,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c1","{lq_tmp_x2419 : AssocativeMap.Expr | free lq_tmp_x2419 == Set_empty 0 && val lq_tmp_x2419 <=> true && lq_tmp_x2419 == c1#a1m1}"]]],[{"spanInfo":{"startLine":551,"endLine":551,"endCol":18,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a^\"lq_tmp_x21\""]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":45,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","lq_tmp_x2839:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free lq_tmp_x2839}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x1732 : GHC.Types.Bool | Prop lq_tmp_x1732 <=> k'#a1mn == k#a1mo && lq_tmp_x1732 == lq_anf__d1vG}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mn}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":67,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vg","{lq_tmp_x1088 : (Data.Set.Base.Set {VV#1066 : k^\"lq_tmp_x1068\" | k_1067[lq_tmp_x1063:=fix##36#dOrd_a1qy][lq_tmp_x1064:=lq_anf__d1ve][lq_tmp_x1065:=lq_anf__d1vf][lq_tmp_x1059:=lq_tmp_x1088]}) | lq_tmp_x1088 == Set_cup lq_anf__d1ve lq_anf__d1vf && lq_tmp_x1088 == lq_anf__d1vg}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.die","forall t. lq_tmp_x1181:{v : [GHC.Types.Char] | false} -> t"]]],[{"spanInfo":{"startLine":477,"endLine":477,"endCol":13,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall k v.\nlq_tmp_x688:k\n-> lq_tmp_x689:(AssocativeMap.Map {VV : k | VV /= lq_tmp_x688} v)\n-> {v : GHC.Types.Bool | not (Set_mem lq_tmp_x688 keys lq_tmp_x689)}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":39,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2953:(Data.Set.Base.Set {lq_tmp_x2968 : [{lq_tmp_x2965 : GHC.Types.Char^\"lq_tmp_x2957\" | k_2956[VV#2955:=lq_tmp_x2965][VV#2962:=lq_tmp_x2968][lq_tmp_x2952:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x2966 VV -> k_2960[VV#2959:=lq_tmp_x2967][lq_tmp_x2958:=lq_tmp_x2966][lq_tmp_x2952:=fix##36#dOrd_a1qR]>^\"lq_tmp_x2964\" | k_2963[VV#2962:=lq_tmp_x2968][lq_tmp_x2952:=fix##36#dOrd_a1qR]})\n-> lq_tmp_x2954:(Data.Set.Base.Set {lq_tmp_x2968 : [{lq_tmp_x2965 : GHC.Types.Char^\"lq_tmp_x2957\" | k_2956[VV#2955:=lq_tmp_x2965][VV#2962:=lq_tmp_x2968][lq_tmp_x2952:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x2966 VV -> k_2960[VV#2959:=lq_tmp_x2967][lq_tmp_x2958:=lq_tmp_x2966][lq_tmp_x2952:=fix##36#dOrd_a1qR]>^\"lq_tmp_x2964\" | k_2963[VV#2962:=lq_tmp_x2968][lq_tmp_x2952:=fix##36#dOrd_a1qR]})\n-> {lq_tmp_x2948 : (Data.Set.Base.Set {lq_tmp_x2968 : [{lq_tmp_x2965 : GHC.Types.Char^\"lq_tmp_x2957\" | k_2956[VV#2955:=lq_tmp_x2965][VV#2962:=lq_tmp_x2968][lq_tmp_x2952:=fix##36#dOrd_a1qR]}]<\\lq_tmp_x2966 VV -> k_2960[VV#2959:=lq_tmp_x2967][lq_tmp_x2958:=lq_tmp_x2966][lq_tmp_x2952:=fix##36#dOrd_a1qR]>^\"lq_tmp_x2964\" | k_2963[VV#2962:=lq_tmp_x2968][lq_tmp_x2952:=fix##36#dOrd_a1qR]}) | lq_tmp_x2948 == Set_cup lq_tmp_x2953 lq_tmp_x2954}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.free","lq_tmp_x2839:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free lq_tmp_x2839}"]]],[{"spanInfo":{"startLine":254,"endLine":254,"endCol":27,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a.\n{lq_tmp_x2855 : (Data.Set.Base.Set a) | Set_emp lq_tmp_x2855}"]]],[{"spanInfo":{"startLine":396,"endLine":396,"endCol":31,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1va","{lq_tmp_x972 : (AssocativeMap.Map {VV#940 : k^\"lq_tmp_x942\" | k_941[lq_tmp_x939:=lq_tmp_x972]} {VV#943 : v^\"lq_tmp_x945\" | k_944[lq_tmp_x939:=lq_tmp_x972]}) | keys lq_tmp_x972 == Set_empty 0 && lq_tmp_x972 == lq_anf__d1va}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x2178 : AssocativeMap.Expr | lq_tmp_x2178 == e1#a1lJ}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["c1","{lq_tmp_x2353 : AssocativeMap.Expr | free lq_tmp_x2353 == Set_empty 0 && val lq_tmp_x2353 <=> true}"]]],[{"spanInfo":{"startLine":496,"endLine":496,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1677:k\n-> lq_tmp_x1678:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1677 keys m}\n-> v"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x2253 : [GHC.Types.Char] | len lq_tmp_x2253 >= 0 && lq_tmp_x2253 == x#a1lI}"]]],[{"spanInfo":{"startLine":410,"endLine":410,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["m","{m : (AssocativeMap.Map k v) | Set_mem k'#a1me keys m}"]]],[{"spanInfo":{"startLine":231,"endLine":231,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v1","{lq_tmp_x2167 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=ds_d1uo][i#a1lB:=e1#a1lJ][VV#1985:=lq_tmp_x2167][lq_tmp_x1988:=ds_d1uo][lq_tmp_x1989:=e1#a1lJ][lq_tmp_x2170:=ds_d1uo][lq_tmp_x2171:=e1#a1lJ]}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":38,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vm","{lq_tmp_x1245 : GHC.Types.Int^\"lq_tmp_x1234\" | lq_tmp_x1245 == i#a1lz + j#a1lA && lq_tmp_x1245 == lq_anf__d1vm}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1m8}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x2437 : [{lq_tmp_x2434 : GHC.Types.Char^\"lq_tmp_x2386\" | k_2385[VV#2384:=lq_tmp_x2434][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY][lq_tmp_x2387:=lq_tmp_x2434][lq_tmp_x2379:=lq_tmp_x2437]}]<\\lq_tmp_x2435 VV -> k_2389[lq_tmp_x2391:=lq_tmp_x2435][VV#2388:=lq_tmp_x2436][lq_tmp_x2382:=lq_anf__d1vX][lq_tmp_x2383:=lq_anf__d1vY][lq_tmp_x2387:=lq_tmp_x2436][lq_tmp_x2378:=lq_tmp_x2435]> | listElts lq_tmp_x2437 == Set_cup Set_sng lq_anf__d1vX listElts lq_anf__d1vY && null lq_tmp_x2437 <=> false && len lq_tmp_x2437 == 1 + len lq_anf__d1vY && xsListSelector lq_tmp_x2437 == lq_anf__d1vY && xListSelector lq_tmp_x2437 == lq_anf__d1vX && elems lq_tmp_x2437 == Set_cup Set_sng lq_anf__d1vX elems lq_anf__d1vY && len lq_tmp_x2437 >= 0 && lq_tmp_x2437 == x#a1m0}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1677:k\n-> lq_tmp_x1678:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1677 keys m}\n-> v"]]],[{"spanInfo":{"startLine":410,"endLine":410,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get'","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1512:k\n-> lq_tmp_x1513:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1512 keys m}\n-> v"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x1567 : GHC.Types.Bool | Prop lq_tmp_x1567 <=> k'#a1me == k#a1mg && lq_tmp_x1567 == lq_anf__d1vA}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1789:{lq_tmp_x1794 : GHC.Types.Bool^\"lq_tmp_x1793\" \"lq_tmp_x164\" | k_1792[VV#1791:=lq_tmp_x1794]}\n-> lq_tmp_x1790:{VV#1795 : v^\"lq_tmp_x1797\" \"lq_tmp_x166\" | k_1796}\n-> {VV#1795 : v^\"lq_tmp_x1797\" \"lq_tmp_x167\" | k_1796}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","lq_tmp_x1988:{VV#1979 : (AssocativeMap.Map {VV#1973 : [{VV#1966 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967}]<\\lq_tmp_x1969 VV -> k_1971>^\"lq_tmp_x1975\" | k_1974} {VV#1976 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977})^\"lq_tmp_x1981\" | k_1980}\n-> lq_tmp_x1989:{VV#1982 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=lq_tmp_x1988]}\n-> {VV#1985 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=lq_tmp_x1988][i#a1lB:=lq_tmp_x1989]}"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e","AssocativeMap.Expr"]]],[{"spanInfo":{"startLine":392,"endLine":392,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","k"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["g","(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":57,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1ve","{lq_tmp_x1070 : (Data.Set.Base.Set {VV#1031 : k^\"lq_tmp_x1033\" | k_1032[lq_tmp_x1029:=fix##36#dOrd_a1qy][lq_tmp_x1030:=l#a1m4][lq_tmp_x1026:=lq_tmp_x1070]}) | lq_tmp_x1070 == keys l#a1m4 && lq_tmp_x1070 == lq_anf__d1ve}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":44,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.elems","forall a.\n(GHC.Classes.Ord a) =>\nlq_tmp_x437:[a]\n-> {VV : (Data.Set.Base.Set a) | VV == elems lq_tmp_x437}"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"{lq_tmp_x592 : GHC.Types.Bool | Prop lq_tmp_x592 <=> k'#a1mt == k#a1mu && lq_tmp_x592 == lq_anf__d1uY}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mn}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":37,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.lemma_notMem","forall k v.\nlq_tmp_x688:k\n-> lq_tmp_x689:(AssocativeMap.Map {VV : k | VV /= lq_tmp_x688} v)\n-> {v : GHC.Types.Bool | not (Set_mem lq_tmp_x688 keys lq_tmp_x689)}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1mu}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":27,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1677:k\n-> lq_tmp_x1678:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1677 keys m}\n-> v"]]],[{"spanInfo":{"startLine":539,"endLine":539,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x585:{VV#587 : k^\"lq_tmp_x589\" | k_588[lq_tmp_x584:=fix##36#dEq_a1pH]}\n-> lq_tmp_x586:{VV#587 : k^\"lq_tmp_x589\" | k_588[lq_tmp_x584:=fix##36#dEq_a1pH]}\n-> {lq_tmp_x580 : GHC.Types.Bool | Prop lq_tmp_x580 <=> lq_tmp_x585 == lq_tmp_x586}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":38,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["j","{lq_tmp_x1239 : GHC.Types.Int | lq_tmp_x1239 == j#a1lA}"]]],[{"spanInfo":{"startLine":394,"endLine":394,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.set","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x764:k\n-> lq_tmp_x765:v\n-> lq_tmp_x766:(AssocativeMap.Map k v)\n-> {n : (AssocativeMap.Map k v) | keys n == Set_cup Set_sng lq_tmp_x764 keys lq_tmp_x766}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":47,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["eval","lq_tmp_x1988:{VV#1979 : (AssocativeMap.Map {VV#1973 : [{VV#1966 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967}]<\\lq_tmp_x1969 VV -> k_1971>^\"lq_tmp_x1975\" | k_1974} {VV#1976 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977})^\"lq_tmp_x1981\" | k_1980}\n-> lq_tmp_x1989:{VV#1982 : AssocativeMap.Expr^\"lq_tmp_x1984\" | k_1983[ds_d1uo:=lq_tmp_x1988]}\n-> {VV#1985 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=lq_tmp_x1988][i#a1lB:=lq_tmp_x1989]}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k'","{VV : k | VV == k'#a1mn}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1mg}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":41,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1m3}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":17,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vZ","{lq_tmp_x2418 : AssocativeMap.Expr | free lq_tmp_x2418 == Set_sng x#a1m0 && val lq_tmp_x2418 <=> false && lq_tmp_x2418 == lq_anf__d1vZ}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1560:{VV#1562 : k^\"lq_tmp_x1564\" | k_1563[lq_tmp_x1559:=fix##36#dEq_a1rp]}\n-> lq_tmp_x1561:{VV#1562 : k^\"lq_tmp_x1564\" | k_1563[lq_tmp_x1559:=fix##36#dEq_a1rp]}\n-> {lq_tmp_x1555 : GHC.Types.Bool | Prop lq_tmp_x1555 <=> lq_tmp_x1560 == lq_tmp_x1561}"]]],[{"spanInfo":{"startLine":538,"endLine":538,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.mem","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x537:k\n-> lq_tmp_x538:(AssocativeMap.Map k v)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem lq_tmp_x537 keys lq_tmp_x538}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":57,"startCol":56,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x1038 : (AssocativeMap.Map {VV : k | VV < k#a1m3} v) | lq_tmp_x1038 == l#a1m4}"]]],[{"spanInfo":{"startLine":368,"endLine":368,"endCol":66,"startCol":65,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x1054 : (AssocativeMap.Map {VV : k | k#a1m3 < VV} v) | lq_tmp_x1054 == r#a1m5}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x2439 : AssocativeMap.Expr | free lq_tmp_x2439 == Set_cup free lq_anf__d1vZ free c1#a1m1 && val lq_tmp_x2439 <=> false && lq_tmp_x2439 == e1#a1lY}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.keys","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x986:(AssocativeMap.Map k v)\n-> {VV : (Data.Set.Base.Set k) | VV == keys lq_tmp_x986}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x1195 : [GHC.Types.Char] | false && len lq_tmp_x1195 >= 0 && lq_tmp_x1195 == x#a1ly}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{lq_tmp_x2427 : AssocativeMap.Expr | free lq_tmp_x2427 == Set_cup free c10#a1m2 Set_dif free e1#a1lY Set_sng x#a1m0 && val lq_tmp_x2427 <=> false}"]]],[{"spanInfo":{"startLine":16,"endLine":16,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1188:[GHC.Types.Char^\"lq_tmp_x1\"]<\\lq_tmp_x1184 VV -> True>^\"lq_tmp_x3\"\n-> {VV#1189 : t^\"lq_tmp_x1191\" \"lq_tmp_x4\" | k_1190}"]]],[{"spanInfo":{"startLine":200,"endLine":200,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1232:GHC.Types.Int^\"lq_tmp_x1234\"\n-> lq_tmp_x1233:GHC.Types.Int^\"lq_tmp_x1234\"\n-> {lq_tmp_x1235 : GHC.Types.Int^\"lq_tmp_x1234\" | lq_tmp_x1235 == lq_tmp_x1232 + lq_tmp_x1233}"]]],[{"spanInfo":{"startLine":501,"endLine":501,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.get","forall k v.\n(GHC.Classes.Ord k) =>\nlq_tmp_x1677:k\n-> lq_tmp_x1678:{m : (AssocativeMap.Map k v) | Set_mem lq_tmp_x1677 keys m}\n-> v"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":37,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x506:(Data.Set.Base.Set {VV#508 : a^\"lq_tmp_x510\" | k_509[lq_tmp_x505:=fix##36#dOrd_a1pt]})\n-> lq_tmp_x507:(Data.Set.Base.Set {VV#508 : a^\"lq_tmp_x510\" | k_509[lq_tmp_x505:=fix##36#dOrd_a1pt]})\n-> {lq_tmp_x501 : (Data.Set.Base.Set {VV#508 : a^\"lq_tmp_x510\" | k_509[lq_tmp_x505:=fix##36#dOrd_a1pt]}) | lq_tmp_x501 == Set_cup lq_tmp_x506 lq_tmp_x507}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2355:GHC.Types.Int\n-> {lq_tmp_x2353 : AssocativeMap.Expr | free lq_tmp_x2353 == Set_empty 0 && val lq_tmp_x2353 <=> true}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["l","{lq_tmp_x1879 : (AssocativeMap.Map {VV : k | VV < k#a1mo} v) | lq_tmp_x1879 == l#a1mq}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":40,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vS","{lq_tmp_x2129 : AssocativeMap.Expr^\"lq_tmp_x1987\" | k_1986[ds_d1uo:=ds_d1uo][i#a1lB:=e1#a1lF][VV#1985:=lq_tmp_x2129][lq_tmp_x1988:=ds_d1uo][lq_tmp_x1989:=e1#a1lF][lq_tmp_x2092:=ds_d1uo][lq_tmp_x2093:=e1#a1lF][lq_tmp_x2089:=lq_tmp_x2129] && lq_tmp_x2129 == lq_anf__d1vS}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2564:(AssocativeMap.Map [GHC.Types.Char] {lq_tmp_x2558 : AssocativeMap.Expr | val lq_tmp_x2558})\n-> lq_tmp_x2565:{lq_tmp_x2560 : AssocativeMap.Expr | Set_sub free lq_tmp_x2560 keys lq_tmp_x2564}\n-> {lq_tmp_x2561 : AssocativeMap.Expr | val lq_tmp_x2561}"]]],[{"spanInfo":{"startLine":411,"endLine":411,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : v | VV == v#a1mh}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":18,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v2","{lq_tmp_x2482 : AssocativeMap.Expr | val lq_tmp_x2482 && lq_tmp_x2482 == v2#a1lX}"]]],[{"spanInfo":{"startLine":23,"endLine":23,"endCol":28,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.right","forall k v.\nlq_tmp_x2599:(AssocativeMap.Map k^\"lq_tmp_x172\" v^\"lq_tmp_x173\")^\"lq_tmp_x174\"\n-> (AssocativeMap.Map k^\"lq_tmp_x175\" v^\"lq_tmp_x176\")^\"lq_tmp_x177\""]]],[{"spanInfo":{"startLine":395,"endLine":395,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v","{VV : v | VV == v#a1m9}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":30,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wd","{lq_tmp_x3128 : (Data.Set.Base.Set [GHC.Types.Char]) | lq_tmp_x3128 == free e1#a1lR && lq_tmp_x3128 == lq_anf__d1wd}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":76,"startCol":65,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1wf","{lq_tmp_x3093 : (Data.Set.Base.Set {lq_tmp_x3092 : [{lq_tmp_x3089 : GHC.Types.Char^\"lq_tmp_x3038\" | k_3037[VV#3036:=lq_tmp_x3089][VV#3043:=lq_tmp_x3092][lq_tmp_x3035:=x#a1lQ][lq_tmp_x3046:=lq_tmp_x3089][lq_tmp_x3049:=lq_tmp_x3092][lq_tmp_x3033:=lq_tmp_x3093]}]<\\lq_tmp_x3090 VV -> k_3041[VV#3040:=lq_tmp_x3091][lq_tmp_x3039:=lq_tmp_x3090][lq_tmp_x3035:=x#a1lQ][lq_tmp_x3048:=lq_tmp_x3091][lq_tmp_x3047:=lq_tmp_x3090][lq_tmp_x3033:=lq_tmp_x3093]>^\"lq_tmp_x3045\" | k_3044[VV#3043:=lq_tmp_x3092][lq_tmp_x3035:=x#a1lQ][lq_tmp_x3049:=lq_tmp_x3092][lq_tmp_x3033:=lq_tmp_x3093]}) | lq_tmp_x3093 == Set_sng x#a1lQ && lq_tmp_x3093 == lq_anf__d1wf}"]]],[{"spanInfo":{"startLine":285,"endLine":285,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.topEval","lq_tmp_x2294:{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":28,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1uV","{lq_tmp_x512 : (Data.Set.Base.Set {VV#479 : a^\"lq_tmp_x481\" | k_480[lq_tmp_x478:=x#a1mx][lq_tmp_x476:=lq_tmp_x512]}) | lq_tmp_x512 == Set_sng x#a1mx && lq_tmp_x512 == lq_anf__d1uV}"]]],[{"spanInfo":{"startLine":306,"endLine":306,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x2451 : AssocativeMap.Expr | free lq_tmp_x2451 == Set_cup free lq_anf__d1vZ free c1#a1m1 && val lq_tmp_x2451 <=> false && lq_tmp_x2451 == e1#a1lY}"]]],[{"spanInfo":{"startLine":379,"endLine":379,"endCol":20,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a^\"lq_tmp_x21\""]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","{lq_tmp_x2099 : (AssocativeMap.Map {lq_tmp_x2097 : [{lq_tmp_x2094 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967[VV#1966:=lq_tmp_x2094][VV#1973:=lq_tmp_x2097][VV#1979:=lq_tmp_x2099]}]<\\lq_tmp_x2095 VV -> k_1971[VV#1970:=lq_tmp_x2096][lq_tmp_x1969:=lq_tmp_x2095][VV#1979:=lq_tmp_x2099]>^\"lq_tmp_x1975\" | k_1974[VV#1973:=lq_tmp_x2097][VV#1979:=lq_tmp_x2099]} {lq_tmp_x2098 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977[VV#1976:=lq_tmp_x2098][VV#1979:=lq_tmp_x2099]})^\"lq_tmp_x1981\" | k_1980[VV#1979:=lq_tmp_x2099] && lq_tmp_x2099 == ds_d1uo}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":19,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1w1","{lq_tmp_x2509 : [{lq_tmp_x2506 : AssocativeMap.Expr^\"lq_tmp_x2475\" | k_2474[VV#2473:=lq_tmp_x2506][lq_tmp_x2471:=v2#a1lX][lq_tmp_x2472:=lq_anf__d1w0][lq_tmp_x2476:=lq_tmp_x2506][lq_tmp_x2468:=lq_tmp_x2509]}]<\\lq_tmp_x2507 VV -> k_2478[lq_tmp_x2480:=lq_tmp_x2507][VV#2477:=lq_tmp_x2508][lq_tmp_x2471:=v2#a1lX][lq_tmp_x2472:=lq_anf__d1w0][lq_tmp_x2476:=lq_tmp_x2508][lq_tmp_x2467:=lq_tmp_x2507]> | listElts lq_tmp_x2509 == Set_cup Set_sng v2#a1lX listElts lq_anf__d1w0 && null lq_tmp_x2509 <=> false && len lq_tmp_x2509 == 1 + len lq_anf__d1w0 && xsListSelector lq_tmp_x2509 == lq_anf__d1w0 && xListSelector lq_tmp_x2509 == v2#a1lX && elems lq_tmp_x2509 == Set_cup Set_sng v2#a1lX elems lq_anf__d1w0 && len lq_tmp_x2509 >= 0 && lq_tmp_x2509 == lq_anf__d1w1}"]]],[{"spanInfo":{"startLine":256,"endLine":256,"endCol":48,"startCol":46,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{lq_tmp_x2943 : AssocativeMap.Expr | lq_tmp_x2943 == e2#a1lP}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2431:[GHC.Types.Char]\n-> lq_tmp_x2432:AssocativeMap.Expr\n-> lq_tmp_x2433:AssocativeMap.Expr\n-> {lq_tmp_x2427 : AssocativeMap.Expr | free lq_tmp_x2427 == Set_cup free lq_tmp_x2432 Set_dif free lq_tmp_x2433 Set_sng lq_tmp_x2431 && val lq_tmp_x2427 <=> false}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x814:{VV#816 : k^\"lq_tmp_x818\" | k_817[lq_tmp_x813:=fix##36#dEq_a1qe]}\n-> lq_tmp_x815:{VV#816 : k^\"lq_tmp_x818\" | k_817[lq_tmp_x813:=fix##36#dEq_a1qe]}\n-> {lq_tmp_x809 : GHC.Types.Bool | Prop lq_tmp_x809 <=> lq_tmp_x814 == lq_tmp_x815}"]]],[{"spanInfo":{"startLine":230,"endLine":230,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["ds_d1uo","{lq_tmp_x2260 : (AssocativeMap.Map {lq_tmp_x2258 : [{lq_tmp_x2255 : GHC.Types.Char^\"lq_tmp_x1968\" | k_1967[VV#1966:=lq_tmp_x2255][VV#1973:=lq_tmp_x2258][VV#1979:=lq_tmp_x2260]}]<\\lq_tmp_x2256 VV -> k_1971[VV#1970:=lq_tmp_x2257][lq_tmp_x1969:=lq_tmp_x2256][VV#1979:=lq_tmp_x2260]>^\"lq_tmp_x1975\" | k_1974[VV#1973:=lq_tmp_x2258][VV#1979:=lq_tmp_x2260]} {lq_tmp_x2259 : AssocativeMap.Expr^\"lq_tmp_x1978\" | k_1977[VV#1976:=lq_tmp_x2259][VV#1979:=lq_tmp_x2260]})^\"lq_tmp_x1981\" | k_1980[VV#1979:=lq_tmp_x2260] && lq_tmp_x2260 == ds_d1uo}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":45,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1885:(lq_tmp_x1884:{VV#1887 : v^\"lq_tmp_x1889\" | k_1888}\n              -> {VV#1890 : v^\"lq_tmp_x1892\" | k_1891})\n-> lq_tmp_x1886:{VV#1887 : v^\"lq_tmp_x1889\" | k_1888}\n-> {VV#1890 : v^\"lq_tmp_x1892\" | k_1891}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x2578:(lq_tmp_x2577:{lq_tmp_x2583 : AssocativeMap.Expr^\"lq_tmp_x2582\" | k_2581[VV#2580:=lq_tmp_x2583]}\n              -> {lq_tmp_x2591 : (Data.Maybe.Maybe {lq_tmp_x2590 : AssocativeMap.Expr^\"lq_tmp_x2586\" | k_2585[VV#2584:=lq_tmp_x2590][VV#2587:=lq_tmp_x2591]})^\"lq_tmp_x2589\" | k_2588[VV#2587:=lq_tmp_x2591]})\n-> lq_tmp_x2579:{lq_tmp_x2583 : AssocativeMap.Expr^\"lq_tmp_x2582\" | k_2581[VV#2580:=lq_tmp_x2583]}\n-> {lq_tmp_x2591 : (Data.Maybe.Maybe {lq_tmp_x2590 : AssocativeMap.Expr^\"lq_tmp_x2586\" | k_2585[VV#2584:=lq_tmp_x2590][VV#2587:=lq_tmp_x2591]})^\"lq_tmp_x2589\" | k_2588[VV#2587:=lq_tmp_x2591]}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e2","{lq_tmp_x2445 : AssocativeMap.Expr | free lq_tmp_x2445 == Set_cup free c10#a1m2 Set_dif free e1#a1lY Set_sng x#a1m0 && val lq_tmp_x2445 <=> false && lq_tmp_x2445 == e2#a1lZ}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x1752:{VV#1754 : k^\"lq_tmp_x1756\" | k_1755[lq_tmp_x1751:=fix##36#dOrd_a1rA]}\n-> lq_tmp_x1753:{VV#1754 : k^\"lq_tmp_x1756\" | k_1755[lq_tmp_x1751:=fix##36#dOrd_a1rA]}\n-> {lq_tmp_x1747 : GHC.Types.Bool | Prop lq_tmp_x1747 <=> lq_tmp_x1752 < lq_tmp_x1753}"]]],[{"spanInfo":{"startLine":226,"endLine":226,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["x","{lq_tmp_x2058 : [GHC.Types.Char] | len lq_tmp_x2058 >= 0 && lq_tmp_x2058 == x#a1lD}"]]],[{"spanInfo":{"startLine":257,"endLine":257,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["e1","{lq_tmp_x3021 : AssocativeMap.Expr | lq_tmp_x3021 == e1#a1lR}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":47,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1uW","{lq_tmp_x513 : (Data.Set.Base.Set {VV#491 : a^\"lq_tmp_x493\" | k_492[lq_tmp_x489:=fix##36#dOrd_a1pt][lq_tmp_x490:=xs#a1my][lq_tmp_x486:=lq_tmp_x513]}) | lq_tmp_x513 == elems xs#a1my && lq_tmp_x513 == lq_anf__d1uW}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":75,"startCol":74,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["r","{lq_tmp_x746 : (AssocativeMap.Map {VV : k | VV /= ds_d1tQ && ds_d1tS < VV} v) | lq_tmp_x746 == r#a1mm}"]]],[{"spanInfo":{"startLine":201,"endLine":201,"endCol":50,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["lq_anf__d1vj","{lq_tmp_x1509 : [GHC.Types.Char^\"lq_tmp_x10\"]<\\lq_tmp_x1507 VV -> True>^\"lq_tmp_x12\" | len lq_tmp_x1509 >= 0 && lq_tmp_x1509 == lq_anf__d1vj}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v2","{lq_tmp_x2442 : AssocativeMap.Expr | val lq_tmp_x2442}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":12,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["k","{VV : k | VV == k#a1mo}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[[null,"lq_tmp_x922:{VV#926 : k^\"lq_tmp_x928\" | k_927}\n-> lq_tmp_x923:{VV#929 : v^\"lq_tmp_x931\" | k_930}\n-> lq_tmp_x924:(AssocativeMap.Map {VV#926 : k^\"lq_tmp_x928\" | k_927 && VV#926 < lq_tmp_x922} {VV#929 : v^\"lq_tmp_x931\" | k_930})\n-> lq_tmp_x925:(AssocativeMap.Map {VV#926 : k^\"lq_tmp_x928\" | k_927 && lq_tmp_x922 < VV#926} {VV#929 : v^\"lq_tmp_x931\" | k_930})\n-> {lq_tmp_x917 : (AssocativeMap.Map {VV#926 : k^\"lq_tmp_x928\" | k_927} {VV#929 : v^\"lq_tmp_x931\" | k_930}) | right lq_tmp_x917 == lq_tmp_x925 && left lq_tmp_x917 == lq_tmp_x924 && value lq_tmp_x917 == lq_tmp_x923 && key lq_tmp_x917 == lq_tmp_x922 && keys lq_tmp_x917 == Set_cup Set_sng lq_tmp_x922 Set_cup keys lq_tmp_x924 keys lq_tmp_x925}"]]],[{"spanInfo":{"startLine":393,"endLine":393,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["v'","{VV : v | VV == v'#a1m7}"]]],[{"spanInfo":{"startLine":511,"endLine":511,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true},[["AssocativeMap.assert","forall t t.\nlq_tmp_x683:t^\"lq_tmp_x164\"\n-> lq_tmp_x684:t^\"lq_tmp_x166\" -> t^\"lq_tmp_x167\""]]]],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : GHC.Types.Bool\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV <=> Set_mem k' keys ?a}\n \n  In Context\n    VV : GHC.Types.Bool\n    k' : a\n    ?a : (AssocativeMap.Map a b)","pos":{"spanInfo":{"startLine":538,"endLine":538,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : (AssocativeMap.Map a b) | Set_mem fix keys VV}\n \n  not a subtype of Required type\n    VV : {VV : (AssocativeMap.Map a b) | keys VV == Set_cup Set_sng k' keys ?a}\n \n  In Context\n    VV : {VV : (AssocativeMap.Map a b) | Set_mem fix keys VV}\n    k' : a\n    ?a : (AssocativeMap.Map a b)","pos":{"spanInfo":{"startLine":392,"endLine":392,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : (AssocativeMap.Map {VV : a | k < VV} b) | VV == r}\n \n  not a subtype of Required type\n    VV : {VV : (AssocativeMap.Map a b) | Set_mem k' keys VV}\n \n  In Context\n    VV : {VV : (AssocativeMap.Map a b) | VV == r}\n    k  : a\n    r  : (AssocativeMap.Map a b)\n    k' : a","pos":{"spanInfo":{"startLine":413,"endLine":413,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : (AssocativeMap.Map {VV : a | VV < k} b) | VV == l}\n \n  not a subtype of Required type\n    VV : {VV : (AssocativeMap.Map a b) | Set_mem k' keys VV}\n \n  In Context\n    VV : {VV : (AssocativeMap.Map a b) | VV == l}\n    k  : a\n    l  : (AssocativeMap.Map a b)\n    k' : a","pos":{"spanInfo":{"startLine":412,"endLine":412,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : AssocativeMap.Expr | val VV <=> false && VV == e1 && free VV == Set_cup free ?a free c1}\n \n  not a subtype of Required type\n    VV : {VV : AssocativeMap.Expr | Set_emp free VV}\n \n  In Context\n    VV : {VV : AssocativeMap.Expr | val VV <=> false && VV == e1 && free VV == Set_cup free ?a free c1}\n    x  : {v : [GHC.Types.Char] | null v <=> false && xListSelector v == ?b && elems v == Set_cup Set_sng ?b elems ?c && listElts v == Set_cup Set_sng ?b listElts ?c && len v == 1 + len ?c && xsListSelector v == ?c && len v >= 0}\n    c1 : {c1 : AssocativeMap.Expr | val c1 <=> true && free c1 == Set_empty 0}\n    e1 : {e1 : AssocativeMap.Expr | val e1 <=> false && free e1 == Set_cup free ?a free c1}\n    ?a : {fix##63#a : AssocativeMap.Expr | val ?a <=> false && free ?a == Set_sng x}\n    ?c : {fix##63#c : [GHC.Types.Char] | null ?c <=> true && Set_emp listElts ?c && elems ?c == Set_empty 0 && len ?c == 0 && len ?c >= 0}\n    ?b : GHC.Types.Char","pos":{"spanInfo":{"startLine":306,"endLine":306,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs"},"realSpan":true}}]}}
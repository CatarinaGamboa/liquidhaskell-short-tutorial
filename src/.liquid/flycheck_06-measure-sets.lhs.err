{"o_errors":[],"o_vars":[],"o_bots":[],"o_types":[[{"spanInfo":{"startLine":163,"endLine":163,"endCol":15,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{VV : [a] | VV == zs && elems VV == Set_cup elems zs elems zs && elems VV == elems zs && len VV == len zs && len VV >= 0}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":39,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.filter","forall a.\n(a -> GHC.Types.Bool)\n-> x3:{v : [a] | unique v}\n-> {v : [a] | Set_sub elems v elems x3 && unique v}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":26,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":14,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.differentiate","forall a.\n{v : [a] | unique v} -> (Data.Maybe.Maybe (Sets.Zipper a))"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 && Prop v}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":43,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20h","a"]]],[{"spanInfo":{"startLine":350,"endLine":350,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ds_d1WQ","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":132,"endLine":132,"endCol":26,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":59,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d200","{v : (Data.Set.Base.Set a) | v == Set_cap x y}"]]],[{"spanInfo":{"startLine":583,"endLine":587,"endCol":38,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Data.Maybe.Just","forall a.\nx1:a\n-> {v : (Data.Maybe.Maybe a) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":417,"endLine":417,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YG","{v : GHC.Types.Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":469,"endLine":469,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":40,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZE","{v : [a] | unique v <=> unique acc && not (Set_mem x elems acc) && null v <=> false && xListSelector v == x && elems v == Set_cup Set_sng x elems acc && listElts v == Set_cup Set_sng x listElts acc && xsListSelector v == acc && len v == 1 + len acc && len v >= 0}"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":48,"startCol":47,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["t","{VV : a | VV == t}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":8,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{VV : [a] | VV == ys && elems VV == Set_cup elems ys elems ys && elems VV == elems ys && len VV == len ys && len VV >= 0}"]]],[{"spanInfo":{"startLine":356,"endLine":356,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{v : [a] | elems v == Set_cup elems xs elems ys}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":53,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":44,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:{v : [a] | not (Set_mem x1 elems v) && unique v}\n-> x3:{v : [a] | not (Set_mem x1 elems v) && unique v && Set_empty 0 == Set_cap elems v elems x2}\n-> {v : (Sets.Zipper a) | left v == x2 && right v == x3 && focus v == x1}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["j","GHC.Types.Int"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":17,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_union_assoc","forall a.\n(GHC.Classes.Ord a) =>\n(Data.Set.Base.Set a)\n-> (Data.Set.Base.Set a) -> (Data.Set.Base.Set a) -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":456,"endLine":456,"endCol":12,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["seen","[a]"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":55,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":585,"endLine":585,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["p","a -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":483,"endLine":483,"endCol":30,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append","forall a.\n{v : [a] | unique v}\n-> {v : [a] | unique v} -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":32,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append'","forall a.\nx1:[a]\n-> x2:[a] -> {v : [a] | elems v == Set_cup elems x1 elems x2}"]]],[{"spanInfo":{"startLine":442,"endLine":442,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.reverse","forall a. {v : [a] | unique v} -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":18,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elem","forall a. (GHC.Classes.Eq a) => a -> [a] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":89,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d202","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":369,"endLine":369,"endCol":11,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{VV : [a] | VV == zs && elems VV == Set_cup elems zs elems zs && elems VV == elems zs && len VV == len zs && len VV >= 0}"]]],[{"spanInfo":{"startLine":431,"endLine":431,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":49,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"((Sets.Zipper a) -> (Sets.Zipper a))\n-> ((Sets.Zipper a) -> (Sets.Zipper a))\n-> (Sets.Zipper a)\n-> exists [(Sets.Zipper a)].(Sets.Zipper a)"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":75,"startCol":62,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Ym","(Sets.Zipper a) -> (Sets.Zipper a)"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":46,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":369,"endLine":369,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{VV : [a] | VV == ys && elems VV == Set_cup elems ys elems ys && elems VV == elems ys && len VV == len ys && len VV >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":43,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":472,"endLine":472,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x7 VV -> p x7> | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0}"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":45,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ls","{v : [a] | v == ls && len v >= 0}"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":51,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":21,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Data.Set.Base.empty","forall a. {v : (Data.Set.Base.Set a) | Set_emp v}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.revHelper","forall a. [a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":431,"endLine":431,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ds_d1WI","a -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":18,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elem","forall a. (GHC.Classes.Eq a) => a -> [a] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs'","{v : [a] | elems v == Set_cup elems ys elems zs}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":28,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:{v : [a] | not (Set_mem x1 elems v) && unique v}\n-> x3:{v : [a] | not (Set_mem x1 elems v) && unique v && Set_empty 0 == Set_cap elems v elems x2}\n-> {v : (Sets.Zipper a) | left v == x2 && right v == x3 && focus v == x1}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZF","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":59,"startCol":58,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":454,"endLine":454,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":81,"startCol":77,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yb","{v : [a] | unique v <=> unique rs && not (Set_mem t elems rs) && null v <=> false && xListSelector v == t && elems v == Set_cup Set_sng t elems rs && listElts v == Set_cup Set_sng t listElts rs && xsListSelector v == rs && len v == 1 + len rs && len v >= 0}"]]],[{"spanInfo":{"startLine":291,"endLine":291,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":471,"endLine":471,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":47,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["f'","{VV : a | VV == f'}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":33,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.mergeSort","forall a.\n(GHC.Classes.Ord a) =>\n[a] -> {v : [a] | elems v == Set_empty 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs'","{v : [a] | elems v == Set_cup elems xs elems ys}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":45,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":470,"endLine":470,"endCol":9,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":456,"endLine":456,"endCol":29,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["seen","{v : [a] | v == seen && len v >= 0}"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":39,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":42,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append'","forall a.\nx1:[a]\n-> x2:[a] -> {v : [a] | elems v == Set_cup elems x1 elems x2}"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":40,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["acc","{v : [a] | v == acc && len v >= 0}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":40,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:{v : [a] | not (Set_mem x1 elems v) && unique v}\n-> x3:{v : [a] | not (Set_mem x1 elems v) && unique v && Set_empty 0 == Set_cap elems v elems x2}\n-> {v : (Sets.Zipper a) | left v == x2 && right v == x3 && focus v == x1}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":35,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":52,"startCol":51,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["p","a -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["j","{v : GHC.Types.Int | v == j}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["n","{v : GHC.Types.Int | v == n}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":134,"endLine":134,"endCol":27,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":370,"endLine":370,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Int\n-> x2:{v : GHC.Types.Int | v /= 0}\n-> {v : GHC.Types.Int | x1 >= 0 && x2 >= 0 => v >= 0 && x1 >= 0 && x2 >= 1 => v <= x1 && v == x1 / x2}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":28,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YQ","{v : [GHC.Types.Int] | null v <=> false && len v >= 0}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":54,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZW","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":51,"startCol":47,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yj","{v : [a] | unique v <=> unique rs && not (Set_mem t elems rs) && null v <=> false && xListSelector v == t && elems v == Set_cup Set_sng t elems rs && listElts v == Set_cup Set_sng t listElts rs && xsListSelector v == rs && len v == 1 + len rs && len v >= 0}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":75,"startCol":68,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [a] | unique v} -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":44,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":132,"endLine":132,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.implies","x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 => Prop x2}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["z","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.split","forall a. GHC.Types.Int -> [a] -> ([a], [a])"]]],[{"spanInfo":{"startLine":517,"endLine":517,"endCol":9,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.left","forall a. (Sets.Zipper a) -> [a]"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":41,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YL","{v : GHC.Types.Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":14,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"() -> (GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":33,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20H","GHC.Types.Int"]]],[{"spanInfo":{"startLine":338,"endLine":338,"endCol":44,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Z9","{v : [a] | elems v == elems xs && len v >= 0}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":68,"startCol":61,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":370,"endLine":370,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zu","{v : GHC.Types.Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":184,"endLine":184,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["pre","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":417,"endLine":417,"endCol":31,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YK","{v : [GHC.Types.Int] | null v <=> false && len v >= 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":44,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":20,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"[GHC.Integer.Type.Integer] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.range","x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : [{v : GHC.Types.Int | v < x2 && x1 <= v}] | unique v}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":57,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d206","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":62,"startCol":61,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20l","a"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":28,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elem","forall a. (GHC.Classes.Eq a) => a -> [a] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":54,"startCol":52,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yy","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":356,"endLine":356,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":43,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20i","a"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":38,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":29,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.merge","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a]\n-> x3:[a] -> {v : [a] | elems v == Set_cup elems x2 elems x3}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":48,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d208","{v : (Data.Set.Base.Set a) | v == Set_cap y x}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zi","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":25,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> {v : (Data.Set.Base.Set a) | v == Set_sng x1}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":46,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d205","{v : (Data.Set.Base.Set a) | v == Set_cup x y}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":442,"endLine":442,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Y5","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":11,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> x <= y}"]]],[{"spanInfo":{"startLine":369,"endLine":369,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.split","forall a. GHC.Types.Int -> [a] -> ([a], [a])"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":24,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d207","{v : (Data.Set.Base.Set a) | v == Set_cap x y}"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":35,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yx","x1:(Sets.Zipper a)\n-> {v : (Data.Maybe.Maybe (Sets.Zipper a)) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":445,"endLine":445,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["a","{v : [a] | v == a && len v >= 0}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20v","{v : [GHC.Integer.Type.Integer] | null v <=> false && len v >= 0}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.integrate","forall a. (Sets.Zipper a) -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":41,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["p","a -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":34,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Z6","{v : [a] | elems v == Set_cup Set_sng x elems ys && len v >= 0}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":35,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["z","{v : (Data.Set.Base.Set a) | v == z}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":64,"startCol":62,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && len v >= 0}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":46,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.filter","forall a.\n(a -> GHC.Types.Bool)\n-> x3:{v : [a] | unique v}\n-> {v : [a] | Set_sub elems v elems x3 && unique v}"]]],[{"spanInfo":{"startLine":445,"endLine":445,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","forall a. [a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":51,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ls'","{v : [a] | v == ls' && len v >= 0}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":13,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_x_y_200","forall a b. a -> b -> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":53,"startCol":52,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["r","{v : [a] | not (Set_mem x elems v) && unique v && v == r && Set_empty 0 == Set_cap elems v elems l && len v >= 0}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && v == ys && elems v == Set_cup elems ys elems ys && elems v == elems ys && len v == len ys && len v >= 0}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZU","{v : GHC.Types.Bool | Prop v <=> unique xs}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":575,"endLine":575,"endCol":48,"startCol":46,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ls","{v : [a] | not (Set_mem t elems v) && unique v && v == ls && len v >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":33,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.merge","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a]\n-> x3:[a] -> {v : [a] | elems v == Set_cup elems x2 elems x3}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":3,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.q0","forall a. a -> [a]"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":39,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["l","{v : [a] | not (Set_mem x elems v) && unique v && v == l && len v >= 0}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":43,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x && VV == x}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":39,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":59,"startCol":58,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":71,"startCol":70,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":52,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_dif x1 v}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":57,"startCol":56,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["z","{v : (Data.Set.Base.Set a) | v == z}"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":22,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["seen","{v : [a] | v == seen && len v >= 0}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":11,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":429,"endLine":429,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [a] | Set_sub elems v elems xs && unique v && v == xs' && len v >= 0}"]]],[{"spanInfo":{"startLine":482,"endLine":482,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append","forall a.\n{v : [a] | unique v}\n-> {v : [a] | unique v} -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":426,"endLine":426,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x7 VV -> p x7> | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":48,"startCol":46,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yi","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":575,"endLine":575,"endCol":14,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.reverseZipper","forall a. (Sets.Zipper a) -> (Sets.Zipper a)"]]],[{"spanInfo":{"startLine":442,"endLine":442,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":338,"endLine":338,"endCol":27,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.insert","forall a.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:[a] -> {v : [a] | elems v == Set_cup Set_sng x2 elems x3}"]]],[{"spanInfo":{"startLine":454,"endLine":454,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":43,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YZ","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":18,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_split_append","forall a.\n(GHC.Classes.Ord a) =>\nGHC.Types.Int -> [a] -> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":31,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Data.Maybe.Nothing","forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":37,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:{v : [a] | not (Set_mem x1 elems v) && unique v}\n-> x3:{v : [a] | not (Set_mem x1 elems v) && unique v && Set_empty 0 == Set_cap elems v elems x2}\n-> {v : (Sets.Zipper a) | left v == x2 && right v == x3 && focus v == x1}"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append'","forall a.\nx1:[a]\n-> x2:[a] -> {v : [a] | elems v == Set_cup elems x1 elems x2}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":55,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.split","forall a. GHC.Types.Int -> [a] -> ([a], [a])"]]],[{"spanInfo":{"startLine":483,"endLine":483,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zb","{v : GHC.Types.Bool | Prop v <=> x == y}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":64,"startCol":62,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{VV : [a] | unique VV && VV == xs && elems VV == Set_cup elems xs elems xs && elems VV == elems xs && len VV == len xs && len VV >= 0}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":27,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZJ","{v : (Data.Set.Base.Set a) | v == Set_sng x}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":32,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZR","{v : (Data.Set.Base.Set a) | v == elems zs}"]]],[{"spanInfo":{"startLine":338,"endLine":338,"endCol":41,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.insertSort","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {v : [a] | elems v == elems x2}"]]],[{"spanInfo":{"startLine":459,"endLine":459,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":19,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x7 VV -> p x7> | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["z","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":36,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZZ","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":370,"endLine":370,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:[a] -> {v : GHC.Types.Int | v == len x1}"]]],[{"spanInfo":{"startLine":585,"endLine":587,"endCol":38,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x7 VV -> p x7> | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":60,"startCol":58,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":19,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [{v : GHC.Types.Int | false}] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0}"]]],[{"spanInfo":{"startLine":431,"endLine":431,"endCol":25,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.filter","forall a.\n(a -> GHC.Types.Bool)\n-> x3:{v : [a] | unique v}\n-> {v : [a] | Set_sub elems v elems x3 && unique v}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":38,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZH","{v : [a] | elems v == Set_cup elems xs elems ys && len v >= 0}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":20,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"[GHC.Integer.Type.Integer] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":18,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 => Prop v}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":38,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":483,"endLine":483,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":32,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x6 VV -> p2 x6> | fst v == x1 && x_Tuple22 v == x2 && snd v == x2 && x_Tuple21 v == x1}"]]],[{"spanInfo":{"startLine":428,"endLine":428,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"GHC.Types.Bool"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":39,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YY","{v : [a] | unique v <=> unique xs && not (Set_mem x elems xs) && null v <=> false && xListSelector v == x && elems v == Set_cup Set_sng x elems xs && listElts v == Set_cup Set_sng x listElts xs && xsListSelector v == xs && len v == 1 + len xs && len v >= 0}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":48,"startCol":47,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":54,"startCol":53,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.main","(GHC.Types.IO ())"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["acc","[a]"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"((Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a)))\n-> (Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a))"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":45,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZS","{v : (Data.Set.Base.Set a) | v == elems zs'}"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":22,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> Set_mem x elems seen}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":36,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zz","{v : [a] | elems v == Set_empty 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.range","x1:GHC.Types.Int\n-> x2:GHC.Types.Int\n-> {v : [{v : GHC.Types.Int | v < x2 && x1 <= v}] | unique v}"]]],[{"spanInfo":{"startLine":459,"endLine":459,"endCol":39,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"((Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a)))\n-> (Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a))"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":34,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZP","{v : (Data.Set.Base.Set a) | v == elems xs}"]]],[{"spanInfo":{"startLine":470,"endLine":470,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["a","{v : [a] | v == a && len v >= 0}"]]],[{"spanInfo":{"startLine":470,"endLine":470,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":49,"startCol":46,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["rs'","{v : [a] | v == rs' && len v >= 0}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":24,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.revHelper","forall a. [a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":36,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zc","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> i < j}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":42,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1XR","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":57,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cap x1 v}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":41,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {VV : a | VV == x1 + x2}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":81,"startCol":79,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["rs","{v : [a] | not (Set_mem t elems v) && unique v && v == rs && len v >= 0}"]]],[{"spanInfo":{"startLine":445,"endLine":445,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["a","[a]"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":22,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cap x1 v}"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":11,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.focusRight","forall a. (Sets.Zipper a) -> (Sets.Zipper a)"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":46,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cap x1 v}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":33,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.revHelper","forall a. [a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":470,"endLine":470,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":57,"startCol":56,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":587,"endLine":587,"endCol":38,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Data.Maybe.Nothing","forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.unique","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : GHC.Types.Bool | Prop VV <=> unique x2}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":9,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.reverse'","forall a. x1:[a] -> {v : [a] | elems v == elems x1}"]]],[{"spanInfo":{"startLine":181,"endLine":181,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":39,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":46,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append","forall a.\n{v : [a] | unique v}\n-> {v : [a] | unique v} -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":39,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20f","a"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Z3","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":8,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["i","GHC.Types.Int"]]],[{"spanInfo":{"startLine":417,"endLine":417,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YE","{v : GHC.Types.Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":181,"endLine":181,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":45,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | unique v && v == xs && v == xs && elems v == Set_cup elems xs elems xs && elems v == elems xs && len v == len xs && len v >= 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":42,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Z0","{v : [a] | unique v <=> unique ys && not (Set_mem y elems ys) && null v <=> false && xListSelector v == y && elems v == Set_cup Set_sng y elems ys && listElts v == Set_cup Set_sng y listElts ys && xsListSelector v == ys && len v == 1 + len ys && len v >= 0}"]]],[{"spanInfo":{"startLine":454,"endLine":454,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Y2","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":28,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d203","{v : (Data.Set.Base.Set a) | v == Set_cup y z}"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["l","{VV : a | VV == l}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":41,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":38,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20b","{v : (Data.Set.Base.Set a) | v == Set_cup x y}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"[GHC.Types.Char] -> a"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":42,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":369,"endLine":369,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ds_d1Xe","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":31,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zq","{v : [a] | unique v <=> unique ys && not (Set_mem y elems ys) && null v <=> false && xListSelector v == y && elems v == Set_cup Set_sng y elems ys && listElts v == Set_cup Set_sng y listElts ys && xsListSelector v == ys && len v == 1 + len ys && len v >= 0}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":55,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20d","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":483,"endLine":483,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | unique v && v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":428,"endLine":428,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"a -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":55,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZX","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["pre","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True && v == pre}"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":47,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yk","(Sets.Zipper a) -> (Sets.Zipper a)"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":454,"endLine":454,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.nub","forall a. (GHC.Classes.Eq a) => [a] -> [a]"]]],[{"spanInfo":{"startLine":17,"endLine":17,"endCol":17,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Tuple.()","{v : () | v == GHC.Tuple.()}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":36,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20I","{v : [{v : GHC.Types.Int | v < j}] | unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":428,"endLine":428,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":53,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Y8","{v : [a] | unique v <=> unique r && not (Set_mem x elems r) && null v <=> false && xListSelector v == x && elems v == Set_cup Set_sng x elems r && listElts v == Set_cup Set_sng x listElts r && xsListSelector v == r && len v == 1 + len r && len v >= 0}"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":51,"startCol":49,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["rs","{v : [a] | not (Set_mem t elems v) && unique v && v == rs && len v >= 0}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":54,"startCol":52,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["rs","{v : [a] | not (Set_mem f elems v) && unique v && v == rs && Set_empty 0 == Set_cap elems v elems ls && len v >= 0}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":50,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":575,"endLine":575,"endCol":40,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:{v : [a] | not (Set_mem x1 elems v) && unique v}\n-> x3:{v : [a] | not (Set_mem x1 elems v) && unique v && Set_empty 0 == Set_cap elems v elems x2}\n-> {v : (Sets.Zipper a) | left v == x2 && right v == x3 && focus v == x1}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":9,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 <= v}"]]],[{"spanInfo":{"startLine":337,"endLine":337,"endCol":11,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.insertSort","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {v : [a] | elems v == elems x2}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":51,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZA","{v : [a] | elems v == Set_empty 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Y4","{v : [a] | unique v <=> unique a && not (Set_mem x elems a) && null v <=> false && xListSelector v == x && elems v == Set_cup Set_sng x elems a && listElts v == Set_cup Set_sng x listElts a && xsListSelector v == a && len v == 1 + len a && len v >= 0}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ds_d1WP","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":585,"endLine":585,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ls","{v : [a] | not (Set_mem f elems v) && unique v && v == ls && len v >= 0}"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":61,"startCol":60,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"((Sets.Zipper a) -> (Sets.Zipper a))\n-> ((Sets.Zipper a) -> (Sets.Zipper a))\n-> (Sets.Zipper a)\n-> exists [(Sets.Zipper a)].(Sets.Zipper a)"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":79,"startCol":78,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":29,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.insert","forall a.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:[a] -> {v : [a] | elems v == Set_cup Set_sng x2 elems x3}"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":32,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["seen","{v : [a] | v == seen && len v >= 0}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.merge","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a]\n-> x3:[a] -> {v : [a] | elems v == Set_cup elems x2 elems x3}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":17,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.isin","forall a.\n(GHC.Classes.Eq a) =>\nx2:a\n-> x3:[a] -> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 elems x3}"]]],[{"spanInfo":{"startLine":369,"endLine":369,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["mid","{v : GHC.Types.Int | v == mid}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":51,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["f","{VV : a | VV == f}"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":58,"startCol":57,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ds_d1X2","GHC.Types.Int"]]],[{"spanInfo":{"startLine":575,"endLine":575,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["t","{VV : a | VV == t}"]]],[{"spanInfo":{"startLine":586,"endLine":586,"endCol":54,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yz","{v : (Sets.Zipper a) | left v == ls' && focus v == f'}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":43,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":82,"startCol":68,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [a] | unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":31,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":54,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20c","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":60,"startCol":59,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zj","{v : GHC.Types.Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","a"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":19,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YA","x1:(Sets.Zipper a)\n-> {v : (Data.Maybe.Maybe (Sets.Zipper a)) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":48,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.mergeSort","forall a.\n(GHC.Classes.Ord a) =>\n[a] -> {v : [a] | elems v == Set_empty 0}"]]],[{"spanInfo":{"startLine":356,"endLine":356,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":48,"startCol":47,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["p","a -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":28,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x6 VV -> p2 x6> | fst v == x1 && x_Tuple22 v == x2 && snd v == x2 && x_Tuple21 v == x1}"]]],[{"spanInfo":{"startLine":470,"endLine":470,"endCol":11,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> x == y}"]]],[{"spanInfo":{"startLine":250,"endLine":250,"endCol":35,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":184,"endLine":184,"endCol":15,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":88,"startCol":70,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d201","{v : (Data.Set.Base.Set a) | v == Set_cap x z}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":35,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":44,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YB","{v : [a] | Set_sub elems v elems ls && unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":483,"endLine":483,"endCol":36,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1XU","{v : [a] | unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":575,"endLine":575,"endCol":45,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["rs","{v : [a] | not (Set_mem t elems v) && unique v && v == rs && Set_empty 0 == Set_cap elems v elems ls && len v >= 0}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":51,"startCol":49,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && v == zs && elems v == Set_cup elems zs elems zs && elems v == elems zs && len v == len zs && len v >= 0}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":35,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZY","{v : (Data.Set.Base.Set a) | v == Set_cup y z}"]]],[{"spanInfo":{"startLine":518,"endLine":518,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.right","forall a. (Sets.Zipper a) -> [a]"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":458,"endLine":458,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":29,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elems","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}"]]],[{"spanInfo":{"startLine":469,"endLine":469,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.isin","forall a.\n(GHC.Classes.Eq a) =>\nx2:a\n-> x3:[a] -> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 elems x3}"]]],[{"spanInfo":{"startLine":459,"endLine":459,"endCol":35,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Y1","{v : [a] | unique v <=> unique seen && not (Set_mem x elems seen) && null v <=> false && xListSelector v == x && elems v == Set_cup Set_sng x elems seen && listElts v == Set_cup Set_sng x listElts seen && xsListSelector v == seen && len v == 1 + len seen && len v >= 0}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.split","forall a. GHC.Types.Int -> [a] -> ([a], [a])"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.test1","{v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":35,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [a] | unique v} -> {v : [a] | unique v}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":27,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["acc","{v : [a] | v == acc && len v >= 0}"]]],[{"spanInfo":{"startLine":29,"endLine":29,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x7 VV -> p x7> | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":154,"endLine":154,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":23,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_intersection_dist","forall a.\n(GHC.Classes.Ord a) =>\n(Data.Set.Base.Set a)\n-> (Data.Set.Base.Set a)\n-> (Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":370,"endLine":370,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zt","GHC.Types.Int"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YM","{v : GHC.Types.Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i}"]]],[{"spanInfo":{"startLine":585,"endLine":585,"endCol":26,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.filter","forall a.\n(a -> GHC.Types.Bool)\n-> x3:{v : [a] | unique v}\n-> {v : [a] | Set_sub elems v elems x3 && unique v}"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && v == zs && elems v == Set_cup elems zs elems zs && elems v == elems zs && len v == len zs && len v >= 0}"]]],[{"spanInfo":{"startLine":417,"endLine":417,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YF","{v : GHC.Types.Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":49,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":55,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [a] | unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":445,"endLine":446,"endCol":30,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":18,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":28,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x6 VV -> p2 x6> | fst v == x1 && x_Tuple22 v == x2 && snd v == x2 && x_Tuple21 v == x1}"]]],[{"spanInfo":{"startLine":417,"endLine":417,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YD","{v : GHC.Types.Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 || Prop v}"]]],[{"spanInfo":{"startLine":349,"endLine":349,"endCol":33,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.merge","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a]\n-> x3:[a] -> {v : [a] | elems v == Set_cup elems x2 elems x3}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":60,"startCol":57,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zk","GHC.Types.Int"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":41,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x1 v}"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":431,"endLine":431,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs'","{v : [a] | Set_sub elems v elems xs && unique v}"]]],[{"spanInfo":{"startLine":297,"endLine":297,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.test2","{v : GHC.Types.Bool | not (Prop v)}"]]],[{"spanInfo":{"startLine":338,"endLine":338,"endCol":44,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && elems v == Set_cup elems xs elems ys && len v >= 0}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":9,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.isUnique","{v : [GHC.Types.Int] | unique v}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":29,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d204","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":47,"startCol":44,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs'","{v : [a] | v == xs' && elems v == Set_cup elems ys elems zs && len v >= 0}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":456,"endLine":456,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","forall a. (GHC.Classes.Eq a) => [a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":54,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 => Prop v}"]]],[{"spanInfo":{"startLine":370,"endLine":370,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ds_d1Xe","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":31,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.elem","forall a. (GHC.Classes.Eq a) => a -> [a] -> GHC.Types.Bool"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":258,"endLine":258,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":482,"endLine":482,"endCol":22,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | unique v && v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":456,"endLine":459,"endCol":39,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":9,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 <= v}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["f'","{VV : a | VV == f'}"]]],[{"spanInfo":{"startLine":399,"endLine":399,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && v == ys && elems v == Set_cup elems ys elems ys && elems v == elems ys && len v == len ys && len v >= 0}"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":59,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yl","(Sets.Zipper a) -> (Sets.Zipper a)"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":28,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20D","{v : [GHC.Integer.Type.Integer] | null v <=> false && len v >= 0}"]]],[{"spanInfo":{"startLine":182,"endLine":182,"endCol":36,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":43,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20j","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":88,"startCol":87,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["z","{v : (Data.Set.Base.Set a) | v == z}"]]],[{"spanInfo":{"startLine":516,"endLine":516,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.focus","forall a. (Sets.Zipper a) -> a"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":13,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.filterZipper","forall a.\n(a -> GHC.Types.Bool)\n-> (Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a))"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":78,"startCol":77,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["t","{VV : a | VV == t}"]]],[{"spanInfo":{"startLine":572,"endLine":572,"endCol":75,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Yn","(Sets.Zipper a) -> exists [(Sets.Zipper a)].(Sets.Zipper a)"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":40,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":428,"endLine":428,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":45,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["zs'","{v : [a] | v == zs' && elems v == Set_cup elems xs elems ys && len v >= 0}"]]],[{"spanInfo":{"startLine":428,"endLine":428,"endCol":8,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":29,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Z7","{v : [a] | unique v <=> unique ys && not (Set_mem y elems ys) && null v <=> false && xListSelector v == y && elems v == Set_cup Set_sng y elems ys && listElts v == Set_cup Set_sng y listElts ys && xsListSelector v == ys && len v == 1 + len ys && len v >= 0}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":49,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":560,"endLine":560,"endCol":37,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Y7","{v : [a] | unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":153,"endLine":153,"endCol":23,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_intersection_comm","forall a.\n(GHC.Classes.Ord a) =>\n(Data.Set.Base.Set a)\n-> (Data.Set.Base.Set a) -> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":133,"endLine":133,"endCol":26,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.True","{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.focusLeft","forall a. (Sets.Zipper a) -> (Sets.Zipper a)"]]],[{"spanInfo":{"startLine":321,"endLine":321,"endCol":11,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : GHC.Types.Bool | Prop v <=> x <= y}"]]],[{"spanInfo":{"startLine":370,"endLine":370,"endCol":7,"startCol":4,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["mid","GHC.Types.Int"]]],[{"spanInfo":{"startLine":459,"endLine":459,"endCol":35,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["seen","{v : [a] | v == seen && len v >= 0}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":61,"startCol":60,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":271,"endLine":271,"endCol":25,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zp","{v : [a] | unique v <=> unique xs && not (Set_mem x elems xs) && null v <=> false && xListSelector v == x && elems v == Set_cup Set_sng x elems xs && listElts v == Set_cup Set_sng x listElts xs && xsListSelector v == xs && len v == 1 + len xs && len v >= 0}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"((Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a)))\n-> (Sets.Zipper a) -> (Data.Maybe.Maybe (Sets.Zipper a))"]]],[{"spanInfo":{"startLine":471,"endLine":471,"endCol":28,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":357,"endLine":357,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":217,"endLine":217,"endCol":44,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZK","{v : (Data.Set.Base.Set a) | v == elems xs}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":22,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cap x1 v}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":44,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ls","{v : [a] | not (Set_mem f elems v) && unique v && v == ls && len v >= 0}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1XQ","x1:(Sets.Zipper a)\n-> {v : (Data.Maybe.Maybe (Sets.Zipper a)) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":417,"endLine":417,"endCol":12,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.isNotUnique","{v : [GHC.Types.Int] | unique v}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":45,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1XS","{v : (Sets.Zipper a) | right v == xs && focus v == x}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["z","{v : (Data.Set.Base.Set a) | v == z}"]]],[{"spanInfo":{"startLine":270,"endLine":270,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Zr","{v : [a] | unique v <=> true && null v <=> true && Set_emp listElts v && elems v == Set_empty 0 && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":459,"endLine":459,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":47,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZQ","{v : (Data.Set.Base.Set a) | v == elems xs'}"]]],[{"spanInfo":{"startLine":483,"endLine":483,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":482,"endLine":482,"endCol":17,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","{v : [a] | unique v}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["n","GHC.Types.Int"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":86,"startCol":72,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cap x1 v}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":426,"endLine":426,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.filter","forall a.\n(a -> GHC.Types.Bool)\n-> x3:{v : [a] | unique v}\n-> {v : [a] | Set_sub elems v elems x3 && unique v}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":354,"endLine":354,"endCol":15,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_merge_app","forall a.\n(GHC.Classes.Ord a) =>\n[a] -> [a] -> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":53,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1ZV","{v : (Data.Set.Base.Set a) | v == elems xs}"]]],[{"spanInfo":{"startLine":367,"endLine":367,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.merge","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a]\n-> x3:[a] -> {v : [a] | elems v == Set_cup elems x2 elems x3}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":46,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{v : (Data.Set.Base.Set a) | v == y}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{v : (Data.Set.Base.Set a) | v == x}"]]],[{"spanInfo":{"startLine":454,"endLine":454,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":585,"endLine":585,"endCol":31,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"{v : [a] | Set_sub elems v elems ls && unique v && len v >= 0}"]]],[{"spanInfo":{"startLine":143,"endLine":143,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["GHC.Types.False","{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : GHC.Types.Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":338,"endLine":338,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":584,"endLine":584,"endCol":49,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YC","{v : (Sets.Zipper a) | right v == rs' && focus v == f'}"]]],[{"spanInfo":{"startLine":181,"endLine":181,"endCol":17,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_cup_dif_bad","forall a.\n(GHC.Classes.Ord a) =>\n(Data.Set.Base.Set a)\n-> (Data.Set.Base.Set a) -> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":275,"endLine":275,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["j","{v : GHC.Types.Int | v == j}"]]],[{"spanInfo":{"startLine":290,"endLine":290,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.insert","forall a.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:[a] -> {v : [a] | elems v == Set_cup Set_sng x2 elems x3}"]]],[{"spanInfo":{"startLine":583,"endLine":583,"endCol":54,"startCol":50,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Ys","{v : [a] | unique v <=> unique rs && not (Set_mem f elems rs) && null v <=> false && xListSelector v == f && elems v == Set_cup Set_sng f elems rs && listElts v == Set_cup Set_sng f listElts rs && xsListSelector v == rs && len v == 1 + len rs && len v >= 0}"]]],[{"spanInfo":{"startLine":399,"endLine":399,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.unique","forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : GHC.Types.Bool | Prop VV <=> unique x2}"]]],[{"spanInfo":{"startLine":172,"endLine":172,"endCol":33,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":62,"startCol":56,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20m","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:{v : GHC.Types.Int | v >= i && v < j}\n-> x2:[{v : GHC.Types.Int | v > x1 && v > i && v >= i && v < j}]<\\x20 VV -> v > x20 && v > i && v < j>\n-> {v : [{v : GHC.Types.Int | v >= i && v < j}]<\\x11 VV -> v > x11 && v > i && v < j> | unique v <=> unique x2 && not (Set_mem x1 elems x2) && null v <=> false && xListSelector v == x1 && elems v == Set_cup Set_sng x1 elems x2 && listElts v == Set_cup Set_sng x1 listElts x2 && xsListSelector v == x2 && len v == 1 + len x2}"]]],[{"spanInfo":{"startLine":414,"endLine":414,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1YN","{v : GHC.Types.Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":44,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":39,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":400,"endLine":400,"endCol":33,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> not (Prop x1)}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":43,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d1Z1","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.die","forall a. {v : [GHC.Types.Char] | false} -> a"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["lq_anf__d20G","{v : GHC.Types.Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":249,"endLine":249,"endCol":18,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":428,"endLine":428,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["xs'","{v : [a] | Set_sub elems v elems xs && unique v && v == xs' && len v >= 0}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["msg","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":162,"endLine":162,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","(Data.Set.Base.Set a)"]]],[{"spanInfo":{"startLine":471,"endLine":471,"endCol":25,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.isin","forall a.\n(GHC.Classes.Eq a) =>\nx2:a\n-> x3:[a] -> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 elems x3}"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.mergeSort","forall a.\n(GHC.Classes.Ord a) =>\n[a] -> {v : [a] | elems v == Set_empty 0}"]]],[{"spanInfo":{"startLine":322,"endLine":322,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":125,"endLine":125,"endCol":25,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.prop_one_plus_one_eq_two","forall a.\n(GHC.Num.Num a, GHC.Classes.Eq a) =>\na -> {v : GHC.Types.Bool | Prop v}"]]],[{"spanInfo":{"startLine":498,"endLine":498,"endCol":8,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Bool | Prop v <=> x1 < v}"]]],[{"spanInfo":{"startLine":20,"endLine":20,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["msg","{v : [GHC.Types.Char] | false}"]]],[{"spanInfo":{"startLine":356,"endLine":356,"endCol":31,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["Sets.append'","forall a.\nx1:[a]\n-> x2:[a] -> {v : [a] | elems v == Set_cup elems x1 elems x2}"]]],[{"spanInfo":{"startLine":459,"endLine":459,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":40,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:{v : [a] | not (Set_mem x1 elems v) && unique v}\n-> x3:{v : [a] | not (Set_mem x1 elems v) && unique v && Set_empty 0 == Set_cap elems v elems x2}\n-> {v : (Sets.Zipper a) | left v == x2 && right v == x3 && focus v == x1}"]]]],"o_templs":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [a] | unique VV <=> unique ?a && not (Set_mem x elems ?a) && null VV <=> false && xListSelector VV == x && elems VV == Set_cup Set_sng x elems ?a && listElts VV == Set_cup Set_sng x listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a}\n \n  not a subtype of Required type\n    VV : {VV : [a] | unique VV}\n \n  In Context\n    VV : {VV : [a] | unique VV <=> unique ?a && not (Set_mem x elems ?a) && null VV <=> false && xListSelector VV == x && elems VV == Set_cup Set_sng x elems ?a && listElts VV == Set_cup Set_sng x listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a && len VV >= 0}\n    x  : a\n    ?a : {fix##63#a : [a] | unique ?a && len ?a >= 0}","pos":{"spanInfo":{"startLine":483,"endLine":483,"endCol":36,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [a]\n \n  not a subtype of Required type\n    VV : {VV : [a] | unique VV}\n \n  In Context\n    VV : {VV : [a] | len VV >= 0}","pos":{"spanInfo":{"startLine":442,"endLine":442,"endCol":24,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [a] | Set_sub elems VV elems ?d && unique VV && VV == xs && VV == xs && VV == snd ?a && VV == snd ?e && elems VV == Set_cup elems ?c elems xs && elems VV == Set_cup elems ?b elems xs && elems VV == Set_cup elems xs elems ?c && elems VV == Set_cup elems xs elems ?b && elems VV == Set_cup elems xs elems xs && elems VV == elems xs && len VV == len xs && VV /= ?d && len VV >= 0 && len VV >= len ?c && len VV >= len ?b && len VV < len ?d}\n \n  not a subtype of Required type\n    VV : {VV : [a] | not (Set_mem x elems VV) && unique VV}\n \n  In Context\n    VV : {VV : [a] | Set_sub elems VV elems ?d && unique VV && VV == xs && VV == xs && VV == snd ?a && VV == snd ?e && elems VV == Set_cup elems ?c elems xs && elems VV == Set_cup elems ?b elems xs && elems VV == Set_cup elems xs elems ?c && elems VV == Set_cup elems xs elems ?b && elems VV == Set_cup elems xs elems xs && elems VV == elems xs && len VV == len xs && VV /= ?d && len VV >= 0 && len VV >= len ?c && len VV >= len ?b && len VV < len ?d}\n    GHC.Types.[]\n       : forall a <p :: a a -> Prop>. [a]\n    x  : {VV : a | VV == x && VV == fst ?a && VV == fst ?e}\n    xs : {v : [a] | Set_sub elems v elems ?d && unique v && v == snd ?a && v /= ?d && len v >= 0 && len v >= len ?c && len v >= len ?b && len v < len ?d}\n    t  : a\n    ?c : {fix##63#c : [a] | not (Set_mem t elems ?c) && unique ?c <=> true && null ?c <=> true && Set_emp listElts ?c && unique ?c && ?c == ?b && ?c == GHC.Types.[] && elems ?c == Set_empty 0 && len ?c == 0 && len ?c >= 0}\n    ?b : {fix##63#b : [a] | not (Set_mem t elems ?b) && unique ?b && len ?b >= 0}\n    ?d : {fix##63#d : [a] | unique ?d && len ?d >= 0}\n    ?a : (a, [a])\n    ?e : {fix##63#e : (a, [a]) | fst ?e == x && x_Tuple22 ?e == xs && snd ?e == xs && x_Tuple21 ?e == x}","pos":{"spanInfo":{"startLine":568,"endLine":568,"endCol":45,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Types.Int] | unique VV <=> unique ?d && not (Set_mem ?f elems ?d) && null VV <=> false && xListSelector VV == ?f && elems VV == Set_cup Set_sng ?f elems ?d && listElts VV == Set_cup Set_sng ?f listElts ?d && xsListSelector VV == ?d && len VV == 1 + len ?d}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Types.Int] | unique VV}\n \n  In Context\n    VV : {VV : [GHC.Types.Int] | unique VV <=> unique ?d && not (Set_mem ?f elems ?d) && null VV <=> false && xListSelector VV == ?f && elems VV == Set_cup Set_sng ?f elems ?d && listElts VV == Set_cup Set_sng ?f listElts ?d && xsListSelector VV == ?d && len VV == 1 + len ?d && len VV >= 0}\n    ?c : {fix##63#c : GHC.Types.Int | ?c == (3  :  int)}\n    ?b : {fix##63#b : [GHC.Types.Int] | unique ?b <=> unique ?g && not (Set_mem ?a elems ?g) && null ?b <=> false && xListSelector ?b == ?a && elems ?b == Set_cup Set_sng ?a elems ?g && listElts ?b == Set_cup Set_sng ?a listElts ?g && xsListSelector ?b == ?g && len ?b == 1 + len ?g && len ?b >= 0}\n    ?d : {fix##63#d : [GHC.Types.Int] | unique ?d <=> unique ?e && not (Set_mem ?h elems ?e) && null ?d <=> false && xListSelector ?d == ?h && elems ?d == Set_cup Set_sng ?h elems ?e && listElts ?d == Set_cup Set_sng ?h listElts ?e && xsListSelector ?d == ?e && len ?d == 1 + len ?e && len ?d >= 0}\n    ?a : {fix##63#a : GHC.Types.Int | ?a == (1  :  int)}\n    ?e : {fix##63#e : [GHC.Types.Int] | unique ?e <=> unique ?b && not (Set_mem ?c elems ?b) && null ?e <=> false && xListSelector ?e == ?c && elems ?e == Set_cup Set_sng ?c elems ?b && listElts ?e == Set_cup Set_sng ?c listElts ?b && xsListSelector ?e == ?b && len ?e == 1 + len ?b && len ?e >= 0}\n    ?h : {fix##63#h : GHC.Types.Int | ?h == (2  :  int)}\n    ?f : {fix##63#f : GHC.Types.Int | ?f == (1  :  int)}\n    ?g : {fix##63#g : [GHC.Types.Int] | unique ?g <=> true && null ?g <=> true && Set_emp listElts ?g && elems ?g == Set_empty 0 && len ?g == 0 && len ?g >= 0}","pos":{"spanInfo":{"startLine":417,"endLine":417,"endCol":31,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [a]\n \n  not a subtype of Required type\n    VV : {VV : [a] | elems VV == elems xs}\n \n  In Context\n    VV : {VV : [a] | len VV >= 0}\n    xs : {v : [a] | len v >= 0}","pos":{"spanInfo":{"startLine":258,"endLine":258,"endCol":30,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Bool | Prop VV <=> ?a == ?c}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV}\n \n  In Context\n    VV  : {VV : GHC.Types.Bool | Prop VV <=> ?a == ?c}\n    zs  : {zs : [a] | zs == zs && zs == snd ?d && zs == snd ?b && elems zs == Set_cup elems zs elems zs && elems zs == elems zs && len zs == len zs && len zs >= 0}\n    xs  : {v : [a] | len v >= 0}\n    ys  : {ys : [a] | ys == fst ?d && len ys >= 0}\n    xs' : {v : [a] | elems v == Set_cup elems ys elems zs && len v >= 0}\n    ?c  : {fix##63#c : (Data.Set.Base.Set a) | ?c == elems xs'}\n    ?b  : {fix##63#b : ([a], [a]) | fst ?b == ys && x_Tuple22 ?b == zs && snd ?b == zs && x_Tuple21 ?b == ys}\n    ?d  : ([a], [a])\n    ?a  : {fix##63#a : (Data.Set.Base.Set a) | ?a == elems xs}","pos":{"spanInfo":{"startLine":275,"endLine":275,"endCol":47,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Bool | not (Prop VV) && VV == GHC.Types.False}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV}\n \n  In Context\n    VV : {VV : GHC.Types.Bool | not (Prop VV) && VV == GHC.Types.False}\n    GHC.Types.False\n       : {GHC.Types.False : GHC.Types.Bool | not (Prop GHC.Types.False)}","pos":{"spanInfo":{"startLine":143,"endLine":143,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Bool | Prop VV <=> Prop pre => Prop ?a}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV}\n \n  In Context\n    VV  : {VV : GHC.Types.Bool | Prop VV <=> Prop pre => Prop ?a}\n    GHC.Types.True\n        : {GHC.Types.True : GHC.Types.Bool | Prop GHC.Types.True}\n    y   : (Data.Set.Base.Set a)\n    x   : (Data.Set.Base.Set a)\n    pre : {pre : GHC.Types.Bool | Prop pre && pre == GHC.Types.True}\n    ?c  : {fix##63#c : (Data.Set.Base.Set a) | ?c == Set_dif ?b y}\n    ?b  : {fix##63#b : (Data.Set.Base.Set a) | ?b == Set_cup x y}\n    ?a  : {fix##63#a : GHC.Types.Bool | Prop ?a <=> x == ?c}","pos":{"spanInfo":{"startLine":182,"endLine":182,"endCol":56,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : GHC.Types.Bool\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | not (Prop VV)}\n \n  In Context\n    VV : GHC.Types.Bool","pos":{"spanInfo":{"startLine":297,"endLine":297,"endCol":26,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : GHC.Types.Bool\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Bool | Prop VV}\n \n  In Context\n    VV : GHC.Types.Bool","pos":{"spanInfo":{"startLine":294,"endLine":294,"endCol":28,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [{v : GHC.Types.Int | v >= i && v < j}]<\\x3 VV -> v > x3 && v > i && v >= ?b && v < j && ?b <= v> | unique VV <=> unique ?a && not (Set_mem i elems ?a) && null VV <=> false && xListSelector VV == i && elems VV == Set_cup Set_sng i elems ?a && listElts VV == Set_cup Set_sng i listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a}\n \n  not a subtype of Required type\n    VV : {VV : [{v : GHC.Types.Int | v < j && i <= v}] | unique VV}\n \n  In Context\n    VV : {VV : [GHC.Types.Int] | unique VV <=> unique ?a && not (Set_mem i elems ?a) && null VV <=> false && xListSelector VV == i && elems VV == Set_cup Set_sng i elems ?a && listElts VV == Set_cup Set_sng i listElts ?a && xsListSelector VV == ?a && len VV == 1 + len ?a && len VV >= 0}\n    i  : GHC.Types.Int\n    j  : GHC.Types.Int\n    ?c : {fix##63#c : GHC.Types.Int | ?c == (1  :  int)}\n    ?b : {fix##63#b : GHC.Types.Int | ?b == i + ?c}\n    ?a : {fix##63#a : [GHC.Types.Int] | unique ?a && len ?a >= 0}","pos":{"spanInfo":{"startLine":498,"endLine":498,"endCol":36,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_06-measure-sets.lhs"},"realSpan":true}}]}}
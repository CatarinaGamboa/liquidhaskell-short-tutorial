{"status":"unsafe","types":{"499":{"19":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get","row":499,"col":19},"23":{"ann":"{VV : a | VV == k'}","ident":"k'","row":499,"col":23},"26":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":499,"col":26}},"477":{"35":{"ann":"{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}","ident":"GHC.Types.True","row":477,"col":35},"1":{"ann":"forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}","ident":"AssocativeMap.lemma_notMem","row":477,"col":1}},"185":{"20":{"ann":"{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}","ident":"GHC.Types.False","row":185,"col":20}},"411":{"17":{"ann":"{VV : a | VV == v}","ident":"v","row":411,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":411,"col":5},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":411,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":411,"col":11}},"539":{"17":{"ann":"{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}","ident":"GHC.Types.True","row":539,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":539,"col":5},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":539,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":539,"col":11}},"294":{"31":{"ann":"{v : AssocativeMap.Expr | v == e}","ident":"e","row":294,"col":31},"22":{"ann":"({v : AssocativeMap.Expr | false}\n -> {v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | false})\n-> {v : AssocativeMap.Expr | false}\n-> {v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | false}","ident":"_","row":294,"col":22},"29":{"ann":"{v : (AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v}) | v == g}","ident":"g","row":294,"col":29},"17":{"ann":"x1:{v : AssocativeMap.Expr | false}\n-> {v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | isJust v <=> true && fromJust v == x1}","ident":"lq_anf__d1w4","row":294,"col":17},"5":{"ann":"{v : GHC.Types.Bool | false}","ident":"_","row":294,"col":5},"24":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> {v : AssocativeMap.Expr | Set_sub free v keys x1}\n-> {v : AssocativeMap.Expr | val v}","ident":"_","row":294,"col":24}},"395":{"17":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}","ident":"AssocativeMap.set","row":395,"col":17},"26":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":395,"col":26},"21":{"ann":"{VV : a | VV == k'}","ident":"k'","row":395,"col":21},"24":{"ann":"{VV : a | VV == v}","ident":"v","row":395,"col":24}},"502":{"17":{"ann":"{v : [GHC.Types.Char] | false} -> a","ident":"_","row":502,"col":17},"21":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d1vQ","row":502,"col":21}},"304":{"12":{"ann":"{v : AssocativeMap.Expr | val v && v == v1}","ident":"v1","row":304,"col":12},"1":{"ann":"[AssocativeMap.Expr]","ident":"AssocativeMap.tests","row":304,"col":1},"16":{"ann":"{v : AssocativeMap.Expr | val v && v == v2}","ident":"v2","row":304,"col":16},"11":{"ann":"{v : [AssocativeMap.Expr] | null v <=> false && xListSelector v == v2 && len v >= 0}","ident":"lq_anf__d1w1","row":304,"col":11}},"227":{"48":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})","ident":"ds_d1uo","row":227,"col":48},"43":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}","ident":"eval","row":227,"col":43},"31":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}","ident":"eval","row":227,"col":31},"36":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})","ident":"ds_d1uo","row":227,"col":36},"50":{"ann":"{v : AssocativeMap.Expr | v == e2}","ident":"e2","row":227,"col":50},"38":{"ann":"{v : AssocativeMap.Expr | v == e1}","ident":"e1","row":227,"col":38},"24":{"ann":"{v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}","ident":"_","row":227,"col":24}},"183":{"20":{"ann":"{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}","ident":"GHC.Types.False","row":183,"col":20}},"255":{"22":{"ann":"x1:[GHC.Types.Char]\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_sng x1}","ident":"_","row":255,"col":22},"32":{"ann":"{v : [GHC.Types.Char] | v == x && len v >= 0}","ident":"x","row":255,"col":32}},"309":{"15":{"ann":"{v : [GHC.Types.Char] | null v <=> false && v == x && len v >= 0}","ident":"x","row":309,"col":15},"17":{"ann":"{v : AssocativeMap.Expr | val v <=> true && v == c10 && free v == Set_empty 0}","ident":"c10","row":309,"col":17},"5":{"ann":"{v : AssocativeMap.Expr | val v <=> false && free v == Set_cup free c10 Set_dif free e1 Set_sng x}","ident":"e2","row":309,"col":5},"11":{"ann":"x1:[GHC.Types.Char]\n-> x2:AssocativeMap.Expr\n-> x3:AssocativeMap.Expr\n-> {v : AssocativeMap.Expr | val v <=> false && free v == Set_cup free x2 Set_dif free v Set_sng x1}","ident":"_","row":309,"col":11},"21":{"ann":"{v : AssocativeMap.Expr | val v <=> false && v == e1}","ident":"e1","row":309,"col":21}},"310":{"5":{"ann":"{v : [GHC.Types.Char] | null v <=> false}","ident":"x","row":310,"col":5},"11":{"ann":"{v : [GHC.Types.Char] | null v <=> false}","ident":"_","row":310,"col":11}},"368":{"51":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:(AssocativeMap.Map a b)\n-> {VV : (Data.Set.Base.Set a) | VV == keys x2}","ident":"AssocativeMap.keys","row":368,"col":51},"44":{"ann":"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}","ident":"_","row":368,"col":44},"56":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":368,"col":56},"30":{"ann":"x1:a -> {v : (Data.Set.Base.Set a) | v == Set_sng x1}","ident":"_","row":368,"col":30},"23":{"ann":"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}","ident":"_","row":368,"col":23},"40":{"ann":"{VV : a | VV == k}","ident":"k","row":368,"col":40},"65":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":368,"col":65},"60":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:(AssocativeMap.Map a b)\n-> {VV : (Data.Set.Base.Set a) | VV == keys x2}","ident":"AssocativeMap.keys","row":368,"col":60}},"184":{"20":{"ann":"{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}","ident":"GHC.Types.False","row":184,"col":20}},"410":{"1":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get'","row":410,"col":1},"6":{"ann":"a","ident":"k'","row":410,"col":6},"9":{"ann":"{m : (AssocativeMap.Map a b) | Set_mem k' keys m}","ident":"m","row":410,"col":9}},"511":{"14":{"ann":"{VV : a | VV == x}","ident":"x","row":511,"col":14},"1":{"ann":"forall a b. a -> b -> b","ident":"AssocativeMap.assert","row":511,"col":1},"10":{"ann":"a","ident":"x","row":511,"col":10}},"498":{"25":{"ann":"forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}","ident":"AssocativeMap.lemma_notMem","row":498,"col":25},"44":{"ann":"(a -> a) -> a -> a","ident":"_","row":498,"col":44},"17":{"ann":"GHC.Types.Bool -> a -> a","ident":"_","row":498,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":498,"col":5},"41":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":498,"col":41},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":498,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":498,"col":11},"38":{"ann":"{VV : a | VV == k'}","ident":"k'","row":498,"col":38}},"541":{"17":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:(AssocativeMap.Map a b)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 keys x3}","ident":"AssocativeMap.mem","row":541,"col":17},"21":{"ann":"{VV : a | VV == k'}","ident":"k'","row":541,"col":21},"24":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":541,"col":24}},"22":{"23":{"ann":"forall a b. (AssocativeMap.Map a b) -> (AssocativeMap.Map a b)","ident":"AssocativeMap.left","row":22,"col":23}},"293":{"1":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> AssocativeMap.Expr\n-> (Data.Maybe.Maybe {v : AssocativeMap.Expr | val v})","ident":"AssocativeMap.evalAny","row":293,"col":1},"11":{"ann":"AssocativeMap.Expr","ident":"e","row":293,"col":11},"9":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})","ident":"g","row":293,"col":9}},"392":{"1":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}","ident":"AssocativeMap.set","row":392,"col":1},"5":{"ann":"a","ident":"k'","row":392,"col":5},"8":{"ann":"a","ident":"v'","row":392,"col":8}},"308":{"19":{"ann":"x1:AssocativeMap.Expr\n-> x2:AssocativeMap.Expr\n-> {v : AssocativeMap.Expr | val v <=> false && free v == Set_cup free x1 free x2}","ident":"_","row":308,"col":19},"12":{"ann":"x1:[GHC.Types.Char]\n-> {v : AssocativeMap.Expr | val v <=> false && free v == Set_sng x1}","ident":"_","row":308,"col":12},"26":{"ann":"{v : AssocativeMap.Expr | val v <=> true && v == c1 && free v == Set_empty 0}","ident":"c1","row":308,"col":26},"16":{"ann":"{v : [GHC.Types.Char] | null v <=> false && v == x && len v >= 0}","ident":"x","row":308,"col":16},"5":{"ann":"{v : AssocativeMap.Expr | val v <=> false}","ident":"e1","row":308,"col":5}},"311":{"17":{"ann":"{v : GHC.Types.Int | v == (1  :  int)}","ident":"lq_anf__d1vW","row":311,"col":17},"5":{"ann":"{v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}","ident":"c1","row":311,"col":5},"11":{"ann":"GHC.Types.Int\n-> {v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}","ident":"_","row":311,"col":11}},"182":{"1":{"ann":"x1:AssocativeMap.Expr -> {VV : GHC.Types.Bool | Prop VV <=> val x1}","ident":"AssocativeMap.val","row":182,"col":1},"20":{"ann":"{v : GHC.Types.Bool | Prop v && v == GHC.Types.True}","ident":"GHC.Types.True","row":182,"col":20}},"254":{"22":{"ann":"forall a. {v : (Data.Set.Base.Set a) | Set_emp v}","ident":"Data.Set.Base.empty","row":254,"col":22},"1":{"ann":"x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}","ident":"AssocativeMap.free","row":254,"col":1}},"413":{"25":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":413,"col":25},"22":{"ann":"{VV : a | VV == k'}","ident":"k'","row":413,"col":22},"17":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get'","row":413,"col":17}},"393":{"22":{"ann":"{VV : a | VV == k}","ident":"k","row":393,"col":22},"29":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":393,"col":29},"17":{"ann":"x1:a\n-> x2:b\n-> x3:(AssocativeMap.Map {VV : a | VV < x1} b)\n-> x4:(AssocativeMap.Map {VV : a | x1 < VV} b)\n-> {v : (AssocativeMap.Map a b) | keys v == Set_cup Set_sng x1 Set_cup keys x3 keys x4 && left v == x3 && right v == x4 && value v == x2 && key v == x1}","ident":"_","row":393,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":393,"col":5},"27":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":393,"col":27},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":393,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":393,"col":11},"24":{"ann":"{VV : a | VV == v'}","ident":"v'","row":393,"col":24}},"540":{"17":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:(AssocativeMap.Map a b)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 keys x3}","ident":"AssocativeMap.mem","row":540,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":540,"col":5},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":540,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":540,"col":11},"21":{"ann":"{VV : a | VV == k'}","ident":"k'","row":540,"col":21},"24":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":540,"col":24}},"23":{"23":{"ann":"forall a b. (AssocativeMap.Map a b) -> (AssocativeMap.Map a b)","ident":"AssocativeMap.right","row":23,"col":23}},"297":{"17":{"ann":"{VV : a | false}","ident":"_","row":297,"col":17},"5":{"ann":"forall a. {VV : a | false}","ident":"ok","row":297,"col":5}},"396":{"25":{"ann":"{VV : a | VV == v'}","ident":"v'","row":396,"col":25},"28":{"ann":"{v : (AssocativeMap.Map {VV : a | false} b) | keys v == Set_empty 0}","ident":"lq_anf__d1va","row":396,"col":28},"22":{"ann":"{VV : a | VV == k'}","ident":"k'","row":396,"col":22},"17":{"ann":"x1:a\n-> x2:b\n-> x3:(AssocativeMap.Map {VV : a | VV < x1} b)\n-> x4:(AssocativeMap.Map {VV : a | x1 < VV} b)\n-> {v : (AssocativeMap.Map a b) | keys v == Set_cup Set_sng x1 Set_cup keys x3 keys x4 && left v == x3 && right v == x4 && value v == x2 && key v == x1}","ident":"_","row":396,"col":17},"32":{"ann":"{v : (AssocativeMap.Map {VV : a | false} b) | keys v == Set_empty 0}","ident":"lq_anf__d1vb","row":396,"col":32}},"307":{"19":{"ann":"{v : AssocativeMap.Expr | val v <=> false && v == e2 && free v == Set_cup free c10 Set_dif free e1 Set_sng x}","ident":"e2","row":307,"col":19},"5":{"ann":"{v : AssocativeMap.Expr | val v}","ident":"v2","row":307,"col":5},"11":{"ann":"{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}","ident":"_","row":307,"col":11}},"501":{"19":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get","row":501,"col":19},"23":{"ann":"{VV : a | VV == k'}","ident":"k'","row":501,"col":23},"26":{"ann":"{v : (AssocativeMap.Map {VV : a | k < VV} b) | v == r}","ident":"r","row":501,"col":26}},"16":{"17":{"ann":"{v : [GHC.Types.Char] | false}","ident":"x","row":16,"col":17},"1":{"ann":"forall a. {v : [GHC.Types.Char] | false} -> a","ident":"AssocativeMap.die","row":16,"col":1},"5":{"ann":"{v : [GHC.Types.Char] | false}","ident":"x","row":16,"col":5},"11":{"ann":"[GHC.Types.Char] -> a","ident":"_","row":16,"col":11}},"412":{"25":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":412,"col":25},"22":{"ann":"{VV : a | VV == k'}","ident":"k'","row":412,"col":22},"17":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get'","row":412,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":412,"col":5},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":412,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":412,"col":11}},"285":{"15":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> {v : AssocativeMap.Expr | Set_sub free v keys x1}\n-> {v : AssocativeMap.Expr | val v}","ident":"_","row":285,"col":15},"1":{"ann":"{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}","ident":"AssocativeMap.topEval","row":285,"col":1},"20":{"ann":"{v : (AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | false}) | Set_emp keys v}","ident":"lq_anf__d1vU","row":285,"col":20}},"497":{"17":{"ann":"{VV : a | VV == v}","ident":"v","row":497,"col":17},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":497,"col":5},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 == v}","ident":"_","row":497,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":497,"col":11}},"20":{"23":{"ann":"forall a b. (AssocativeMap.Map a b) -> a","ident":"AssocativeMap.key","row":20,"col":23}},"367":{"1":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:(AssocativeMap.Map a b)\n-> {VV : (Data.Set.Base.Set a) | VV == keys x2}","ident":"AssocativeMap.keys","row":367,"col":1},"23":{"ann":"forall a. {v : (Data.Set.Base.Set a) | Set_emp v}","ident":"Data.Set.Base.empty","row":367,"col":23}},"200":{"37":{"ann":"{v : GHC.Types.Int | v == j}","ident":"j","row":200,"col":37},"28":{"ann":"GHC.Types.Int\n-> {v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}","ident":"_","row":200,"col":28},"36":{"ann":"x1:GHC.Types.Int\n-> x2:GHC.Types.Int -> {v : GHC.Types.Int | v == x1 + x2}","ident":"_","row":200,"col":36},"35":{"ann":"{v : GHC.Types.Int | v == i}","ident":"i","row":200,"col":35},"1":{"ann":"{v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}\n-> {v : AssocativeMap.Expr | val v}","ident":"AssocativeMap.plus","row":200,"col":1}},"561":{"30":{"ann":"x1:(Data.Set.Base.Set a)\n-> x2:(Data.Set.Base.Set a)\n-> {v : (Data.Set.Base.Set a) | v == Set_cup x1 v}","ident":"_","row":561,"col":30},"17":{"ann":"x1:a -> {v : (Data.Set.Base.Set a) | v == Set_sng x1}","ident":"_","row":561,"col":17},"45":{"ann":"{v : [a] | v == xs && len v >= 0}","ident":"xs","row":561,"col":45},"39":{"ann":"forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}","ident":"AssocativeMap.elems","row":561,"col":39},"27":{"ann":"{VV : a | VV == x}","ident":"x","row":561,"col":27}},"379":{"1":{"ann":"forall a b. {m : (AssocativeMap.Map a b) | Set_emp keys m}","ident":"AssocativeMap.emp","row":379,"col":1},"11":{"ann":"forall a. a","ident":"GHC.Err.undefined","row":379,"col":11}},"306":{"19":{"ann":"{v : AssocativeMap.Expr | val v <=> false && v == e1}","ident":"e1","row":306,"col":19},"5":{"ann":"{v : AssocativeMap.Expr | val v}","ident":"v1","row":306,"col":5},"11":{"ann":"{v : AssocativeMap.Expr | Set_emp free v}\n-> {v : AssocativeMap.Expr | val v}","ident":"_","row":306,"col":11}},"500":{"25":{"ann":"forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}","ident":"AssocativeMap.lemma_notMem","row":500,"col":25},"44":{"ann":"(a -> a) -> a -> a","ident":"_","row":500,"col":44},"17":{"ann":"GHC.Types.Bool -> a -> a","ident":"_","row":500,"col":17},"41":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":500,"col":41},"38":{"ann":"{VV : a | VV == k'}","ident":"k'","row":500,"col":38}},"225":{"1":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})\n-> {v : AssocativeMap.Expr | Set_sub free v keys x1}\n-> {v : AssocativeMap.Expr | val v}","ident":"AssocativeMap.eval","row":225,"col":1},"8":{"ann":"AssocativeMap.Expr","ident":"i","row":225,"col":8},"24":{"ann":"{v : AssocativeMap.Expr | val v <=> true && v == i && free v == Set_empty 0}","ident":"lq_anf__d1vR","row":225,"col":24}},"257":{"51":{"ann":"x1:(Data.Set.Base.Set [GHC.Types.Char])\n-> x2:(Data.Set.Base.Set [GHC.Types.Char])\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_dif x1 v}","ident":"_","row":257,"col":51},"28":{"ann":"{v : AssocativeMap.Expr | v == e1}","ident":"e1","row":257,"col":28},"75":{"ann":"{v : [GHC.Types.Char] | v == x && len v >= 0}","ident":"x","row":257,"col":75},"23":{"ann":"x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}","ident":"AssocativeMap.free","row":257,"col":23},"41":{"ann":"(Data.Set.Base.Set [GHC.Types.Char])","ident":"lq_anf__d1wg","row":257,"col":41},"47":{"ann":"{v : AssocativeMap.Expr | v == e2}","ident":"e2","row":257,"col":47},"65":{"ann":"x1:[GHC.Types.Char]\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_sng x1}","ident":"_","row":257,"col":65},"42":{"ann":"x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}","ident":"AssocativeMap.free","row":257,"col":42},"32":{"ann":"x1:(Data.Set.Base.Set [GHC.Types.Char])\n-> x2:(Data.Set.Base.Set [GHC.Types.Char])\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_cup x1 v}","ident":"_","row":257,"col":32}},"312":{"17":{"ann":"{v : GHC.Types.Int | v == (10  :  int)}","ident":"lq_anf__d1vV","row":312,"col":17},"5":{"ann":"{v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}","ident":"c10","row":312,"col":5},"11":{"ann":"GHC.Types.Int\n-> {v : AssocativeMap.Expr | val v <=> true && free v == Set_empty 0}","ident":"_","row":312,"col":11}},"231":{"31":{"ann":"{v : AssocativeMap.Expr | v == e1}","ident":"e1","row":231,"col":31},"29":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})","ident":"ds_d1uo","row":231,"col":29},"5":{"ann":"{v : AssocativeMap.Expr | val v}","ident":"v1","row":231,"col":5},"24":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}","ident":"eval","row":231,"col":24}},"228":{"29":{"ann":"{v : (AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v && v /= i}) | v == g'}","ident":"g'","row":228,"col":29},"24":{"ann":"x1:(AssocativeMap.Map [GHC.Types.Char] {VV : AssocativeMap.Expr | val VV})\n-> {VV : AssocativeMap.Expr | Set_sub free VV keys x1}\n-> {VV : AssocativeMap.Expr | val VV}","ident":"eval","row":228,"col":24},"32":{"ann":"{v : AssocativeMap.Expr | v == e2}","ident":"e2","row":228,"col":32}},"478":{"48":{"ann":"a","ident":"ds_d1tQ","row":478,"col":48},"57":{"ann":"forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}","ident":"AssocativeMap.lemma_notMem","row":478,"col":57},"74":{"ann":"{v : (AssocativeMap.Map a b) | v == r}","ident":"r","row":478,"col":74},"35":{"ann":"forall a b.\nx1:a\n-> x2:(AssocativeMap.Map {VV : a | VV /= x1} b)\n-> {v : GHC.Types.Bool | not (Set_mem x1 keys x2)}","ident":"AssocativeMap.lemma_notMem","row":478,"col":35},"52":{"ann":"{v : (AssocativeMap.Map a b) | v == l}","ident":"l","row":478,"col":52},"70":{"ann":"a","ident":"ds_d1tQ","row":478,"col":70},"54":{"ann":"x1:GHC.Types.Bool\n-> x2:GHC.Types.Bool\n-> {v : GHC.Types.Bool | Prop v <=> Prop x1 && Prop v}","ident":"_","row":478,"col":54}},"201":{"28":{"ann":"{v : [GHC.Types.Char] | false} -> {v : AssocativeMap.Expr | false}","ident":"_","row":201,"col":28},"32":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d1vj","row":201,"col":32}},"560":{"1":{"ann":"forall a.\n(GHC.Classes.Ord a) =>\nx2:[a] -> {VV : (Data.Set.Base.Set a) | VV == elems x2}","ident":"AssocativeMap.elems","row":560,"col":1},"16":{"ann":"forall a. {v : (Data.Set.Base.Set a) | Set_emp v}","ident":"Data.Set.Base.empty","row":560,"col":16}},"542":{"17":{"ann":"{v : GHC.Types.Bool | not (Prop v) && v == GHC.Types.False}","ident":"GHC.Types.False","row":542,"col":17}},"496":{"1":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get","row":496,"col":1},"5":{"ann":"a","ident":"k'","row":496,"col":5}},"21":{"23":{"ann":"forall a b. (AssocativeMap.Map a b) -> b","ident":"AssocativeMap.value","row":21,"col":23}},"226":{"28":{"ann":"{v : [GHC.Types.Char] | v == x && len v >= 0}","ident":"x","row":226,"col":28},"30":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})","ident":"ds_d1uo","row":226,"col":30},"24":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a -> {m : (AssocativeMap.Map a b) | Set_mem x2 keys m} -> b","ident":"AssocativeMap.get","row":226,"col":24}},"538":{"1":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> x3:(AssocativeMap.Map a b)\n-> {v : GHC.Types.Bool | Prop v <=> Set_mem x2 keys x3}","ident":"AssocativeMap.mem","row":538,"col":1},"5":{"ann":"a","ident":"k'","row":538,"col":5}},"295":{"17":{"ann":"{v : (Data.Maybe.Maybe {v : AssocativeMap.Expr | false}) | isJust v <=> false}","ident":"_","row":295,"col":17}},"394":{"17":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}","ident":"AssocativeMap.set","row":394,"col":17},"26":{"ann":"{v : (AssocativeMap.Map {VV : a | VV < k} b) | v == l}","ident":"l","row":394,"col":26},"5":{"ann":"{VV : a | VV == k'}","ident":"k'","row":394,"col":5},"8":{"ann":"x1:a -> x2:a -> {v : GHC.Types.Bool | Prop v <=> x1 < v}","ident":"_","row":394,"col":8},"11":{"ann":"{VV : a | VV == k}","ident":"k","row":394,"col":11},"21":{"ann":"{VV : a | VV == k'}","ident":"k'","row":394,"col":21},"24":{"ann":"{VV : a | VV == v}","ident":"v","row":394,"col":24}},"230":{"28":{"ann":"{v : [GHC.Types.Char] | v == x && len v >= 0}","ident":"x","row":230,"col":28},"30":{"ann":"{v : AssocativeMap.Expr | val v && v == v1}","ident":"v1","row":230,"col":30},"5":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v && v /= i})","ident":"g'","row":230,"col":5},"33":{"ann":"(AssocativeMap.Map [GHC.Types.Char] {v : AssocativeMap.Expr | val v})","ident":"ds_d1uo","row":230,"col":33},"24":{"ann":"forall a b.\n(GHC.Classes.Ord a) =>\nx2:a\n-> b\n-> x4:(AssocativeMap.Map a b)\n-> {n : (AssocativeMap.Map a b) | keys n == Set_cup Set_sng x2 keys x4}","ident":"AssocativeMap.set","row":230,"col":24}},"256":{"28":{"ann":"{v : AssocativeMap.Expr | v == e1}","ident":"e1","row":256,"col":28},"23":{"ann":"x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}","ident":"AssocativeMap.free","row":256,"col":23},"46":{"ann":"{v : AssocativeMap.Expr | v == e2}","ident":"e2","row":256,"col":46},"41":{"ann":"x1:AssocativeMap.Expr\n-> {VV : (Data.Set.Base.Set [GHC.Types.Char]) | VV == free x1}","ident":"AssocativeMap.free","row":256,"col":41},"32":{"ann":"x1:(Data.Set.Base.Set [GHC.Types.Char])\n-> x2:(Data.Set.Base.Set [GHC.Types.Char])\n-> {v : (Data.Set.Base.Set [GHC.Types.Char]) | v == Set_cup x1 v}","ident":"_","row":256,"col":32}},"414":{"22":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__d1vE","row":414,"col":22},"17":{"ann":"{v : [GHC.Types.Char] | false} -> a","ident":"_","row":414,"col":17}},"551":{"1":{"ann":"x1:[GHC.Types.Int]\n-> {v : GHC.Types.Int | not (Set_mem v elems x1)}","ident":"AssocativeMap.fresh","row":551,"col":1},"9":{"ann":"forall a. a","ident":"GHC.Err.undefined","row":551,"col":9}}},"errors":[{"start":{"line":538,"column":1},"stop":{"line":538,"column":4},"message":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs:538:1-3: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Bool\n \n  not a subtype of Required type\n    VV : Bool | Prop VV <=> Set_mem k' keys ?a\n \n  In Context\n    VV : Bool\n    k' : a\n    ?a : (Map a b)"},{"start":{"line":392,"column":1},"stop":{"line":392,"column":4},"message":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs:392:1-3: Error: Liquid Type Mismatch\n  Inferred type\n    VV : (Map a b) | Set_mem fix keys VV\n \n  not a subtype of Required type\n    VV : (Map a b) | keys VV == Set_cup Set_sng k' keys ?a\n \n  In Context\n    VV : (Map a b) | Set_mem fix keys VV\n    k' : a\n    ?a : (Map a b)"},{"start":{"line":413,"column":25},"stop":{"line":413,"column":26},"message":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs:413:25: Error: Liquid Type Mismatch\n  Inferred type\n    VV : (Map a b) | VV == r\n \n  not a subtype of Required type\n    VV : (Map a b) | Set_mem k' keys VV\n \n  In Context\n    VV : (Map a b) | VV == r\n    k  : a\n    r  : (Map a b)\n    k' : a"},{"start":{"line":412,"column":25},"stop":{"line":412,"column":26},"message":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs:412:25: Error: Liquid Type Mismatch\n  Inferred type\n    VV : (Map a b) | VV == l\n \n  not a subtype of Required type\n    VV : (Map a b) | Set_mem k' keys VV\n \n  In Context\n    VV : (Map a b) | VV == l\n    k  : a\n    l  : (Map a b)\n    k' : a"},{"start":{"line":306,"column":19},"stop":{"line":306,"column":21},"message":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_07-case-study-associative-maps.lhs:306:19-20: Error: Liquid Type Mismatch\n  Inferred type\n    VV : Expr | val VV <=> false && VV == e1 && free VV == Set_cup free ?a free c1\n \n  not a subtype of Required type\n    VV : Expr | Set_emp free VV\n \n  In Context\n    VV : Expr | val VV <=> false && VV == e1 && free VV == Set_cup free ?a free c1\n    x  : [Char] | null v <=> false && xListSelector v == ?b && elems v == Set_cup Set_sng ?b elems ?c && listElts v == Set_cup Set_sng ?b listElts ?c && len v == 1 + len ?c && xsListSelector v == ?c && len v >= 0\n    c1 : Expr | val c1 <=> true && free c1 == Set_empty 0\n    e1 : Expr | val e1 <=> false && free e1 == Set_cup free ?a free c1\n    ?a : Expr | val ?a <=> false && free ?a == Set_sng x\n    ?c : [Char] | null ?c <=> true && Set_emp listElts ?c && elems ?c == Set_empty 0 && len ?c == 0 && len ?c >= 0\n    ?b : Char"}]}
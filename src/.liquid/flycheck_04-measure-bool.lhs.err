{"o_errors":[],"o_vars":[],"o_bots":[],"o_types":[[{"spanInfo":{"startLine":174,"endLine":174,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":21,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int\n-> x2:{v : Int | v /= 0}\n-> {v : Int | x1 >= 0 && x2 >= 0 => v >= 0 && x1 >= 0 && x2 >= 1 => v <= x1 && v == x1 / x2}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:[a]\n-> x2:[[a]]\n-> {v : [[a]] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":13,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ss","[[a]]"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["f","a -> a -> a"]]],[{"spanInfo":{"startLine":296,"endLine":296,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.sumBad","Integer"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.map","forall a b. (a -> b) -> [a] -> [b]"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":30,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":48,"endLine":48,"endCol":34,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zY","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":27,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A7","x1:Int -> x2:Int -> {v : Int | v == x1 + v}"]]],[{"spanInfo":{"startLine":229,"endLine":229,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"(a -> (Maybe a)) -> a -> (Maybe a)"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : [{v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v > 0 && 0 < v}] | v == elems && len v >= 0}"]]],[{"spanInfo":{"startLine":339,"endLine":339,"endCol":27,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x6 VV -> p2 x6> | fst v == x1 && x_Tuple22 v == x2 && snd v == x2 && x_Tuple21 v == x1}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":39,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.groupEq","forall a. (Eq a) => [a] -> [{v : [a] | notEmpty v}]"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":24,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.avg3","Int -> Int -> Int -> Int"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"({v : [[a]] | len v >= 0} -> ([a], [[a]]))\n-> {v : [[a]] | len v >= 0} -> ([a], [[a]])"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":23,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zG","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":211,"endLine":211,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.head","forall a. {v : [a] | notEmpty v} -> a"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["y","Int"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":44,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zf","{v : [{v : [a] | notEmpty v}] | len v >= 0}"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":31,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1ze","[{v : [a] | notEmpty v}] -> [a]"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":13,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Integer] | notEmpty v} -> Integer"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1z1","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":38,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["acc","{VV : a | VV == acc}"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A0","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":16,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"[Char] -> (IO ())"]]],[{"spanInfo":{"startLine":232,"endLine":232,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.True","{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":173,"endLine":173,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Int] | notEmpty v} -> Int"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":46,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zy","{v : [[a]] | len v >= 0}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":41,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.I#","x1:Int# -> {v : Int | v == (x1  :  int)}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":29,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1z2","{v : Int | 0 < v}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","[{v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v > 0 && 0 < v}]"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : Bool | Prop v && v == GHC.Types.True && v == ok}"]]],[{"spanInfo":{"startLine":232,"endLine":232,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.null","forall a. [a] -> Bool"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["total","{v : Int | v == total}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yU","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && len v == 1 + len ys && xsListSelector v == ys && len v >= 0}"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":36,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["total","{v : Int | v == total}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ss","{v : [[a]] | v == ss && len v >= 0}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ok","{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Data.Maybe.Nothing","forall a. {v : (Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : Int | notEmpty xs => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":340,"endLine":340,"endCol":23,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> (a, [a])"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["total","{v : Int | v == total}"]]],[{"spanInfo":{"startLine":169,"endLine":169,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","[Int]"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":33,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yP","x1:a -> {v : Bool | Prop v <=> x == x1}"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:[a]\n-> x2:[[a]]\n-> {v : [[a]] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":27,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1z6","{v : Int | notEmpty xs => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":169,"endLine":169,"endCol":9,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.average'","[Int] -> (Maybe Int)"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["y","Int"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ds_d1yd","Int"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":41,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.groupEq","forall a. (Eq a) => [a] -> [{v : [a] | notEmpty v}]"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["s","{v : [a] | v == s && len v >= 0}"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.map","forall a b. (a -> b) -> [a] -> [b]"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":43,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["wxs","{v : [({v : Int | 0 < v}, {v : Int | 0 < v})] | notEmpty v && v == wxs && len v >= 0}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":24,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.foldr","forall a b. (a -> b -> b) -> b -> [a] -> b"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":42,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A6","Int"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["f","a -> a -> a"]]],[{"spanInfo":{"startLine":49,"endLine":49,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ds_d1ye","{v : Int | 0 /= v}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["sum","{v : [{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | notEmpty v}\n-> {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":171,"endLine":171,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : (Maybe Int) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":330,"endLine":330,"endCol":22,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x5 VV -> p x5> | notEmpty v <=> false && null v <=> true && len v == 0}"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","Int"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["y","{v : Int | v == y}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":42,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && v == zs && len v == len zs && len v >= 0 && len v <= len xs}"]]],[{"spanInfo":{"startLine":229,"endLine":229,"endCol":28,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [a] | notEmpty v} -> a"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1z5","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":9,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : Bool | Prop v <=> x1 <= v}"]]],[{"spanInfo":{"startLine":215,"endLine":215,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.tail","forall a. {v : [a] | notEmpty v} -> [a]"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.foldr1","forall a. (a -> a -> a) -> {v : [a] | notEmpty v} -> a"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zJ","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":17,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.eliminateStutter","forall a. (Eq a) => [a] -> [a]"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size1","forall a. {v : [a] | notEmpty v} -> {v : Int | 0 < v}"]]],[{"spanInfo":{"startLine":339,"endLine":339,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{v : Int | v == x}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":229,"endLine":229,"endCol":31,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zc","a"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.avg2","Int -> Int -> Int"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":11,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | notEmpty v}"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":33,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zH","{v : [[a]] | notEmpty v <=> true && null v <=> false && xListSelector v == s && len v == 1 + len ss && xsListSelector v == ss && len v >= 0}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":11,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","[Int]"]]],[{"spanInfo":{"startLine":211,"endLine":211,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ds_d1xR","a -> b"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["w","{v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v == w && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"({v : [{v : [a] | notEmpty v}] | len v >= 0} -> [a])\n-> {v : [{v : [a] | notEmpty v}] | len v >= 0} -> [a]"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":20,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | notEmpty v && v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":41,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yN","a"]]],[{"spanInfo":{"startLine":296,"endLine":296,"endCol":16,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zK","{v : [Integer] | notEmpty v <=> false && null v <=> true && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"[Char] -> a"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:{v : [a] | notEmpty v}\n-> x2:[{v : [a] | notEmpty v}]<\\_ VV -> notEmpty v>\n-> {v : [{v : [a] | notEmpty v}]<\\_ VV -> notEmpty v> | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":45,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["etc","{v : [a] | v == etc && len v >= 0}"]]],[{"spanInfo":{"startLine":212,"endLine":212,"endCol":18,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : Int | notEmpty xs => v > 0 && v == elems && v >= 0}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["z","{v : Int | v == z}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":21,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zl","x1:a -> x2:a -> {VV : a | VV == x1 + x2}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A3","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":311,"endLine":311,"endCol":23,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"({v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}\n -> {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}\n -> {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v})\n-> {v : [{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | notEmpty v}\n-> {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":173,"endLine":173,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{v : Int | v == x}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":38,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1Ab","({v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v > 0 && 0 < v}, {v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v > 0 && 0 < v})\n-> {v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : Int | notEmpty xs => v > 0 && v == elems && v >= 0}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":13,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["totElems","{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","Int"]]],[{"spanInfo":{"startLine":48,"endLine":48,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.divide","Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":174,"endLine":174,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":9,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.notEmpty","forall a. x1:[a] -> {VV : Bool | Prop VV <=> notEmpty x1}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.wtAverage","{v : [({v : Int | 0 < v}, {v : Int | 0 < v})] | notEmpty v} -> Int"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":34,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A9","x1:({v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}, {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v})\n-> {v : Int | notEmpty wxs => v > 0 && v == fst x1 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":22,"endLine":22,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.main","(IO ())"]]],[{"spanInfo":{"startLine":331,"endLine":331,"endCol":24,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zu","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && len v >= 0}"]]],[{"spanInfo":{"startLine":173,"endLine":173,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["total","Int"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yK","a"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.foldr","forall a b. (a -> b -> b) -> b -> [a] -> b"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":42,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["totWeight","{v : Int | notEmpty wxs => v > 0 && v == totWeight && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":31,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zj","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":25,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zV","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":28,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && v == ys && len v == len ys && len v >= 0 && len v <= len xs}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["total","Int"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":20,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":45,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zx","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == y && len v == 1 + len etc && xsListSelector v == etc && len v >= 0}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":44,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size2","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | notEmpty v}\n-> {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":18,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":11,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : Bool | Prop v <=> x <= y}"]]],[{"spanInfo":{"startLine":212,"endLine":212,"endCol":56,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1z8","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":31,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yL","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":242,"endLine":242,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.groupEq","forall a. (Eq a) => [a] -> [{v : [a] | notEmpty v}]"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["total","Int"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":27,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zZ","{v : Int | v == x + y}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":18,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["w","{v : Int | notEmpty wxs => v > 0 && v == w && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [Int] | notEmpty v && v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ss","{v : [[a]] | v == ss && len v >= 0}"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":12,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["acc","a"]]],[{"spanInfo":{"startLine":331,"endLine":331,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zv","{v : [[a]] | notEmpty v <=> false && null v <=> true && len v == 0 && len v >= 0}"]]],[{"spanInfo":{"startLine":333,"endLine":333,"endCol":24,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zI","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && len v == 1 + len s && xsListSelector v == s && len v >= 0}"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":38,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.risers","forall a. (Ord a) => [a] -> [[a]]"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size1","forall a. {v : [a] | notEmpty v} -> {v : Int | 0 < v}"]]],[{"spanInfo":{"startLine":309,"endLine":309,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | notEmpty v}\n-> {v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["wxs","{v : [({v : Int | 0 < v}, {v : Int | 0 < v})] | notEmpty v}"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":19,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x5 VV -> p x5> | notEmpty v <=> false && null v <=> true && len v == 0}"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.I#","x1:Int# -> {v : Int | v == (x1  :  int)}"]]],[{"spanInfo":{"startLine":229,"endLine":229,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zb","x1:a -> {v : (Maybe a) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":41,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zm","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":115,"endLine":115,"endCol":22,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.True","{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["s","{v : [a] | v == s && len v >= 0}"]]],[{"spanInfo":{"startLine":215,"endLine":215,"endCol":17,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":43,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["wxs","{v : [({v : Int | 0 < v}, {v : Int | 0 < v})] | notEmpty v && v == wxs && len v >= 0}"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.sumOk","Integer"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":54,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zh","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["weights","[{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}]"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":27,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A1","{v : Int | v == x + y}"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":12,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Bool"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"(Int -> (Maybe Int)) -> Int -> (Maybe Int)"]]],[{"spanInfo":{"startLine":216,"endLine":216,"endCol":18,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> [a]"]]],[{"spanInfo":{"startLine":233,"endLine":233,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.False","{v : Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":17,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"(a -> a -> a) -> {v : [a] | notEmpty v} -> a"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":20,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":20,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A5","x1:Int -> {v : (Maybe Int) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.die","forall a. {v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":287,"endLine":287,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.sum","forall a. (Num a) => {v : [a] | notEmpty v} -> a"]]],[{"spanInfo":{"startLine":81,"endLine":81,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : Int | notEmpty xs => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":20,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.map","forall a b. (a -> b) -> [a] -> [b]"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["msg","{v : [Char] | false}"]]],[{"spanInfo":{"startLine":31,"endLine":31,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["msg","{v : [Char] | false}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":161,"endLine":161,"endCol":10,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : Int | notEmpty xs => v > 0 && v >= 0}"]]],[{"spanInfo":{"startLine":259,"endLine":259,"endCol":31,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zd","{v : [a] | notEmpty v} -> a"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":41,"startCol":40,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":28,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["weights","{v : [{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | v == weights && len v >= 0}"]]],[{"spanInfo":{"startLine":227,"endLine":227,"endCol":9,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.safeHead","forall a. [a] -> (Maybe a)"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["s","[a]"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":29,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zw","{v : [[a]] | notEmpty v} -> ([a], [[a]])"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":305,"endLine":305,"endCol":32,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["totElems","{v : Int | notEmpty wxs => v > 0 && v == totElems && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":158,"endLine":158,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.average","{v : [Int] | notEmpty v} -> Int"]]],[{"spanInfo":{"startLine":314,"endLine":314,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.map","forall a b. (a -> b) -> [a] -> [b]"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yY","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.avgMany","[Int] -> Int"]]],[{"spanInfo":{"startLine":229,"endLine":229,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:a -> x2:a -> {v : Bool | Prop v <=> x1 == v}"]]],[{"spanInfo":{"startLine":175,"endLine":175,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":243,"endLine":243,"endCol":42,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yV","{v : [{v : [a] | notEmpty v}] | len v >= 0}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":38,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{v : Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v == x && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.I#","x1:Int# -> {v : Int | v == (x1  :  int)}"]]],[{"spanInfo":{"startLine":277,"endLine":277,"endCol":25,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["acc","{VV : a | VV == acc}"]]],[{"spanInfo":{"startLine":331,"endLine":331,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":192,"endLine":192,"endCol":29,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1yZ","{v : Int | notEmpty xs => v > 0}"]]],[{"spanInfo":{"startLine":330,"endLine":330,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.risers","forall a. (Ord a) => [a] -> [[a]]"]]],[{"spanInfo":{"startLine":339,"endLine":339,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":307,"endLine":307,"endCol":36,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:Int\n-> x2:Int\n-> {v : Int | x1 > 0 && x2 > 0 => v >= x1 && v >= x2 && x1 > 1 && x2 > 1 => v > x1 && v > x2 && x1 == 0 || x2 == 0 => v == 0}"]]],[{"spanInfo":{"startLine":339,"endLine":339,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.safeSplit","forall a. {v : [a] | notEmpty v} -> (a, [a])"]]],[{"spanInfo":{"startLine":242,"endLine":242,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x5 VV -> p x5> | notEmpty v <=> false && null v <=> true && len v == 0}"]]],[{"spanInfo":{"startLine":60,"endLine":60,"endCol":20,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"Int -> {v : Int | 0 /= v} -> Int"]]],[{"spanInfo":{"startLine":191,"endLine":191,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.size2","forall a. x1:[a] -> {v : Int | notEmpty x1 => v > 0}"]]],[{"spanInfo":{"startLine":315,"endLine":315,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"a -> b"]]],[{"spanInfo":{"startLine":228,"endLine":228,"endCol":9,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"[a] -> Bool"]]],[{"spanInfo":{"startLine":288,"endLine":288,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ds_d1ys","{v : [a] | notEmpty v && len v >= 0}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":8,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ys","{VV : [a] | VV == ys && len VV == len ys && len VV >= 0 && len VV <= len xs}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":23,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["GHC.Types.False","{v : Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":296,"endLine":296,"endCol":13,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Integer] | notEmpty v} -> Integer"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["zs","{VV : [a] | VV == zs && len VV == len zs && len VV >= 0 && len VV <= len xs}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":17,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Int] | notEmpty v} -> Int"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"x1:[a]\n-> x2:[[a]]\n-> {v : [[a]] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":170,"endLine":170,"endCol":42,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["elems","{v : Int | notEmpty xs => v > 0 && v == elems && v >= 0}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"(a -> Bool)\n-> x3:[a]\n-> ({v : [a] | len v <= len x3}, {v : [a] | len v <= len x3})"]]],[{"spanInfo":{"startLine":308,"endLine":308,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.map","forall a b. (a -> b) -> [a] -> [b]"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"a -> b -> b"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["ds_d1xT","a -> b -> b"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["y","{v : Int | v == y}"]]],[{"spanInfo":{"startLine":160,"endLine":160,"endCol":17,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Int] | notEmpty v} -> Int"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["z","Int"]]],[{"spanInfo":{"startLine":62,"endLine":62,"endCol":31,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1A2","Int"]]],[{"spanInfo":{"startLine":278,"endLine":278,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["Measures.foldr","forall a b. (a -> b -> b) -> b -> [a] -> b"]]],[{"spanInfo":{"startLine":310,"endLine":310,"endCol":14,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["totWeight","{v : Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}"]]],[{"spanInfo":{"startLine":340,"endLine":340,"endCol":47,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[["lq_anf__d1zq","{v : [Char] | len v >= 0}"]]],[{"spanInfo":{"startLine":48,"endLine":48,"endCol":17,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> Int"]]]],"o_templs":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Int | VV == ?a + ?b}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | notEmpty ?c => VV > 0}\n \n  In Context\n    VV : {VV : GHC.Types.Int | VV == ?a + ?b}\n    xs : {v : [a] | len v >= 0}\n    ?c : {fix##63#c : [a] | len ?c >= 0}\n    ?b : {fix##63#b : GHC.Types.Int | notEmpty xs => ?b > 0}\n    ?a : {fix##63#a : GHC.Types.Int | ?a == (1  :  int)}","pos":{"spanInfo":{"startLine":192,"endLine":192,"endCol":29,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [a] | VV == xs && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [a] | notEmpty VV}\n \n  In Context\n    VV : {VV : [a] | VV == xs && len VV >= 0}\n    xs : {v : [a] | len v >= 0}","pos":{"spanInfo":{"startLine":188,"endLine":188,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [a] | VV == xs && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [a] | notEmpty VV}\n \n  In Context\n    VV : {VV : [a] | VV == xs && len VV >= 0}\n    xs : {v : [a] | len v >= 0}","pos":{"spanInfo":{"startLine":229,"endLine":229,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [[a]] | VV == ?a && len VV == len ?a && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [[a]] | notEmpty VV}\n \n  In Context\n    VV : {VV : [[a]] | VV == ?a && len VV == len ?a && len VV >= 0}\n    ?a : {fix##63#a : [[a]] | len ?a >= 0}","pos":{"spanInfo":{"startLine":336,"endLine":336,"endCol":29,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Integer.Type.Integer] | notEmpty VV <=> false && null VV <=> true && VV == ?a && len VV == 0 && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Integer.Type.Integer] | notEmpty VV}\n \n  In Context\n    VV : {VV : [GHC.Integer.Type.Integer] | notEmpty VV <=> false && null VV <=> true && VV == ?a && len VV == 0 && len VV >= 0}\n    ?a : {fix##63#a : [GHC.Integer.Type.Integer] | notEmpty ?a <=> false && null ?a <=> true && len ?a == 0 && len ?a >= 0}","pos":{"spanInfo":{"startLine":296,"endLine":296,"endCol":16,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Types.Int] | VV == xs && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Types.Int] | notEmpty VV}\n \n  In Context\n    VV : {VV : [GHC.Types.Int] | VV == xs && len VV >= 0}\n    xs : {v : [GHC.Types.Int] | len v >= 0}","pos":{"spanInfo":{"startLine":80,"endLine":80,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Int | notEmpty xs => VV > 0 && VV == elems && VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | 0 /= VV}\n \n  In Context\n    VV    : {VV : GHC.Types.Int | notEmpty xs => VV > 0 && VV == elems && VV >= 0}\n    elems : {elems : GHC.Types.Int | notEmpty xs => elems > 0 && elems >= 0}\n    xs    : {v : [GHC.Types.Int] | len v >= 0}","pos":{"spanInfo":{"startLine":78,"endLine":78,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Types.Int] | VV == xs && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Types.Int] | notEmpty VV}\n \n  In Context\n    VV : {VV : [GHC.Types.Int] | VV == xs && len VV >= 0}\n    xs : {v : [GHC.Types.Int] | len v >= 0}","pos":{"spanInfo":{"startLine":173,"endLine":173,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : GHC.Types.Int | notEmpty xs => VV > 0 && VV == elems && VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : GHC.Types.Int | 0 /= VV}\n \n  In Context\n    VV    : {VV : GHC.Types.Int | notEmpty xs => VV > 0 && VV == elems && VV >= 0}\n    elems : {elems : GHC.Types.Int | notEmpty xs => elems > 0 && elems >= 0}\n    xs    : {v : [GHC.Types.Int] | len v >= 0}","pos":{"spanInfo":{"startLine":170,"endLine":170,"endCol":42,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [{v : GHC.Types.Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | VV == weights && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [{v : GHC.Types.Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | notEmpty VV}\n \n  In Context\n    VV  : {VV : [GHC.Types.Int] | VV == weights && len VV >= 0}\n    wxs : {wxs : [(GHC.Types.Int, GHC.Types.Int)] | notEmpty wxs && len wxs >= 0}\n    weights\n        : {weights : [GHC.Types.Int] | len weights >= 0}","pos":{"spanInfo":{"startLine":310,"endLine":310,"endCol":28,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [{v : GHC.Types.Int | notEmpty wxs => v > 0 && notEmpty weights => v > 0 && v > 0 && 0 < v}] | VV == elems && len VV >= 0}\n \n  not a subtype of Required type\n    VV : {VV : [{v : GHC.Types.Int | notEmpty wxs => v > 0 && v > 0 && 0 < v}] | notEmpty VV}\n \n  In Context\n    VV    : {VV : [GHC.Types.Int] | VV == elems && len VV >= 0}\n    wxs   : {wxs : [(GHC.Types.Int, GHC.Types.Int)] | notEmpty wxs && len wxs >= 0}\n    elems : {elems : [GHC.Types.Int] | len elems >= 0}\n    weights\n          : {weights : [GHC.Types.Int] | len weights >= 0}","pos":{"spanInfo":{"startLine":309,"endLine":309,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_04-measure-bool.lhs"},"realSpan":true}}]}}
{"o_errors":[],"o_vars":[],"o_bots":[],"o_types":[[{"spanInfo":{"startLine":549,"endLine":549,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector Int) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix Int) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":21,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[Integer] -> (Vector Integer)"]]],[{"spanInfo":{"startLine":301,"endLine":301,"endCol":38,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.False","{v : Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":188,"endLine":188,"endCol":22,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.True","{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":26,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YN","{v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test5","[{v : [[Char]] | size v == 2}]"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":39,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wg","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1W9","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":18,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZG","{v : Int | v == (20  :  int)}"]]],[{"spanInfo":{"startLine":295,"endLine":295,"endCol":30,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xj","x1:a\n-> x2:b\n-> {v : (a, b) | first v == x1 && second v == x2 && x_Tuple22 v == x2 && x_Tuple21 v == x1 && fst v == x1 && snd v == x2}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":47,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["as","{v : [a] | v == as && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [{v : (Vector Int) | vDim v > 0}] | size v == x1}\n-> {v : (Vector {v : (Vector Int) | vDim v > 0}) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":451,"endLine":451,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vHd","forall a. {v : (Vector a) | vDim v > 0} -> a"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vy","(Vector Integer)"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":50,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":28,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XX","((Vector a) -> a) -> {v : (Vector a) | vDim v == vDim ys}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":33,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wp","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && size v == 1 + size xs && len v == 1 + len xs && xsListSelector v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":316,"endLine":316,"endCol":11,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"a -> b"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vi","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":301,"endLine":301,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test2","forall a. {v : [(a, Bool)] | size v == 0}"]]],[{"spanInfo":{"startLine":617,"endLine":617,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(({v : (Vector a) | vDim v > 0}\n  -> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0})\n -> {v : (Vector {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}) | vDim v == rx && vDim v == vDim xs && vDim v > 0})\n-> ({v : (Vector a) | vDim v > 0}\n    -> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0})\n-> {v : (Vector {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}) | vDim v == rx && vDim v == vDim xs && vDim v > 0}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vBin","forall a b c.\n(a -> b -> c)\n-> x4:(Vector a)\n-> {v : (Vector b) | vDim v == vDim x4}\n-> {v : (Vector c) | vDim v == vDim x4}"]]],[{"spanInfo":{"startLine":105,"endLine":105,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(({v : (Vector a) | vDim v > 0}\n  -> {v : (Vector a) | vDim v == vDim ys && vDim v > 0})\n -> {v : (Vector {v : (Vector a) | vDim v == vDim ys && vDim v > 0}) | vDim v == rx && vDim v == vDim xs && vDim v > 0})\n-> ({v : (Vector a) | vDim v > 0}\n    -> {v : (Vector a) | vDim v == vDim ys && vDim v > 0})\n-> {v : (Vector {v : (Vector a) | vDim v == vDim ys && vDim v > 0}) | vDim v == rx && vDim v == vDim xs && vDim v > 0}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector Integer) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix Integer) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":452,"endLine":452,"endCol":29,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XL","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VY","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.size","forall a. [a] -> {v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":320,"endLine":320,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":540,"endLine":541,"endCol":41,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wk","{v : [{v : (Vector Integer) | vDim v > 0}]<\\x10 VV -> vDim v == vDim x10 && v /= x10 && vDim v > 0> | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":24,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zipWith","forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | size v == size x4}\n-> {v : [c] | size v == size x4}"]]],[{"spanInfo":{"startLine":273,"endLine":273,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":553,"endLine":554,"endCol":33,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vz","(Vector {v : (Vector Int) | vDim v > 0})"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["a","{VV : a | VV == a}"]]],[{"spanInfo":{"startLine":72,"endLine":72,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vElts","forall a. (Vector a) -> [a]"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["a","{VV : a | VV == a}"]]],[{"spanInfo":{"startLine":619,"endLine":619,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["yj","{v : (Vector a) | v == yj && vDim v == vDim xi && vDim v > 0}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":21,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y0","[a] -> a"]]],[{"spanInfo":{"startLine":620,"endLine":620,"endCol":29,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Matrix a)\n-> {v : (Matrix a) | mRow v == mCol x1 && mCol v == mRow x1}"]]],[{"spanInfo":{"startLine":618,"endLine":618,"endCol":29,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Ya","({v : (Vector a) | vDim v == vDim xi && vDim v > 0} -> a)\n-> {v : (Vector a) | vDim v == vDim ys'}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":30,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> {v : [a] | false}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":31,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vo","(Vector Int)"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vx","{v : (Vector Integer) | v == vx}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XP","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":387,"endLine":387,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.first","forall a b. x1:(a, b) -> {VV : a | VV == first x1}"]]],[{"spanInfo":{"startLine":495,"endLine":495,"endCol":28,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a"]]],[{"spanInfo":{"startLine":294,"endLine":294,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":360,"endLine":360,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.take","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1TY","{v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":32,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Za","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":647,"endLine":647,"endCol":7,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["c","{v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":42,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZF","{v : [[Char]] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":647,"endLine":647,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["r","{v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":19,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1X3","a"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":27,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["Data.Maybe.Nothing","forall a. {v : (Maybe a) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":298,"endLine":298,"endCol":29,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xs","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":316,"endLine":316,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WU","{v : [a] | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0 && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":579,"endLine":579,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.mat23","(Maybe {v : (Matrix Integer) | mRow v == 2 && mCol v == 2})"]]],[{"spanInfo":{"startLine":106,"endLine":107,"endCol":37,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XY","(Vector a) -> a"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":23,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.False","{v : Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":20,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Vector Integer)\n-> {v : (Vector Integer) | vDim v == vDim x1} -> Integer"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["r","{v : Int | v == r && 0 < v}"]]],[{"spanInfo":{"startLine":495,"endLine":495,"endCol":15,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VK","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":34,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VS","(Vector Int)"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["f","a -> b"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["y","a"]]],[{"spanInfo":{"startLine":631,"endLine":631,"endCol":31,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1V9","(Vector Integer)"]]],[{"spanInfo":{"startLine":630,"endLine":630,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UW","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":105,"endLine":105,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xi","{VV : (Vector a) | vDim VV > 0}"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":21,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[Integer] -> (Vector Integer)"]]],[{"spanInfo":{"startLine":554,"endLine":554,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Int] | size v == x1}\n-> {v : (Vector Int) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":617,"endLine":617,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xi","{VV : (Vector a) | vDim VV > 0}"]]],[{"spanInfo":{"startLine":567,"endLine":567,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":44,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["y","{v : (Vector a) | v == y && vDim v == vDim x}"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [a] | size v == x1}\n-> {v : (Vector a) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vCons","forall a.\na -> x2:(Vector a) -> {v : (Vector a) | vDim v == vDim x2 + 1}"]]],[{"spanInfo":{"startLine":579,"endLine":579,"endCol":33,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YX","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["cy","{v : Int | v == cy && 0 < v}"]]],[{"spanInfo":{"startLine":105,"endLine":107,"endCol":37,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XZ","{v : (Vector a) | vDim v > 0}\n-> {v : (Vector a) | vDim v == vDim ys && vDim v > 0}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["go","forall a. [a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":24,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Matrix a)\n-> {v : (Maybe (Matrix a)) | isJust v <=> true && fromJust v == x1}"]]],[{"spanInfo":{"startLine":378,"endLine":378,"endCol":31,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.partition","forall a.\n(a -> Bool)\n-> x3:[a]\n-> {v : ([a], [a]) | size first v + size second v == size x3}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":35,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":615,"endLine":615,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["cy","{v : Int | v == cy && 0 < v}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && v == ys && size v == size ys && len v == len ys && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":37,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Z9","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":554,"endLine":554,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vr","{v : Int | v == (5  :  int)}"]]],[{"spanInfo":{"startLine":554,"endLine":554,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vq","{v : Int | v == (4  :  int)}"]]],[{"spanInfo":{"startLine":78,"endLine":78,"endCol":26,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.mElts","forall a. (Matrix a) -> (Vector (Vector a))"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.take'","forall a.\nx1:{v : Int | v >= 0}\n-> {VV : [a] | x1 <= size VV} -> {v : [a] | size v == x1}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["r","{v : Int | v == r && 0 < v}"]]],[{"spanInfo":{"startLine":320,"endLine":320,"endCol":30,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["acc","{v : [a] | v == acc && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[a] -> a"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(((Vector a) -> a)\n -> {v : (Vector a) | vDim v == vDim ys && vDim v > 0})\n-> ((Vector a) -> a)\n-> {v : (Vector a) | vDim v == vDim ys && vDim v > 0}"]]],[{"spanInfo":{"startLine":361,"endLine":361,"endCol":20,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zipWith","forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | size v == size x4}\n-> {v : [c] | size v == size x4}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":50,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xg","{v : [a] | size v == size as && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"Bool"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vj","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test6","Integer"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zipOrNull","forall a b. [a] -> [b] -> [(a, b)]"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":13,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vg","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":26,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:[a]\n-> {v : [a] | size v == size x1} -> {v : [a] | size v == size x1}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vf","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":495,"endLine":495,"endCol":12,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vecFromList","forall a. [a] -> (Vector a)"]]],[{"spanInfo":{"startLine":378,"endLine":378,"endCol":8,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","{VV : [a] | VV == ys && size VV == size ys && len VV == len ys && len VV >= 0}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["yj","(Vector a)"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":38,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zm","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":11,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vx","(Vector a)"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":34,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VI","{v : [Int] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":39,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["bs","{v : [a] | v == bs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":298,"endLine":298,"endCol":35,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.True","{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":378,"endLine":378,"endCol":12,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["zs","{VV : [a] | VV == zs && size VV == size zs && len VV == len zs && len VV >= 0}"]]],[{"spanInfo":{"startLine":320,"endLine":320,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vTl","forall a.\nx1:{v : (Vector a) | vDim v > 0}\n-> {v : (Vector a) | vDim v == vDim x1 - 1}"]]],[{"spanInfo":{"startLine":378,"endLine":378,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":373,"endLine":373,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.partition","forall a.\n(a -> Bool)\n-> x3:[a]\n-> {v : ([a], [a]) | size first v + size second v == size x3}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":28,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","{v : (Vector {v : (Vector a) | vDim v == cy}) | v == ys}"]]],[{"spanInfo":{"startLine":346,"endLine":346,"endCol":10,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":44,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["f","a -> b -> c"]]],[{"spanInfo":{"startLine":553,"endLine":554,"endCol":33,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vy","{v : [{v : (Vector Int) | vDim v > 0}]<\\x10 VV -> vDim v == vDim x10 && v /= x10 && vDim v > 0> | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":31,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UV","(Vector Integer)"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.for","forall a b.\nx1:(Vector b) -> (b -> a) -> {v : (Vector a) | vDim v == vDim x1}"]]],[{"spanInfo":{"startLine":164,"endLine":164,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.I#","x1:Int# -> {v : Int | v == (x1  :  int)}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YR","{v : (Vector {v : (Vector a) | false}) | false}"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":34,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZM","{v : [[Char]] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(Vector a) -> [a]"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"a -> b -> c"]]],[{"spanInfo":{"startLine":187,"endLine":187,"endCol":9,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.notEmpty","forall a. x1:[a] -> {VV : Bool | Prop VV <=> notEmpty x1}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":36,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XB","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":71,"endLine":71,"endCol":25,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.vDim","forall a. (Vector a) -> Int"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":31,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zv","Int"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":32,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["b","{VV : a | VV == b}"]]],[{"spanInfo":{"startLine":365,"endLine":366,"endCol":43,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZO","{v : [{v : [[Char]] | len v >= 0}]<\\_ VV -> false> | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":647,"endLine":647,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.txgo","forall a.\nx1:{v : Int | v >= 0}\n-> x2:{v : Int | v >= 0}\n-> {v : (Vector {v : (Vector a) | vDim v == x1}) | vDim v == x2}\n-> {v : (Vector {v : (Vector a) | vDim v == x2}) | vDim v == x1}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":41,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zipWith","forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | size v == size x4}\n-> {v : [c] | size v == size x4}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":29,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{VV : a | false}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(a, b)\n-> x2:[(a, b)]\n-> {v : [(a, b)] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":618,"endLine":618,"endCol":25,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Vector {v : (Vector a) | vDim v == vDim xi && vDim v > 0})\n-> ({v : (Vector a) | vDim v == vDim xi && vDim v > 0} -> a)\n-> {v : (Vector a) | vDim v == vDim x1}"]]],[{"spanInfo":{"startLine":106,"endLine":106,"endCol":25,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Vector (Vector a))\n-> ((Vector a) -> a) -> {v : (Vector a) | vDim v == vDim x1}"]]],[{"spanInfo":{"startLine":619,"endLine":619,"endCol":34,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Vector a) -> {v : (Vector a) | vDim v == vDim x1} -> a"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["rs","{v : [a] | v == rs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":32,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x8 VV -> p2 x8> | first v == x1 && second v == x2 && x_Tuple22 v == x2 && x_Tuple21 v == x1 && fst v == x1 && snd v == x2}"]]],[{"spanInfo":{"startLine":301,"endLine":301,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xw","{v : [a] | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0 && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":540,"endLine":541,"endCol":41,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wl","(Vector {v : (Vector Integer) | vDim v > 0})"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VZ","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":102,"endLine":102,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.matProd","forall a. (Num a) => (Matrix a) -> (Matrix a) -> (Matrix a)"]]],[{"spanInfo":{"startLine":618,"endLine":618,"endCol":29,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys'","{v : (Vector {v : (Vector a) | vDim v > 0}) | v == ys' && vDim v == cy && vDim v > 0}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":387,"endLine":387,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["c","{v : Int | v == c && v >= 0}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YM","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.ok23","(Matrix Integer)"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["as","{v : [a] | v == as && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":44,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y3","{v : (Vector a) | vDim v == vDim x}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":11,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.dotProduct","forall a.\n(Num a) =>\nx2:(Vector a) -> {v : (Vector a) | vDim v == vDim x2} -> a"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":33,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZI","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":25,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.mRow","forall a. (Matrix a) -> Int"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":566,"endLine":566,"endCol":24,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.size","forall a. [a] -> {v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":319,"endLine":320,"endCol":34,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["go","[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":26,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.take","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":105,"endLine":105,"endCol":23,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Vector {v : (Vector a) | vDim v > 0})\n-> ({v : (Vector a) | vDim v > 0}\n    -> {v : (Vector a) | vDim v == vDim ys && vDim v > 0})\n-> {v : (Vector {v : (Vector a) | vDim v == vDim ys && vDim v > 0}) | vDim v == vDim x1}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":27,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.take'","forall a.\nx1:{v : Int | v >= 0}\n-> {VV : [a] | x1 <= size VV} -> {v : [a] | size v == x1}"]]],[{"spanInfo":{"startLine":617,"endLine":617,"endCol":23,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:(Vector {v : (Vector a) | vDim v > 0})\n-> ({v : (Vector a) | vDim v > 0}\n    -> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0})\n-> {v : (Vector {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}) | vDim v == vDim x1}"]]],[{"spanInfo":{"startLine":614,"endLine":614,"endCol":11,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.matProduct","forall a.\n(Num a) =>\nx2:(Matrix a)\n-> x3:{y : (Matrix a) | mCol x2 == mRow y}\n-> {v : (Matrix a) | mRow v == mRow x2 && mCol v == mCol x3}"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 + x2}"]]],[{"spanInfo":{"startLine":301,"endLine":301,"endCol":31,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.True","{v : Bool | Prop v && v == GHC.Types.True}"]]],[{"spanInfo":{"startLine":439,"endLine":439,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.badVec","(Vector Integer)"]]],[{"spanInfo":{"startLine":500,"endLine":500,"endCol":29,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YD","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Int] | size v == x1}\n-> {v : (Vector Int) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":619,"endLine":619,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xi","{v : (Vector a) | v == xi && vDim v > 0}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":37,"startCol":36,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":37,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["yj","{v : (Vector a) | v == yj}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VL","{v : Int | v == (4  :  int)}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> [a]"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":34,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YS","{v : (Matrix a) | mRow v == r && mCol v == c}"]]],[{"spanInfo":{"startLine":615,"endLine":615,"endCol":32,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["elts","{v : (Vector {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}) | v == elts && vDim v == rx && vDim v == vDim xs && vDim v > 0}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":32,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["elts","{v : (Vector {v : (Vector a) | vDim v == vDim ys && vDim v > 0}) | v == elts && vDim v == rx && vDim v == vDim xs && vDim v > 0}"]]],[{"spanInfo":{"startLine":617,"endLine":617,"endCol":9,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["elts","{v : (Vector {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}) | vDim v == rx && vDim v == vDim xs && vDim v > 0}"]]],[{"spanInfo":{"startLine":105,"endLine":105,"endCol":9,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["elts","{v : (Vector {v : (Vector a) | vDim v == vDim ys && vDim v > 0}) | vDim v == rx && vDim v == vDim xs && vDim v > 0}"]]],[{"spanInfo":{"startLine":497,"endLine":497,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vy","{v : (Vector Integer) | v == vy}"]]],[{"spanInfo":{"startLine":630,"endLine":630,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1Tb","Int"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":15,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.take","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VM","{v : Int | v == (5  :  int)}"]]],[{"spanInfo":{"startLine":439,"endLine":439,"endCol":26,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wx","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":631,"endLine":631,"endCol":31,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1V8","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":567,"endLine":567,"endCol":24,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.size","forall a. [a] -> {v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":452,"endLine":452,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":34,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VR","{v : [Int] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":378,"endLine":378,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1T2","a -> Bool"]]],[{"spanInfo":{"startLine":336,"endLine":336,"endCol":21,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> {v : [a] | false}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wn","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":554,"endLine":554,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vp","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":566,"endLine":566,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["r","{v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":47,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UL","{v : (Vector {v : (Vector a) | vDim v == r}) | vDim v == c}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":31,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1X7","{v : [a] | size v == size xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":437,"endLine":437,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XQ","Int"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1Tn","a -> b"]]],[{"spanInfo":{"startLine":413,"endLine":413,"endCol":29,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a"]]],[{"spanInfo":{"startLine":579,"endLine":579,"endCol":24,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[[Integer]] -> (Maybe (Matrix Integer))"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":15,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.take","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":316,"endLine":316,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[a] -> [a] -> [a]"]]],[{"spanInfo":{"startLine":437,"endLine":437,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.okVec","(Vector Integer)"]]],[{"spanInfo":{"startLine":334,"endLine":334,"endCol":20,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":11,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["acc","[a]"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VE","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":13,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UN","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vh","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":17,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zx","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":13,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VB","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vk","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":44,"startCol":42,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["op","a -> b -> c"]]],[{"spanInfo":{"startLine":437,"endLine":437,"endCol":13,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wy","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zz","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":614,"endLine":614,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["my","(Matrix a)"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":376,"endLine":376,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","{v : [a] | v == ys && v == ys && size v == size ys && len v == len ys && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":27,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1X0","{v : (a, b) | first v == a && second v == b && x_Tuple22 v == b && x_Tuple21 v == a && fst v == a && snd v == b}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":8,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["msg","{v : [Char] | false}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":580,"endLine":580,"endCol":33,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Z2","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":34,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VJ","(Vector Int)"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UM","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":20,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["msg","{v : [Char] | false}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":8,"startCol":6,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["op","a -> b -> c"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Int] | size v == x1}\n-> {v : (Vector Int) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":31,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(Vector a) -> (Vector a) -> a"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.die","forall a. {v : [Char] | false} -> a"]]],[{"spanInfo":{"startLine":416,"endLine":416,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test10","{v : [[Char]] | size v == 2}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VA","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test3","forall a. {v : [([Char], a)] | size v == 0}"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":21,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.drop","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":39,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1W8","(Vector Integer)"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":14,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector Integer) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix Integer) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":31,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UU","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":416,"endLine":416,"endCol":19,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:[[Char]] -> {v : [[Char]] | size v == size x1}"]]],[{"spanInfo":{"startLine":416,"endLine":416,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test4","{v : [[Char]] | v == NumericMeasures.test4 && size v == 2 && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":437,"endLine":437,"endCol":22,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WD","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":10,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["f","a -> b -> c"]]],[{"spanInfo":{"startLine":373,"endLine":373,"endCol":30,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x8 VV -> p2 x8> | first v == x1 && second v == x2 && x_Tuple22 v == x2 && x_Tuple21 v == x1 && fst v == x1 && snd v == x2}"]]],[{"spanInfo":{"startLine":376,"endLine":376,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":32,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xf","a"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1W0","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":27,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WR","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && size v == 1 + size ys && len v == 1 + len ys && xsListSelector v == ys && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":629,"endLine":631,"endCol":33,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vd","{v : [{v : (Vector Integer) | vDim v > 0}]<\\x10 VV -> vDim v == vDim x10 && v /= x10 && vDim v > 0> | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vs","forall a. {VV : a | false}"]]],[{"spanInfo":{"startLine":320,"endLine":320,"endCol":30,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WT","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && size v == 1 + size acc && len v == 1 + len acc && xsListSelector v == acc && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":34,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.quickSort","forall a. (Ord a) => x2:[a] -> {v : [a] | size v == size x2}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wo","Int"]]],[{"spanInfo":{"startLine":566,"endLine":566,"endCol":28,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1Tu","{v : [[a]] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [{v : (Vector Integer) | vDim v > 0}] | size v == x1}\n-> {v : (Vector {v : (Vector Integer) | vDim v > 0}) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":40,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y2","x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":30,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1X4","{v : [a] | size v == size xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":36,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zc","{v : [a] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":29,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XA","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":39,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1X1","{v : [(a, b)] | not (size as < size bs) => size v == size bs && size as < size bs => size v == size as && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"a -> Bool"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zj","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":630,"endLine":630,"endCol":31,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1V1","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["n","{v : Int | v == n && v >= 0}"]]],[{"spanInfo":{"startLine":274,"endLine":274,"endCol":23,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(Vector a) -> [a]"]]],[{"spanInfo":{"startLine":631,"endLine":631,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":346,"endLine":346,"endCol":19,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":8,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":554,"endLine":554,"endCol":31,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vv","(Vector Int)"]]],[{"spanInfo":{"startLine":390,"endLine":390,"endCol":7,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.second","forall a b. x1:(a, b) -> {VV : b | VV == second x1}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && size v == n && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":412,"endLine":412,"endCol":22,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":439,"endLine":439,"endCol":11,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":620,"endLine":620,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y6","{v : (Matrix a) | v == my && mCol v == cy}"]]],[{"spanInfo":{"startLine":455,"endLine":455,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [a] | size v == x1}\n-> {v : (Vector a) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":376,"endLine":376,"endCol":31,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WQ","{v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x && size v == 1 + size zs && len v == 1 + len zs && xsListSelector v == zs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":631,"endLine":631,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1V3","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":647,"endLine":647,"endCol":26,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Err.undefined","forall a. a"]]],[{"spanInfo":{"startLine":439,"endLine":439,"endCol":13,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wq","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":27,"endLine":27,"endCol":16,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[Char] -> a"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && size v == n && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":35,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":618,"endLine":618,"endCol":35,"startCol":33,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["yj","{VV : (Vector a) | vDim VV == vDim xi && vDim VV > 0}"]]],[{"spanInfo":{"startLine":615,"endLine":615,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector a) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix a) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector a) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix a) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":74,"endLine":74,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.$fEqVector","forall a. (Eq a) => (Eq (Vector a))"]]],[{"spanInfo":{"startLine":567,"endLine":567,"endCol":6,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["c","{v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":41,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZA","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":244,"endLine":244,"endCol":18,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":42,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZE","{v : [[Char]] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":50,"startCol":48,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["bs","{v : [a] | v == bs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":549,"endLine":550,"endCol":35,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VV","{v : [{v : (Vector Int) | vDim v > 0}]<\\x10 VV -> vDim v == vDim x10 && v /= x10 && vDim v > 0> | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":8,"startCol":7,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","a"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.bad1","(Matrix Int)"]]],[{"spanInfo":{"startLine":316,"endLine":316,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.reverse","forall a. x1:[a] -> {v : [a] | size v == size x1}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":19,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [a] | size v == x1}\n-> {v : (Vector a) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zip","forall a b.\nx1:[a]\n-> x2:[b]\n-> {v : [(a, b)] | not (size x1 < size x2) => size v == size x2 && size x1 < size x2 => size v == size x1}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":25,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.mCol","forall a. (Matrix a) -> Int"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zu","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":618,"endLine":618,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(({v : (Vector a) | vDim v == vDim xi && vDim v > 0} -> a)\n -> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0})\n-> ({v : (Vector a) | vDim v == vDim xi && vDim v > 0} -> a)\n-> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}"]]],[{"spanInfo":{"startLine":456,"endLine":456,"endCol":22,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : [Char] | false} -> {v : (Vector a) | false}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":30,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":550,"endLine":550,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VN","{v : Int | v == (6  :  int)}"]]],[{"spanInfo":{"startLine":105,"endLine":105,"endCol":26,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XW","({v : (Vector a) | vDim v > 0}\n -> {v : (Vector a) | vDim v == vDim ys && vDim v > 0})\n-> {v : (Vector {v : (Vector a) | vDim v == vDim ys && vDim v > 0}) | vDim v == vDim xs}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":39,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":375,"endLine":375,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && v == zs && size v == size zs && len v == len zs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["n","{v : Int | v == n && v >= 0}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector a) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix a) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":617,"endLine":617,"endCol":26,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y9","({v : (Vector a) | vDim v > 0}\n -> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0})\n-> {v : (Vector {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}) | vDim v == vDim xs}"]]],[{"spanInfo":{"startLine":295,"endLine":295,"endCol":33,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1TH","{v : [a] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.ok32","(Matrix Integer)"]]],[{"spanInfo":{"startLine":260,"endLine":260,"endCol":42,"startCol":35,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zipWith","forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | size v == size x4}\n-> {v : [c] | size v == size x4}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":32,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["n","{v : Int | v == n && v >= 0}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":10,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.transpose","forall a.\nx1:(Matrix a)\n-> {v : (Matrix a) | mRow v == mCol x1 && mCol v == mRow x1}"]]],[{"spanInfo":{"startLine":298,"endLine":298,"endCol":22,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[Integer] -> [Bool] -> [(Integer, Bool)]"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":13,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","(Vector a)"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Integer] | size v == x1}\n-> {v : (Vector Integer) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VF","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":456,"endLine":456,"endCol":29,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XO","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":9,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["prod","x1:[a]\n-> {v : [a] | size v == size x1} -> {v : [a] | size v == size x1}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VC","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [{v : (Vector Integer) | vDim v > 0}] | size v == x1}\n-> {v : (Vector {v : (Vector Integer) | vDim v > 0}) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VD","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":39,"startCol":16,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zq","{v : [[Char]] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":9,"startCol":8,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector Int) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix Int) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":568,"endLine":568,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ok","forall a. {VV : a | false}"]]],[{"spanInfo":{"startLine":301,"endLine":301,"endCol":39,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xz","{v : [Bool] | notEmpty v <=> true && null v <=> false && xListSelector v == GHC.Types.True && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":22,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [Int] | size v == x1}\n-> {v : (Vector Int) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":541,"endLine":541,"endCol":39,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Wh","(Vector Integer)"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":29,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1YK","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":37,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XE","{v : [[Char]] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":620,"endLine":620,"endCol":32,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(Matrix a)"]]],[{"spanInfo":{"startLine":569,"endLine":569,"endCol":29,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{VV : a | false}"]]],[{"spanInfo":{"startLine":335,"endLine":335,"endCol":32,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zb","Int"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UO","{v : Int | v == (3  :  int)}"]]],[{"spanInfo":{"startLine":301,"endLine":301,"endCol":22,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[a] -> [Bool] -> [(a, Bool)]"]]],[{"spanInfo":{"startLine":316,"endLine":316,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":319,"endLine":319,"endCol":24,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["acc","{v : [a] | v == acc && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":262,"endLine":262,"endCol":47,"startCol":31,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xe","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":549,"endLine":549,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [{v : (Vector Int) | vDim v > 0}] | size v == x1}\n-> {v : (Vector {v : (Vector Int) | vDim v > 0}) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":348,"endLine":348,"endCol":35,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zg","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":80,"endLine":80,"endCol":27,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.$fEqMatrix","forall a. (Eq a) => (Eq (Matrix a))"]]],[{"spanInfo":{"startLine":92,"endLine":92,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vy","{v : (Vector a) | v == vy}"]]],[{"spanInfo":{"startLine":365,"endLine":365,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zy","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":376,"endLine":376,"endCol":31,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["zs","{v : [a] | v == zs && v == zs && size v == size zs && len v == len zs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":47,"startCol":43,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["rows","{v : (Vector {v : (Vector a) | vDim v == c}) | v == rows && vDim v == r}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zi","Int"]]],[{"spanInfo":{"startLine":295,"endLine":295,"endCol":26,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zipWith","forall a b c.\n(a -> b -> c)\n-> x4:[a]\n-> {v : [b] | size v == size x4}\n-> {v : [c] | size v == size x4}"]]],[{"spanInfo":{"startLine":629,"endLine":629,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UP","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":346,"endLine":346,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.drop","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":26,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.map","forall a b. (a -> b) -> x3:[a] -> {v : [b] | size v == size x3}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":13,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.drop","forall a. Int -> [a] -> [a]"]]],[{"spanInfo":{"startLine":163,"endLine":163,"endCol":23,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.size","forall a. [a] -> {v : Int | v >= 0}"]]],[{"spanInfo":{"startLine":615,"endLine":615,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["rx","{v : Int | v == rx && 0 < v}"]]],[{"spanInfo":{"startLine":373,"endLine":373,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WJ","{v : [a] | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0 && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":103,"endLine":103,"endCol":24,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["rx","{v : Int | v == rx && 0 < v}"]]],[{"spanInfo":{"startLine":295,"endLine":295,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1TI","{v : [a] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":293,"endLine":293,"endCol":21,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":22,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"[[Char]] -> [a] -> [([Char], a)]"]]],[{"spanInfo":{"startLine":629,"endLine":631,"endCol":33,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Ve","(Vector {v : (Vector Integer) | vDim v > 0})"]]],[{"spanInfo":{"startLine":107,"endLine":107,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xi","{v : (Vector a) | v == xi && vDim v > 0}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":16,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VX","{v : Int | v == (2  :  int)}"]]],[{"spanInfo":{"startLine":376,"endLine":376,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:a\n-> x2:[a]\n-> {v : [a] | notEmpty v <=> true && null v <=> false && xListSelector v == x1 && size v == 1 + size x2 && len v == 1 + len x2 && xsListSelector v == x2}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["b","{VV : a | VV == b}"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":34,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZL","{v : [[Char]] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":540,"endLine":540,"endCol":39,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1W7","{v : [Integer] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":31,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vn","{v : [Int] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":261,"endLine":261,"endCol":29,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":320,"endLine":320,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":373,"endLine":373,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1WI","{v : [a] | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0 && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["r","{v : Int | v == r && v >= 0}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":32,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XT","{v : [a] | size v == size xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":25,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:Int -> x2:Int -> {v : Int | v == x1 - x2}"]]],[{"spanInfo":{"startLine":360,"endLine":360,"endCol":20,"startCol":18,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.[]","forall a <p :: a a -> Prop>.\n{v : [a]<\\x6 VV -> p x6> | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0}"]]],[{"spanInfo":{"startLine":376,"endLine":376,"endCol":32,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Tuple.(,)","forall a b <p2 :: a b -> Prop>.\nx1:a\n-> x2:{VV : b<p2 x1> | true}\n-> {v : (a, b)<\\x8 VV -> p2 x8> | first v == x1 && second v == x2 && x_Tuple22 v == x2 && x_Tuple21 v == x1 && fst v == x1 && snd v == x2}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":44,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y4","{v : [a] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":561,"endLine":561,"endCol":12,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.matFromList","forall a. [[a]] -> (Maybe (Matrix a))"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":36,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"(a -> a -> a)\n-> x4:(Vector a)\n-> (Vector a)\n-> {v : (Vector a) | vDim v == vDim x4}"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":27,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | 0 < v}\n-> x2:{v : Int | 0 < v}\n-> x3:{v : (Vector {v : (Vector a) | vDim v == x2}) | vDim v == x1}\n-> {v : (Matrix a) | mElts v == x3 && mRow v == x1 && mCol v == x2}"]]],[{"spanInfo":{"startLine":554,"endLine":554,"endCol":31,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Vu","{v : [Int] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":618,"endLine":619,"endCol":40,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Yb","{v : (Vector a) | vDim v == vDim xi && vDim v > 0} -> a"]]],[{"spanInfo":{"startLine":451,"endLine":451,"endCol":20,"startCol":19,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":630,"endLine":630,"endCol":31,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1V2","(Vector Integer)"]]],[{"spanInfo":{"startLine":617,"endLine":619,"endCol":40,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Yc","{v : (Vector a) | vDim v > 0}\n-> {v : (Vector a) | vDim v == cy && vDim v == vDim fix && vDim v > 0}"]]],[{"spanInfo":{"startLine":320,"endLine":320,"endCol":34,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":50,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XI","{v : [a] | size v == size xs && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test4","{v : [[Char]] | size v == 2}"]]],[{"spanInfo":{"startLine":304,"endLine":304,"endCol":40,"startCol":38,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XF","{v : [a] | notEmpty v <=> false && null v <=> true && size v == 0 && len v == 0 && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":26,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zh","{v : Int | v == (1  :  int)}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":14,"startCol":12,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vy","(Vector a)"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":29,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zl","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":351,"endLine":351,"endCol":22,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zk","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":47,"startCol":45,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : [a] | v == xs && size v == n && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":245,"endLine":245,"endCol":25,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.map","forall a b. (a -> b) -> x3:[a] -> {v : [b] | size v == size x3}"]]],[{"spanInfo":{"startLine":347,"endLine":347,"endCol":24,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ds_d1U5","Int"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":38,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : Int | v >= 0}\n-> {v : (Vector {v : (Vector a) | vDim v == x1}) | vDim v == x2}\n-> {v : (Vector {v : (Vector a) | vDim v == x2}) | vDim v == x1}"]]],[{"spanInfo":{"startLine":298,"endLine":298,"endCol":6,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.test1","{v : [(Integer, Bool)] | size v == 2}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":29,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Y1","(Vector a) -> [a]"]]],[{"spanInfo":{"startLine":579,"endLine":580,"endCol":35,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Z5","{v : [[Integer]] | notEmpty v <=> true && null v <=> false && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":390,"endLine":390,"endCol":18,"startCol":17,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["y","{VV : a | VV == y}"]]],[{"spanInfo":{"startLine":298,"endLine":298,"endCol":43,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Xv","{v : [Bool] | notEmpty v <=> true && null v <=> false && xListSelector v == GHC.Types.True && len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":90,"endLine":90,"endCol":39,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1XS","x1:a\n-> x2:a\n-> {VV : a | x1 > 0 && x2 > 0 => VV >= x1 && VV >= x2 && x1 > 1 && x2 > 1 => VV > x1 && VV > x2 && x1 == 0 || x2 == 0 => VV == 0}"]]],[{"spanInfo":{"startLine":88,"endLine":88,"endCol":8,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.dotProd","forall a. (Num a) => (Vector a) -> (Vector a) -> a"]]],[{"spanInfo":{"startLine":244,"endLine":244,"endCol":4,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.map","forall a b. (a -> b) -> x3:[a] -> {v : [b] | size v == size x3}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":28,"startCol":27,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["f","a -> b"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":23,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"([a] -> a) -> [a] -> a"]]],[{"spanInfo":{"startLine":564,"endLine":564,"endCol":27,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : (Maybe (Matrix a)) | isJust v <=> false}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":42,"startCol":41,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{v : (Vector a) | v == x}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":29,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["c","{v : Int | v == c && 0 < v}"]]],[{"spanInfo":{"startLine":553,"endLine":553,"endCol":5,"startCol":1,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.bad2","(Matrix Int)"]]],[{"spanInfo":{"startLine":549,"endLine":550,"endCol":35,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1VW","(Vector {v : (Vector Int) | vDim v > 0})"]]],[{"spanInfo":{"startLine":446,"endLine":446,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":362,"endLine":362,"endCol":35,"startCol":22,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1Zw","{v : [a] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":499,"endLine":499,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vx","(Vector Integer)"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":40,"startCol":39,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["c","{v : Int | v == c && 0 < v}"]]],[{"spanInfo":{"startLine":617,"endLine":617,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : (Vector (Vector a)) | v == xs && vDim v == rx}"]]],[{"spanInfo":{"startLine":105,"endLine":105,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["xs","{v : (Vector (Vector a)) | v == xs && vDim v == rx}"]]],[{"spanInfo":{"startLine":620,"endLine":620,"endCol":14,"startCol":11,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["ys'","{VV : (Vector {VV : (Vector a) | vDim VV > 0}) | vDim VV == cy && vDim VV > 0}"]]],[{"spanInfo":{"startLine":114,"endLine":114,"endCol":21,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["n","{v : Int | v == n && v >= 0}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":31,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"((Vector a) -> [a]) -> (Vector a) -> [a]"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":31,"startCol":26,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1UK","x1:{v : (Vector {v : (Vector a) | vDim v == r}) | vDim v == c}\n-> {v : (Matrix a) | mElts v == x1 && mRow v == c && mCol v == r}"]]],[{"spanInfo":{"startLine":642,"endLine":642,"endCol":33,"startCol":32,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"({v : (Vector {v : (Vector a) | vDim v == r && vDim v == vDim rows && vDim v > 0}) | vDim v == c && vDim v > 0}\n -> (Matrix a))\n-> {v : (Vector {v : (Vector a) | vDim v == r && vDim v == vDim rows && vDim v > 0}) | vDim v == c && vDim v > 0}\n-> (Matrix a)"]]],[{"spanInfo":{"startLine":563,"endLine":563,"endCol":7,"startCol":5,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"{v : Bool | false}"]]],[{"spanInfo":{"startLine":486,"endLine":486,"endCol":15,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["y","{v : (Vector a) | vDim v == vDim x}"]]],[{"spanInfo":{"startLine":298,"endLine":298,"endCol":42,"startCol":37,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["GHC.Types.False","{v : Bool | not (Prop v) && v == GHC.Types.False}"]]],[{"spanInfo":{"startLine":478,"endLine":478,"endCol":30,"startCol":29,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[[null,"x1:{v : Int | v >= 0}\n-> x2:{v : [a] | size v == x1}\n-> {v : (Vector a) | vElts v == x2 && vDim v == x1}"]]],[{"spanInfo":{"startLine":647,"endLine":647,"endCol":14,"startCol":10,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["rows","{v : (Vector {v : (Vector a) | vDim v == c}) | vDim v == r}"]]],[{"spanInfo":{"startLine":366,"endLine":366,"endCol":25,"startCol":20,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["lq_anf__d1ZH","{v : [Char] | len v >= 0 && 0 <= size v}"]]],[{"spanInfo":{"startLine":91,"endLine":91,"endCol":25,"startCol":23,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["vx","{v : (Vector a) | v == vx}"]]],[{"spanInfo":{"startLine":272,"endLine":272,"endCol":33,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true},[["NumericMeasures.zip","forall a b.\nx1:[a]\n-> x2:[b]\n-> {v : [(a, b)] | not (size x1 < size x2) => size v == size x2 && size x1 < size x2 => size v == size x1}"]]]],"o_templs":[],"o_result":{"tag":"Unsafe","contents":[{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : (NumericMeasures.Vector GHC.Types.Int) | vDim VV == ?l && vDim VV == ?a && vDim VV == ?b && vDim VV == ?m && vDim VV == ?i && vDim VV == vDim ?o && vDim VV == vDim ?k && vDim VV > 0}\n \n  not a subtype of Required type\n    VV : {VV : (NumericMeasures.Vector GHC.Types.Int) | vDim VV == ?f}\n \n  In Context\n    VV : {VV : (NumericMeasures.Vector GHC.Types.Int) | vDim VV == ?l && vDim VV == ?a && vDim VV == ?b && vDim VV == ?m && vDim VV == ?i && vDim VV == vDim ?o && vDim VV == vDim ?k && vDim VV > 0}\n    ?k : {fix##63#k : (NumericMeasures.Vector GHC.Types.Int) | vElts ?k == ?q && vDim ?k == ?a}\n    ?q : {fix##63#q : [GHC.Types.Int] | notEmpty ?q <=> true && null ?q <=> false && xListSelector ?q == ?d && size ?q == 1 + size ?n && len ?q == 1 + len ?n && xsListSelector ?q == ?n && len ?q >= 0 && 0 <= size ?q}\n    ?b : {fix##63#b : GHC.Types.Int | ?b == (2  :  int)}\n    ?o : {fix##63#o : (NumericMeasures.Vector GHC.Types.Int) | vElts ?o == ?c && vDim ?o == ?m}\n    ?e : {fix##63#e : [GHC.Types.Int] | notEmpty ?e <=> false && null ?e <=> true && size ?e == 0 && len ?e == 0 && len ?e >= 0 && 0 <= size ?e}\n    ?i : {fix##63#i : GHC.Types.Int | ?i == (2  :  int)}\n    ?d : {fix##63#d : GHC.Types.Int | ?d == (4  :  int)}\n    ?a : {fix##63#a : GHC.Types.Int | ?a == (2  :  int)}\n    ?c : {fix##63#c : [GHC.Types.Int] | notEmpty ?c <=> true && null ?c <=> false && xListSelector ?c == ?g && size ?c == 1 + size ?h && len ?c == 1 + len ?h && xsListSelector ?c == ?h && len ?c >= 0 && 0 <= size ?c}\n    ?g : {fix##63#g : GHC.Types.Int | ?g == (1  :  int)}\n    ?j : {fix##63#j : [GHC.Types.Int] | notEmpty ?j <=> false && null ?j <=> true && size ?j == 0 && len ?j == 0 && len ?j >= 0 && 0 <= size ?j}\n    ?f : {fix##63#f : GHC.Types.Int | ?f == (3  :  int)}\n    ?h : {fix##63#h : [GHC.Types.Int] | notEmpty ?h <=> true && null ?h <=> false && xListSelector ?h == ?b && size ?h == 1 + size ?e && len ?h == 1 + len ?e && xsListSelector ?h == ?e && len ?h >= 0 && 0 <= size ?h}\n    ?n : {fix##63#n : [GHC.Types.Int] | notEmpty ?n <=> true && null ?n <=> false && xListSelector ?n == ?p && size ?n == 1 + size ?j && len ?n == 1 + len ?j && xsListSelector ?n == ?j && len ?n >= 0 && 0 <= size ?n}\n    ?p : {fix##63#p : GHC.Types.Int | ?p == (5  :  int)}\n    ?l : {fix##63#l : GHC.Types.Int | ?l == (2  :  int)}\n    ?m : {fix##63#m : GHC.Types.Int | ?m == (2  :  int)}","pos":{"spanInfo":{"startLine":553,"endLine":554,"endCol":33,"startCol":15,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Types.Int] | notEmpty VV <=> true && null VV <=> false && VV == ?d && xListSelector VV == ?f && size VV == 1 + size ?b && len VV == 1 + len ?b && xsListSelector VV == ?b && len VV >= 0 && 0 <= size VV}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Types.Int] | size VV == ?e}\n \n  In Context\n    VV : {VV : [GHC.Types.Int] | notEmpty VV <=> true && null VV <=> false && VV == ?d && xListSelector VV == ?f && size VV == 1 + size ?b && len VV == 1 + len ?b && xsListSelector VV == ?b && len VV >= 0 && 0 <= size VV}\n    ?b : {fix##63#b : [GHC.Types.Int] | notEmpty ?b <=> true && null ?b <=> false && xListSelector ?b == ?c && size ?b == 1 + size ?a && len ?b == 1 + len ?a && xsListSelector ?b == ?a && len ?b >= 0 && 0 <= size ?b}\n    ?e : {fix##63#e : GHC.Types.Int | ?e == (3  :  int)}\n    ?d : {fix##63#d : [GHC.Types.Int] | notEmpty ?d <=> true && null ?d <=> false && xListSelector ?d == ?f && size ?d == 1 + size ?b && len ?d == 1 + len ?b && xsListSelector ?d == ?b && len ?d >= 0 && 0 <= size ?d}\n    ?a : {fix##63#a : [GHC.Types.Int] | notEmpty ?a <=> false && null ?a <=> true && size ?a == 0 && len ?a == 0 && len ?a >= 0 && 0 <= size ?a}\n    ?c : {fix##63#c : GHC.Types.Int | ?c == (2  :  int)}\n    ?f : {fix##63#f : GHC.Types.Int | ?f == (1  :  int)}","pos":{"spanInfo":{"startLine":549,"endLine":549,"endCol":34,"startCol":25,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Integer.Type.Integer] | notEmpty VV <=> true && null VV <=> false && VV == ?c && xListSelector VV == ?a && size VV == 1 + size ?b && len VV == 1 + len ?b && xsListSelector VV == ?b && len VV >= 0 && 0 <= size VV}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Integer.Type.Integer] | size VV == ?g}\n \n  In Context\n    VV : {VV : [GHC.Integer.Type.Integer] | notEmpty VV <=> true && null VV <=> false && VV == ?c && xListSelector VV == ?a && size VV == 1 + size ?b && len VV == 1 + len ?b && xsListSelector VV == ?b && len VV >= 0 && 0 <= size VV}\n    ?b : {fix##63#b : [GHC.Integer.Type.Integer] | notEmpty ?b <=> true && null ?b <=> false && xListSelector ?b == ?e && size ?b == 1 + size ?h && len ?b == 1 + len ?h && xsListSelector ?b == ?h && len ?b >= 0 && 0 <= size ?b}\n    ?e : {fix##63#e : GHC.Integer.Type.Integer | ?e == 20}\n    ?d : {fix##63#d : [GHC.Integer.Type.Integer] | notEmpty ?d <=> false && null ?d <=> true && size ?d == 0 && len ?d == 0 && len ?d >= 0 && 0 <= size ?d}\n    ?a : {fix##63#a : GHC.Integer.Type.Integer | ?a == 10}\n    ?c : {fix##63#c : [GHC.Integer.Type.Integer] | notEmpty ?c <=> true && null ?c <=> false && xListSelector ?c == ?a && size ?c == 1 + size ?b && len ?c == 1 + len ?b && xsListSelector ?c == ?b && len ?c >= 0 && 0 <= size ?c}\n    ?g : {fix##63#g : GHC.Types.Int | ?g == (2  :  int)}\n    ?f : {fix##63#f : GHC.Integer.Type.Integer | ?f == 30}\n    ?h : {fix##63#h : [GHC.Integer.Type.Integer] | notEmpty ?h <=> true && null ?h <=> false && xListSelector ?h == ?f && size ?h == 1 + size ?d && len ?h == 1 + len ?d && xsListSelector ?h == ?d && len ?h >= 0 && 0 <= size ?h}","pos":{"spanInfo":{"startLine":439,"endLine":439,"endCol":26,"startCol":14,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [a]\n \n  not a subtype of Required type\n    VV : {VV : [a] | size VV == size xs}\n \n  In Context\n    VV : {VV : [a] | len VV >= 0 && 0 <= size VV}\n    xs : {v : [a] | len v >= 0 && 0 <= size v}","pos":{"spanInfo":{"startLine":316,"endLine":316,"endCol":29,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [a] | VV == ?a && len VV >= 0 && 0 <= size VV}\n \n  not a subtype of Required type\n    VV : {VV : [a] | size VV == size ?b}\n \n  In Context\n    VV : {VV : [a] | VV == ?a && len VV >= 0 && 0 <= size VV}\n    ?b : {fix##63#b : [a] | len ?b >= 0 && 0 <= size ?b}\n    ?a : {fix##63#a : [a] | len ?a >= 0 && 0 <= size ?a}","pos":{"spanInfo":{"startLine":295,"endLine":295,"endCol":36,"startCol":34,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [(GHC.Integer.Type.Integer, GHC.Types.Bool)]\n \n  not a subtype of Required type\n    VV : {VV : [(GHC.Integer.Type.Integer, GHC.Types.Bool)] | size VV == 2}\n \n  In Context\n    VV : {VV : [(GHC.Integer.Type.Integer, GHC.Types.Bool)] | len VV >= 0 && 0 <= size VV}","pos":{"spanInfo":{"startLine":298,"endLine":298,"endCol":43,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [(a, GHC.Types.Bool)]\n \n  not a subtype of Required type\n    VV : {VV : [(a, GHC.Types.Bool)] | size VV == 0}\n \n  In Context\n    VV : {VV : [(a, GHC.Types.Bool)] | len VV >= 0 && 0 <= size VV}","pos":{"spanInfo":{"startLine":301,"endLine":301,"endCol":39,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [([GHC.Types.Char], a)]\n \n  not a subtype of Required type\n    VV : {VV : [([GHC.Types.Char], a)] | size VV == 0}\n \n  In Context\n    VV : {VV : [([GHC.Types.Char], a)] | len VV >= 0 && 0 <= size VV}","pos":{"spanInfo":{"startLine":304,"endLine":304,"endCol":40,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [a] | VV == ys && len VV >= 0 && 0 <= size VV}\n \n  not a subtype of Required type\n    VV : {VV : [a] | size VV == size xs}\n \n  In Context\n    VV : {VV : [a] | VV == ys && len VV >= 0 && 0 <= size VV}\n    xs : {v : [a] | len v >= 0 && 0 <= size v}\n    ys : {ys : [a] | len ys >= 0 && 0 <= size ys}","pos":{"spanInfo":{"startLine":88,"endLine":88,"endCol":32,"startCol":30,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : (NumericMeasures.Vector a) | vDim VV == ?a && vDim VV == vDim ys && vDim VV > 0}\n \n  not a subtype of Required type\n    VV : {VV : (NumericMeasures.Vector a) | vDim VV == cy}\n \n  In Context\n    VV : {VV : (NumericMeasures.Vector a) | vDim VV == ?a && vDim VV == vDim ys && vDim VV > 0}\n    cy : {cy : GHC.Types.Int | 0 < cy}\n    ys : {ys : (NumericMeasures.Vector (NumericMeasures.Vector a)) | vDim ys == ?a}\n    ?a : {fix##63#a : GHC.Types.Int | 0 < ?a}","pos":{"spanInfo":{"startLine":103,"endLine":103,"endCol":32,"startCol":28,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : (NumericMeasures.Vector GHC.Integer.Type.Integer) | VV == vy}\n \n  not a subtype of Required type\n    VV : {VV : (NumericMeasures.Vector GHC.Integer.Type.Integer) | vDim VV == vDim vx}\n \n  In Context\n    VV : {VV : (NumericMeasures.Vector GHC.Integer.Type.Integer) | VV == vy}\n    vx : (NumericMeasures.Vector GHC.Integer.Type.Integer)\n    vy : (NumericMeasures.Vector GHC.Integer.Type.Integer)","pos":{"spanInfo":{"startLine":497,"endLine":497,"endCol":26,"startCol":24,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : (NumericMeasures.Matrix GHC.Integer.Type.Integer)\n \n  not a subtype of Required type\n    VV : {VV : (NumericMeasures.Matrix GHC.Integer.Type.Integer) | mRow VV == 2 && mCol VV == 2}\n \n  In Context\n    VV : (NumericMeasures.Matrix GHC.Integer.Type.Integer)","pos":{"spanInfo":{"startLine":579,"endLine":580,"endCol":35,"startCol":13,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [GHC.Types.Char] | VV == ?a && len VV >= 0 && 0 <= size VV}\n \n  not a subtype of Required type\n    VV : {VV : [GHC.Types.Char] | false}\n \n  In Context\n    VV : {VV : [GHC.Types.Char] | VV == ?a && len VV >= 0 && 0 <= size VV}\n    ?a : {fix##63#a : [GHC.Types.Char] | len ?a >= 0 && 0 <= size ?a}","pos":{"spanInfo":{"startLine":348,"endLine":348,"endCol":35,"startCol":21,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : [[GHC.Types.Char]]\n \n  not a subtype of Required type\n    VV : {VV : [[GHC.Types.Char]] | size VV == 2}\n \n  In Context\n    VV : {VV : [[GHC.Types.Char]] | len VV >= 0 && 0 <= size VV}","pos":{"spanInfo":{"startLine":351,"endLine":351,"endCol":39,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}},{"msg":"Liquid Type Mismatch\n  Inferred type\n    VV : {VV : [[GHC.Types.Char]] | len VV >= 0 && len VV >= len ?b && len VV >= len ?a && len VV >= len ?c}\n \n  not a subtype of Required type\n    VV : {VV : [[GHC.Types.Char]] | size VV == 2}\n \n  In Context\n    VV : {VV : [[GHC.Types.Char]] | len VV >= 0 && len VV >= len ?b && len VV >= len ?a && len VV >= len ?c && 0 <= size VV}\n    ?b : {fix##63#b : [[GHC.Types.Char]] | notEmpty ?b <=> false && null ?b <=> true && size ?b == 0 && len ?b == 0 && len ?b >= 0 && 0 <= size ?b}\n    ?a : {fix##63#a : [[GHC.Types.Char]] | notEmpty ?a <=> false && null ?a <=> true && size ?a == 0 && len ?a == 0 && len ?a >= 0 && 0 <= size ?a}\n    ?c : {fix##63#c : [[[GHC.Types.Char]]] | notEmpty ?c <=> false && null ?c <=> true && size ?c == 0 && len ?c == 0 && len ?c >= 0 && 0 <= size ?c}","pos":{"spanInfo":{"startLine":365,"endLine":366,"endCol":43,"startCol":9,"filename":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/src/flycheck_05-measure-int.lhs"},"realSpan":true}}]}}
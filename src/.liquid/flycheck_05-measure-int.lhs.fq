//qualif NonNull(v: [a])        : (? (nonnull([v])))
//qualif Null(v: [a])           : (~ (? (nonnull([v]))))
//qualif EqNull(v:Bool, ~A: [a]): (Prop(v) <=> (? (nonnull([~A]))))

qualif IsEmp(v:GHC.Types.Bool, ~A: [a]) : (Prop(v) <=> len([~A]) [ > ;  = ] 0)
qualif ListZ(v: [a])          : len([v]) [ = ; >= ; > ] 0 
qualif CmpLen(v:[a], ~A:[b])  : len([v]) [= ; >=; >; <=; <] len([~A]) 
qualif EqLen(v:int, ~A: [a])  : v = len([~A]) 
qualif LenEq(v:[a], ~A: int)  : ~A = len([v]) 
qualif LenAcc(v:int, ~A:[a], ~B: int): v = len([~A]) + ~B
qualif LenDiff(v:[a], ~A:int): len([v]) = (~A [ +; - ] 1)
//BOT: Do not delete EVER!

qualif Bot(v:@(0))    : 0 = 1 
qualif Bot(v:obj)     : 0 = 1 
qualif Bot(v:a)       : 0 = 1 
qualif Bot(v:bool)    : 0 = 1 
qualif Bot(v:int)     : 0 = 1 
qualif CmpZ(v:a)      : v [ < ; <= ; > ; >= ; = ; != ] 0
qualif Cmp(v:a,~A:a)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif Cmp(v:int,~A:int)  : v [ < ; <= ; > ; >= ; = ; != ] ~A
qualif One(v:int)     : v = 1
qualif True(v:bool)   : (? v) 
qualif False(v:bool)  : ~ (? v) 
qualif True1(v:GHC.Types.Bool)   : Prop(v)
qualif False1(v:GHC.Types.Bool)  : ~ Prop(v)


qualif Papp(v:a,~P:Pred a) : papp1(~P, v)
constant papp1 : func(1, [Pred @(0); @(0); bool])

qualif Papp2(v:a,~X:b,~P:Pred a b) : papp2(~P, v, ~X)
constant papp2 : func(4, [Pred @(0) @(1); @(2); @(3); bool])

qualif Papp3(v:a,~X:b, ~Y:c, ~P:Pred a b c) : papp3(~P, v, ~X, ~Y)
constant papp3 : func(6, [Pred @(0) @(1) @(2); @(3); @(4); @(5); bool])

constant Prop : func(0, [GHC.Types.Bool; bool])
qualif Fst(v : a, fix##126#Y : b): (v = fst([fix##126#Y]))
qualif Snd(v : a, fix##126#Y : b): (v = snd([fix##126#Y]))
qualif Auto(v : [t_a1Lj], fix##126#A0 : [t_a1Li]): (size([v]) = size([fix##126#A0]))
qualif Auto(v : [a_a1Gq], fix##126#A0 : [a_a1Gq]): (size([v]) = size([fix##126#A0]))
qualif Auto(y : FAppTy NumericMeasures.Matrix  a_a1Qg, fix##126#A0 : FAppTy NumericMeasures.Matrix  a_a1Qg): (mCol([fix##126#A0]) = mRow([y]))
qualif Auto(v : FAppTy NumericMeasures.Matrix  a_a1Qg, fix##126#A0 : FAppTy NumericMeasures.Matrix  a_a1Qg): (mRow([v]) = mRow([fix##126#A0]))
qualif Auto(v : FAppTy NumericMeasures.Matrix  a_a1Qg, fix##126#A0 : FAppTy NumericMeasures.Matrix  a_a1Qg): (mCol([v]) = mCol([fix##126#A0]))
qualif Auto(v : [t_a1Na], fix##126#A0 : [t_a1N9]): (size([v]) = size([fix##126#A0]))
qualif Auto(v : [a_a1Nb], fix##126#A0 : [t_a1N9]): (size([v]) = size([fix##126#A0]))
qualif Auto(v : [[GHC.Types.Char]]): (size([v]) = 2)
qualif Auto(v : [FAppTy (FAppTy fix##40##41#  t_a1KY)  t_a1KZ], fix##126#A0 : [t_a1KY], fix##126#A1 : [t_a1KZ]): ((size([fix##126#A0]) < size([fix##126#A1])) => (size([v]) = size([fix##126#A0])))
qualif Auto(v : [FAppTy (FAppTy fix##40##41#  t_a1KY)  t_a1KZ], fix##126#A0 : [t_a1KY], fix##126#A1 : [t_a1KZ]): ((~ ((size([fix##126#A0]) < size([fix##126#A1])))) => (size([v]) = size([fix##126#A1])))
qualif Auto(v : FAppTy NumericMeasures.Matrix  a_a1GZ, fix##126#A0 : FAppTy NumericMeasures.Matrix  a_a1GZ): (mRow([v]) = mCol([fix##126#A0]))
qualif Auto(v : FAppTy NumericMeasures.Matrix  a_a1GZ, fix##126#A0 : FAppTy NumericMeasures.Matrix  a_a1GZ): (mCol([v]) = mRow([fix##126#A0]))
qualif Auto(v : int): (v >= 0)
qualif Auto(v : int): (v >= 0)
qualif Auto(v : FAppTy NumericMeasures.Vector  (FAppTy NumericMeasures.Vector  a_a1GC), fix##126#A0 : int): (vDim([v]) = fix##126#A0)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1GC, fix##126#A0 : int): (vDim([v]) = fix##126#A0)
qualif Auto(v : FAppTy NumericMeasures.Vector  (FAppTy NumericMeasures.Vector  a_a1GC), fix##126#A0 : int): (vDim([v]) = fix##126#A0)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1GC, fix##126#A0 : int): (vDim([v]) = fix##126#A0)
qualif Auto(v : [[GHC.Types.Char]]): (size([v]) = 2)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1Mz, fix##126#A0 : FAppTy NumericMeasures.Vector  t_a1MA): (vDim([v]) = vDim([fix##126#A0]))
qualif Auto(v : FAppTy (FAppTy fix##40##41#  ([t_a1JZ]))  ([t_a1JZ]), fix##126#A0 : [t_a1JZ]): ((size([first([v])]) + size([second([v])])) = size([fix##126#A0]))
qualif Auto(v : int): (v >= 0)
qualif Auto(VV : t_a1Jt, fix##126#A0 : FAppTy (FAppTy fix##40##41#  t_a1Jt)  t_a1Ju): (VV = first([fix##126#A0]))
qualif Auto(VV : GHC.Types.Bool, fix##126#A0 : [a_a1FC]): ((? Prop([VV])) <=> (? notEmpty([fix##126#A0])))
qualif Auto(VV : t_a1Je, fix##126#A0 : FAppTy (FAppTy fix##40##41#  t_a1Jd)  t_a1Je): (VV = second([fix##126#A0]))
qualif Auto(v : FAppTy NumericMeasures.Matrix  int): (mRow([v]) = 2)
qualif Auto(v : FAppTy NumericMeasures.Matrix  int): (mCol([v]) = 2)
qualif Auto(v : int): (v >= 0)
qualif Auto(VV : [a_a1GL], fix##126#A0 : int): (fix##126#A0 <= size([VV]))
qualif Auto(v : [a_a1GL], fix##126#A0 : int): (size([v]) = fix##126#A0)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1P3, fix##126#A0 : FAppTy NumericMeasures.Vector  a_a1P3): (vDim([v]) = vDim([fix##126#A0]))
qualif Auto(v : [GHC.Types.Char]): false
qualif Auto(v : [[GHC.Types.Char]]): (size([v]) = 2)
qualif Auto(v : [FAppTy (FAppTy fix##40##41#  int)  GHC.Types.Bool]): (size([v]) = 2)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1Ix, fix##126#A0 : FAppTy NumericMeasures.Vector  a_a1Ix): (vDim([v]) = (vDim([fix##126#A0]) + 1))
qualif Auto(v : [FAppTy (FAppTy fix##40##41#  a_a1Oo)  GHC.Types.Bool]): (size([v]) = 0)
qualif Auto(v : FAppTy NumericMeasures.Vector  t_a1R7): (vDim([v]) > 0)
qualif Auto(v : [FAppTy (FAppTy fix##40##41#  ([GHC.Types.Char]))  b_a1Oz]): (size([v]) = 0)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1Rr): (vDim([v]) > 0)
qualif Auto(v : FAppTy NumericMeasures.Vector  a_a1Rr, fix##126#A0 : FAppTy NumericMeasures.Vector  a_a1Rr): (vDim([v]) = (vDim([fix##126#A0]) - 1))
qualif Auto(v : [a_a1KG], fix##126#A0 : [a_a1KG]): (size([v]) = size([fix##126#A0]))
qualif Auto(v : FAppTy NumericMeasures.Vector  b_a1Fh, fix##126#A0 : FAppTy NumericMeasures.Vector  a_a1Fg): (vDim([v]) = vDim([fix##126#A0]))
qualif Auto(v : FAppTy NumericMeasures.Vector  c_a1Fi, fix##126#A0 : FAppTy NumericMeasures.Vector  a_a1Fg): (vDim([v]) = vDim([fix##126#A0]))

constant Prop : func(0, [GHC.Types.Bool; bool])
constant x_Tuple64 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(3)])
constant x_Tuple54 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(3)])
constant xListSelector : func(1, [[@(0)]; @(0)])
constant notEmpty : func(1, [[@(0)]; bool])
constant addrLen : func(0, [int; int])
constant first : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                          @(0)])
constant second : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                           @(1)])
constant mElts : func(1, [FAppTy NumericMeasures.Matrix  @(0);
                          FAppTy NumericMeasures.Vector  (FAppTy NumericMeasures.Vector  @(0))])
constant size : func(1, [[@(0)]; int])
constant x_Tuple44 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(3)])
constant x_Tuple41 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(0)])
constant mRow : func(1, [FAppTy NumericMeasures.Matrix  @(0); int])
constant mCol : func(1, [FAppTy NumericMeasures.Matrix  @(0); int])
constant x_Tuple76 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(5)])
constant x_Tuple55 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(4)])
constant x_Tuple31 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(0)])
constant vElts : func(1, [FAppTy NumericMeasures.Vector  @(0);
                          [@(0)]])
constant vDim : func(1, [FAppTy NumericMeasures.Vector  @(0); int])
constant x_Tuple65 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(4)])
constant x_Tuple52 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(1)])
constant x_Tuple63 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(2)])
constant x_Tuple75 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(4)])
constant len : func(1, [[@(0)]; int])
constant xsListSelector : func(1, [[@(0)]; [@(0)]])
constant x_Tuple53 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(2)])
constant x_Tuple33 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(2)])
constant x_Tuple22 : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                              @(1)])
constant fromJust : func(1, [FAppTy Data.Maybe.Maybe  @(0); @(0)])
constant x_Tuple73 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(2)])
constant x_Tuple62 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(1)])
constant x_Tuple43 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(2)])
constant x_Tuple71 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(0)])
constant cmp : func(0, [GHC.Types.Ordering; GHC.Types.Ordering])
constant x_Tuple32 : func(3, [FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2);
                              @(1)])
constant x_Tuple42 : func(4, [FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3);
                              @(1)])
constant x_Tuple72 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(1)])
constant x_Tuple51 : func(5, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4);
                              @(0)])
constant x_Tuple21 : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                              @(0)])
constant null : func(1, [[@(0)]; bool])
constant x_Tuple61 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(0)])
constant fst : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                        @(0)])
constant x_Tuple74 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(3)])
constant x_Tuple66 : func(6, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5);
                              @(5)])
constant GHC.Types.True#6u : GHC.Types.Bool
constant GHC.Types.False#68 : GHC.Types.Bool
constant snd : func(2, [FAppTy (FAppTy fix##40##41#  @(0))  @(1);
                        @(1)])
constant isJust : func(1, [FAppTy Data.Maybe.Maybe  @(0); bool])
constant x_Tuple77 : func(7, [FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy (FAppTy fix##40##41#  @(0))  @(1))  @(2))  @(3))  @(4))  @(5))  @(6);
                              @(6)])
constant fix#GHC.Types.#58##35#64 : func(1, [@(0); [@(0)]; [@(0)]])
constant NumericMeasures.M#rpw : func(1, [int;
                                          int;
                                          FAppTy NumericMeasures.Vector  (FAppTy NumericMeasures.Vector  @(0));
                                          FAppTy NumericMeasures.Matrix  @(0)])
constant Data.Maybe.Just#r1a : func(1, [@(0);
                                        FAppTy Data.Maybe.Maybe  @(0)])
constant NumericMeasures.V#rpB : func(1, [int;
                                          [@(0)];
                                          FAppTy NumericMeasures.Vector  @(0)])
constant fix#GHC.Tuple.#40##44##41##35#74 : func(2, [@(0);
                                                     @(1);
                                                     FAppTy (FAppTy fix##40##41#  @(0))  @(1)])
constant fix#GHC.Types.#91##93##35#6m : func(1, [[@(0)]])
constant Data.Maybe.Nothing#r19 : func(1, [FAppTy Data.Maybe.Maybe  @(0)])
constant fix#GHC.Classes.D#58#Eq#35#r62 : func(1, [func(0, [@(0);
                                                            @(0);
                                                            GHC.Types.Bool]);
                                                   func(0, [@(0); @(0); GHC.Types.Bool]);
                                                   FAppTy GHC.Classes.Eq  @(0)])
bind 0 GHC.CString.unpackCString##0k : {VV : func(0, [int;
                                                      [GHC.Types.Char]]) | []}
bind 1 GHC.Prim.void##0l : {VV#418 : GHC.Prim.Void# | []}
bind 2 GHC.Types.False#68 : {VV#424 : GHC.Types.Bool | []}
bind 3 GHC.Types.I##6c : {VV : func(0, [int; int]) | []}
bind 4 GHC.Types.True#6u : {VV#427 : GHC.Types.Bool | []}
bind 5 GHC.Classes.not#r1d : {VV : func(0, [GHC.Types.Bool;
                                            GHC.Types.Bool]) | []}
bind 6 fix#GHC.Classes.#38##38##35#r1e : {VV : func(0, [GHC.Types.Bool;
                                                        GHC.Types.Bool;
                                                        GHC.Types.Bool]) | []}
bind 7 fix#GHC.Num.#36#fNumInteger#35#rhw : {VV#435 : FAppTy GHC.Num.Num  int | []}
bind 8 fix#GHC.Num.#36#fNumInt#35#rhy : {VV#436 : FAppTy GHC.Num.Num  int | []}
bind 9 fix#GHC.Classes.#36#fOrdChar#35#rqp : {VV#439 : FAppTy GHC.Classes.Ord  GHC.Types.Char | []}
bind 10 fix#GHC.Classes.#36#fEqInt#35#rru : {VV#441 : FAppTy GHC.Classes.Eq  int | []}
bind 11 fix#GHC.Classes.#36#fEqChar#35#rrS : {VV#442 : FAppTy GHC.Classes.Eq  GHC.Types.Char | []}
bind 12 GHC.Types.EQ#6U : {VV#446 : GHC.Types.Ordering | []}
bind 13 GHC.Types.LT#6S : {VV#447 : GHC.Types.Ordering | []}
bind 14 GHC.Types.GT#6W : {VV#448 : GHC.Types.Ordering | []}
bind 15 fix#GHC.Classes.#38##38##35#r1e : {VV : func(0, [GHC.Types.Bool;
                                                         GHC.Types.Bool;
                                                         GHC.Types.Bool]) | []}
bind 16 GHC.Types.True#6u : {v : GHC.Types.Bool | [(? Prop([v]))]}
bind 17 GHC.Types.False#68 : {v : GHC.Types.Bool | [(~ ((? Prop([v]))))]}
bind 18 GHC.Classes.not#r1d : {VV : func(0, [GHC.Types.Bool;
                                             GHC.Types.Bool]) | []}
bind 19 GHC.Integer.Type.smallInteger#0Z : {VV : func(0, [int;
                                                          int]) | []}
bind 20 GHC.Types.I##6c : {VV : func(0, [int; int]) | []}
bind 21 fix#GHC.Prim.#43##35##35#98 : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 22 fix#GHC.Prim.#45##35##35#99 : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 23 fix#GHC.Prim.#61##61##35##35#9o : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 24 fix#GHC.Prim.#62##61##35##35#9n : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 25 fix#GHC.Prim.#60##61##35##35#9r : {VV : func(0, [int;
                                                         int;
                                                         int]) | []}
bind 26 fix#GHC.Prim.#60##35##35#9q : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 27 fix#GHC.Prim.#62##35##35#9m : {VV : func(0, [int;
                                                     int;
                                                     int]) | []}
bind 28 GHC.Types.EQ#6U : {VV#472 : GHC.Types.Ordering | [(cmp([VV#472]) = GHC.Types.EQ#6U)]}
bind 29 GHC.Types.LT#6S : {VV#475 : GHC.Types.Ordering | [(cmp([VV#475]) = GHC.Types.LT#6S)]}
bind 30 GHC.Types.GT#6W : {VV#476 : GHC.Types.Ordering | [(cmp([VV#476]) = GHC.Types.GT#6W)]}
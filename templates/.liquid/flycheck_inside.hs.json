{"status":"unsafe","types":{"25":{"12":{"ann":"GHC.Prim.Addr# -> [GHC.Types.Char]","ident":"GHC.CString.unpackCString#","row":25,"col":12},"1":{"ann":"[GHC.Types.Char]","ident":"InTex.fnString","row":25,"col":1}},"28":{"1":{"ann":"Text.Pandoc.Definition.Inline\n-> (Data.Maybe.Maybe [GHC.Types.Char])","ident":"InTex.footnoteText","row":28,"col":1}},"13":{"7":{"ann":"[GHC.Types.Char]","ident":"s","row":13,"col":7},"28":{"ann":"Text.Pandoc.Options.ReaderOptions\n-> [GHC.Types.Char] -> Text.Pandoc.Definition.Pandoc","ident":"_","row":13,"col":28},"22":{"ann":"Text.Pandoc.Options.WriterOptions","ident":"lq_anf__dnGy","row":13,"col":22},"45":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":13,"col":45},"1":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char]","ident":"InTex.gimme","row":13,"col":1},"26":{"ann":"(Text.Pandoc.Definition.Pandoc -> [GHC.Types.Char])\n-> Text.Pandoc.Definition.Pandoc -> [GHC.Types.Char]","ident":"_","row":13,"col":26},"41":{"ann":"Text.Pandoc.Options.ReaderOptions","ident":"lq_anf__dnGA","row":13,"col":41},"11":{"ann":"Text.Pandoc.Options.WriterOptions\n-> Text.Pandoc.Definition.Pandoc -> [GHC.Types.Char]","ident":"_","row":13,"col":11}},"31":{"10":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":31,"col":10}},"19":{"15":{"ann":"{v : [GHC.Types.Char] | v == InTex.fnString && len v >= 0}","ident":"InTex.fnString","row":19,"col":15},"34":{"ann":"{v : [GHC.Types.Char] | v == args && len v >= 0}","ident":"args","row":19,"col":34},"39":{"ann":"x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | len v == len x1 + len v}","ident":"_","row":19,"col":39},"5":{"ann":"[GHC.Types.Char]","ident":"res","row":19,"col":5},"27":{"ann":"[GHC.Types.Char]\n-> exists [Text.Pandoc.Definition.Pandoc].[GHC.Types.Char]","ident":"_","row":19,"col":27},"24":{"ann":"x1:[GHC.Types.Char]\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | len v == len x1 + len v}","ident":"_","row":19,"col":24},"42":{"ann":"{v : [GHC.Types.Char] | null v <=> false && len v >= 0}","ident":"lq_anf__dnHk","row":19,"col":42}},"29":{"15":{"ann":"[GHC.Types.Char] -> [GHC.Types.Char] -> GHC.Types.Bool","ident":"_","row":29,"col":15},"28":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":29,"col":28},"6":{"ann":"{v : [GHC.Types.Char] | v == InTex.fnString && len v >= 0}","ident":"InTex.fnString","row":29,"col":6}},"30":{"15":{"ann":"([GHC.Types.Char] -> (Data.Maybe.Maybe [GHC.Types.Char]))\n-> ({v : [GHC.Types.Char] | v == s && len v == len s && len v >= 0}\n    -> [GHC.Types.Char])\n-> {v : [GHC.Types.Char] | v == s && len v == len s && len v >= 0}\n-> exists [[GHC.Types.Char]].(Data.Maybe.Maybe [GHC.Types.Char])","ident":"_","row":30,"col":15},"37":{"ann":"{v : [GHC.Types.Char] | v == InTex.fnString && len v >= 0}","ident":"InTex.fnString","row":30,"col":37},"49":{"ann":"{v : [GHC.Types.Char] | v == s && len v >= 0}","ident":"s","row":30,"col":49},"22":{"ann":"({v : [GHC.Types.Char] | len v >= 0 && len v <= len s}\n -> [GHC.Types.Char])\n-> (x4:{v : [GHC.Types.Char] | v == s && len v == len s && len v >= 0}\n    -> {v : [GHC.Types.Char] | len v >= 0 && len v <= len s && len v <= len x4})\n-> x5:{v : [GHC.Types.Char] | v == s && len v == len s && len v >= 0}\n-> exists [{v : [GHC.Types.Char] | len v >= 0 && len v <= len s && len v <= len x5}].[GHC.Types.Char]","ident":"_","row":30,"col":22},"30":{"ann":"x1:[GHC.Types.Char] -> {v : GHC.Types.Int | v == len x1}","ident":"_","row":30,"col":30},"17":{"ann":"x1:{v : [GHC.Types.Char] | len v > 0}\n-> {v : [GHC.Types.Char] | len v == len x1 - 1}","ident":"lq_anf__dnGK","row":30,"col":17},"47":{"ann":"({v : [GHC.Types.Char] | v == s && len v == len s && len v >= 0}\n -> (Data.Maybe.Maybe [GHC.Types.Char]))\n-> {v : [GHC.Types.Char] | v == s && len v == len s && len v >= 0}\n-> (Data.Maybe.Maybe [GHC.Types.Char])","ident":"_","row":30,"col":47},"24":{"ann":"x1:GHC.Types.Int\n-> x2:[GHC.Types.Char]\n-> {v : [GHC.Types.Char] | not (x1 >= 0) => len v == len x2 && x1 >= 0 => len v == if (len x2 < x1) then 0 else len x2 - x1}","ident":"_","row":30,"col":24},"10":{"ann":"x1:[GHC.Types.Char]\n-> {v : (Data.Maybe.Maybe [GHC.Types.Char]) | isJust v <=> true && fromJust v == x1}","ident":"lq_anf__dnGJ","row":30,"col":10}},"23":{"19":{"ann":"Text.Pandoc.Definition.Inline","ident":"_","row":23,"col":19}},"18":{"31":{"ann":"(Text.Pandoc.Definition.Pandoc -> [GHC.Types.Char])\n-> ([GHC.Types.Char] -> Text.Pandoc.Definition.Pandoc)\n-> [GHC.Types.Char]\n-> exists [Text.Pandoc.Definition.Pandoc].[GHC.Types.Char]","ident":"_","row":18,"col":31},"16":{"ann":"Text.Pandoc.Options.WriterOptions\n-> Text.Pandoc.Definition.Pandoc -> [GHC.Types.Char]","ident":"_","row":18,"col":16},"46":{"ann":"Text.Pandoc.Options.ReaderOptions","ident":"lq_anf__dnHf","row":18,"col":46},"5":{"ann":"[GHC.Types.Char]\n-> exists [Text.Pandoc.Definition.Pandoc].[GHC.Types.Char]","ident":"parsed","row":18,"col":5},"27":{"ann":"Text.Pandoc.Options.WriterOptions","ident":"lq_anf__dnHd","row":18,"col":27},"33":{"ann":"Text.Pandoc.Options.ReaderOptions\n-> [GHC.Types.Char] -> Text.Pandoc.Definition.Pandoc","ident":"_","row":18,"col":33}},"16":{"56":{"ann":"[GHC.Types.Char] -> Text.Pandoc.Definition.Format","ident":"_","row":16,"col":56},"45":{"ann":"Text.Pandoc.Definition.Format\n-> [GHC.Types.Char] -> Text.Pandoc.Definition.Inline","ident":"_","row":16,"col":45},"1":{"ann":"Text.Pandoc.Definition.Inline -> Text.Pandoc.Definition.Inline","ident":"InTex.readFootnotes","row":16,"col":1},"70":{"ann":"{v : [GHC.Types.Char] | v == res && len v >= 0}","ident":"res","row":16,"col":70},"16":{"ann":"Text.Pandoc.Definition.Inline\n-> (Data.Maybe.Maybe [GHC.Types.Char])","ident":"_","row":16,"col":16},"63":{"ann":"{v : [GHC.Types.Char] | len v >= 0}","ident":"lq_anf__dnHm","row":16,"col":63}},"10":{"1":{"ann":"(GHC.Types.IO ())","ident":"InTex.main","row":10,"col":1},"8":{"ann":"(Text.Pandoc.Definition.Inline -> Text.Pandoc.Definition.Inline)\n-> (GHC.Types.IO ())","ident":"_","row":10,"col":8},"21":{"ann":"Text.Pandoc.Definition.Inline -> Text.Pandoc.Definition.Inline","ident":"InTex.readFootnotes","row":10,"col":21}},"32":{"18":{"ann":"forall a. {v : (Data.Maybe.Maybe a) | isJust v <=> false}","ident":"Data.Maybe.Nothing","row":32,"col":18}}},"errors":[{"start":{"line":30,"column":17},"stop":{"line":30,"column":21},"message":"/Users/rjhala/research/liquid/liquidhaskell/docs/tutorial/templates/flycheck_inside.hs:30:17-20: Error: Liquid Type Mismatch\n  Inferred type\n    VV : [Char] | len VV >= 0 && len VV <= len s\n \n  not a subtype of Required type\n    VV : [Char] | len VV > 0\n \n  In Context\n    VV : [Char] | len VV >= 0 && len VV <= len s\n    s  : [Char] | len s >= 0"}]}